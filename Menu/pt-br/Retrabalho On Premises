{"DashboardDefinitionRoles":[{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81","AccessRoleName":"Administrator"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81","AccessRoleName":"Requester Profile"}],"Id":"305403ff-ba14-422a-b410-59dacdaa9c81","Name":"Dashboard Retrabalho","Active":true,"Location":0,"DocumentId":"00000000-0000-0000-0000-000000000000","DocumentName":"","DocumentTypeName":null,"DocumentsConfiguration":"[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"workspaces\":false},\"fields\":[]}]","Templates":[],"DashboardDefinitionComponents":[{"Id":"8710eec3-c1fd-4293-a091-268dfa9c1fed","Name":"Motivos","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":3,"Parameters":"[{\"WidgetSubTitle\":\"Retrabalho por Motivos\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":0,\"WidgetRows\":15,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Jobs\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  v.Motive,\\r\\n\\t\\tv.Jobs,\\r\\n\\t\\t(sum(v.Jobs) over ()) JobsGrandTotal\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tv.Motive, \\r\\n\\t\\t\\t\\tsum(1) as Jobs \\r\\n\\t\\tfrom\\tSkillAnalyticsReWork v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere\\tv.Motive is not null\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ and cast(v.[ModifiedOn] as Date) between @FromDate and @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\tand Year(v.ModifiedOn) = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\t\\tv.Motive\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"year\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_ReWork_Per_Motive/execute","Configuration":"{\n \"type\": \"doughnut\",\n  \"series\": [{\n      \"argumentField\":\"Motive\",\n      \"valueField\":\"Jobs\",\n      \"name\":\"Atividades\",\n      \"label\":false\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n        \"mode\": \"topN\",\n        \"topCount\": 10\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n            \"enabled\": true,\n            \"format\": \"#,###.#\",\n            \"customizeTooltip\": \"function(e) { return { text: this.argumentText + '<br>' + this.seriesName + ': ' + this.valueText };}\"\n        },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\":{\"size\":8}\n  }\n}","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81"},{"Id":"65fff4ef-20e6-46a4-b53a-397fc0844cfc","Name":"Top 10 Executores","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":2,"Parameters":"[{\"WidgetSubTitle\":\"Retrabalho por Executores\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":0,\"WidgetRows\":15,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Projects\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.Executors,\\r\\n\\t\\tv.Jobs,\\r\\n\\t\\t(sum(v.Jobs) over ()) JobsGrandTotal\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tv.Executors, \\r\\n\\t\\t\\t\\tsum(1) as Jobs \\r\\n\\t\\tfrom\\tSkillAnalyticsReWork v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere   v.Executors is not null\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ and cast(v.[ModifiedOn] as Date) between @FromDate and @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\tand Year(v.ModifiedOn) = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\t\\tv.Executors\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"year\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_ReWork_Per_Executor/execute","Configuration":"{\n \"type\": \"doughnut\",\n  \"series\": [{\n      \"argumentField\":\"Executors\",\n      \"valueField\":\"Jobs\",\n      \"name\":\"Atividades\",\n      \"label\":false\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n        \"mode\": \"topN\",\n        \"topCount\": 10,\n\"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n            \"enabled\": true,\n            \"format\": \"#,###.#\",\n            \"customizeTooltip\": \"function(e) { return { text: this.argumentText + '<br>' + this.seriesName + ': ' + this.valueText };}\"\n        },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\":{\"size\":8}\n  }\n}","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81"},{"Id":"ebe908dd-7165-4999-8454-a61d5148f25b","Name":"An?lise de Retrabalho","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":4,"Parameters":"[{\"WidgetSubTitle\":\"Retrabalho por Departamento, Cliente & Projeto\",\"WidgetType\":\"pivotgrid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":15,\"WidgetRows\":16,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Jobs\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.Client,\\r\\n\\t\\tv.Department,\\r\\n\\t\\tv.Project,\\r\\n\\t\\tv.Jobs,\\r\\n\\t\\t(sum(v.Jobs) over (Partition by Department)) JobsPerDepartment,\\r\\n\\t\\t(sum(v.Jobs) over (Partition by Client)) JobsPerClient,\\r\\n\\t\\t(sum(v.Jobs) over ()) JobsGrandTotal\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tv.CommercialClient as Client,\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.Project, \\r\\n\\t\\t\\t\\tsum(1) as Jobs \\r\\n\\t\\tfrom\\tSkillAnalyticsReWork v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere   (1 = 1)\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ and cast(v.[ModifiedOn] as Date) between @FromDate and @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\tand Year(v.ModifiedOn) = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\t\\tv.CommercialClient,\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.Project\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"year\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_ReWork_Per_Client_Department_Project/execute","Configuration":"{\n  \"size\": {\n    \"height\": 280\n  },\n  \"allowSortingBySummary\": true,\n  \"allowSorting\": true,\n  \"allowFiltering\": true,\n  \"allowExpandAll\":true,\n  \"height\": 250,\n  \"showBorders\": true,\n  \"fieldPanel\": {\n      \"showColumnFields\": true,\n      \"showDataFields\": true,\n      \"showFilterFields\": true,\n      \"showRowFields\": true,\n      \"allowFieldDragging\": true,\n      \"visible\": true\n  },\n  \"wordWrapEnabled\":false,\n  \"dataSource\": {\n    \"fields\": [\n      {\n        \"dataField\": \"Client\",\n        \"dataType\": \"string\",\n        \"area\": \"row\",\n        \"expanded\":true\n      },\n      {\n        \"caption\": \"Departamento\",\n        \"width\": 120,\n        \"dataField\": \"Department\",\n        \"area\": \"column\",\n        \"expanded\":true\n      },\n      {\n        \"dataField\": \"Project\",\n        \"dataType\": \"string\",\n        \"area\": \"filter\",\n        \"expanded\":true\n      },\n       {\n        \"caption\": \"Atividades\",\n        \"dataField\": \"Jobs\",\n        \"area\": \"data\",\n        \"dataType\": \"number\",\n        \"summaryType\": \"sum\",\n        \"format\":\"#,##0\"\n      },\n     {\n        \"caption\": \"Projetos\",\n        \"dataField\": \"Projects\",\n        \"dataType\": \"number\",\n        \"summaryType\": \"sum\",\n        \"area\": \"data\",\n        \"format\":\"#,##0\"\n      }\n    ],\n    \"store\": null\n  },\n  \"onCellPrepared\": \"function(e) {var dataField = e.component.getDataSource().getAreaFields('data')[e.cell.dataIndex];if(e.area=='data' && dataField.caption=='Jobs') { if(e.cell.value>10){e.cellElement.css('background-color','#F57E4A').css('color','#ffffff');}if(e.cell.value>50){e.cellElement.css('background-color','#eb3573').css('color','#ffffff');}}}\"\n}","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81"},{"Id":"bad797f7-392f-47e7-8bd5-b158f8ca9a74","Name":"Top 10 Projetos","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":1,"Parameters":"[\r\n    {\r\n        \"WidgetSubTitle\": \"Retrabalho por Projeto\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 0,\r\n        \"WidgetRows\": 15,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"? Jobs\",\r\n                        \"metricFieldValue\": \"JobsGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.Project,\\r\\n\\t\\tv.Jobs,\\r\\n\\t\\t(sum(v.Jobs) over ()) JobsGrandTotal\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect  v.Project, \\r\\n\\t\\t\\t\\tsum(1) as Jobs \\r\\n\\t\\tfrom\\tSkillAnalyticsReWork v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere (1 = 1)\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ and cast(v.[ModifiedOn] as Date) between @FromDate and @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\tand Year(v.ModifiedOn) = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\t\\tv.Project\\r\\n) v\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"year\"\r\n            ]\r\n        }\r\n    }\r\n]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_ReWork_Per_Project/execute","Configuration":"{\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [{\n      \"argumentField\":\"Project\",\n      \"valueField\":\"Jobs\",\n      \"name\":\"Atividades\",\n      \"label\":false\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n        \"mode\": \"topN\",\n        \"topCount\": 10,\n\"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n            \"enabled\": true,\n            \"format\": \"#,###.#\",\n            \"customizeTooltip\": \"function(e) { return { text: this.argumentText + '<br>' + this.seriesName + ': ' + this.valueText };}\"\n        },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\":{\"size\":8}\n  }\n}","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81"},{"Id":"758b9fb8-5e6a-4070-8c2c-dab7b56cbcc7","Name":"","Active":true,"UseQuery":false,"Query":"","Size":12,"Order":0,"Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"","Configuration":"{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2020,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2020); SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                            return SkillsWorkflow.getMyCompanies('',\r\n                    0,\r\n                    0).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'\r\n                        });return res;\r\n                    });\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null && e.value != '' ) {\r\n                    SkillsWorkflow.setDashboardFilter('Company', e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent('CompanyId'); \r\n                            if (companyId == '00000000-0000-0000-0000-000000000000') {\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',\r\n                null,\r\n                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions', CompanyName:''\r\n                    });return res;\r\n                });\r\n            } else if (companyId != null) { \r\n                                param['companyId'\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,\r\n                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions', CompanyName:''\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('Division', e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            SW.setAttribute(e, '', 'class', 'ellipsis');\r\n            SW.setAttribute(e, data.Name, 'style', 'font-weight: bold');\r\n\r\n            SW.setAttribute(e, '', 'class', 'ellipsis');\r\n            SW.setAttribute(e, data.CompanyName, 'style', 'max-width: 47%; float: left');\r\n}\",\r\n\"displayExpr\": \"function (data) {  \r\n    if(!data) return 'All divisions'; \r\n    if( data.CompanyName && data.CompanyName != '' ) {\r\n        return data.CompanyName + ' - ' + data.Name;\r\n}\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n}; \r\n                    var divisionId = SW.getValueFromComponent('DivisionId'); \r\n                    var companyId = SW.getValueFromComponent('CompanyId'); \r\n                    if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') { \r\n                        param['divisionId'\r\n] = divisionId;\r\n                        param['companyId'\r\n] = companyId;\r\n} else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {\r\n                        param['divisionId'\r\n] = divisionId;\r\n}\r\n                    return SkillsWorkflow.executeAPI('GET', 'departments',param,\r\n{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments', CompanyName: '', DivisionName: ''\r\n});return res;\r\n})\r\n}\",\r\n    \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null && e.value != '') {\r\n                        SkillsWorkflow.setDashboardFilter('Department', e.value);\r\n} else {\r\n                        SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');\r\n}\r\n}\",\r\n\"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n\"onOpened\": \"function (e) {  e.component._popup.option('width', 350); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            debugger;\r\n            \r\n            SW.setAttribute(e, '', 'class', 'ellipsis');\r\n            SW.setAttribute(e, data.Name, 'style', 'font-weight: bold');\r\n\r\n            SW.setAttribute(e, '', 'class', 'ellipsis');\r\n            SW.setAttribute(e, data.CompanyName, 'style', 'max-width: 47%; float: left');\r\n\r\n            SW.setAttribute(e, '-', 'style', 'margin: 0px 3px; float: left');\r\n\r\n            SW.setAttribute(e, '', 'class', 'ellipsis');\r\n            SW.setAttribute(e, data.DivisionName, 'style', 'max-width: 47%; float: left');\r\n}\",\r\n\"displayExpr\": \"function (data) {\r\n    if(!data) return 'All departments';  \r\n    if( data.CompanyName != '' && data.DivisionName != '' )\r\n        return data.CompanyName + ' - ' + data.DivisionName + ' - ' + data.Name;\r\n    else if( data.CompanyName != '' )\r\n        return data.CompanyName + ' - - ' + data.Name;\r\n    else if( data.DivisionName != '' )\r\n        return data.DivisionName + ' - ' + data.Name;\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}","DashboardDefinitionId":"305403ff-ba14-422a-b410-59dacdaa9c81"}],"QueryText":null,"UseStore":false,"StoreEntity":null}
