{
    "DashboardDefinitionRoles": [],
    "Id": "24792572-840d-471e-9c85-5c4c99f63cd8",
    "Name": "Manager Activities",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"} ,\"update\":{\"endpoint\":\"\",\"model\":{} } ,\"create\":{\"endpoint\":\"\",\"model\":{} } ,\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"} ]} ,\"remove\":{\"endpoint\":\"\"} ,\"lookup\":{\"endpoint\":\"\"} ,\"lookupById\":{\"endpoint\":\"\"} } ,\"layout\":{\"create\":{} ,\"read\":{} ,\"patch\":{} } ,\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"} ,\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false} } ",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "2c376eec-bc33-48c9-a4e3-4f8ba4df97f1",
            "Name": "Manager Activities Dashboard",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":10,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]} ,\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null} } ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[]} } ]",
            "DashboardComponentType": {
                "Id": "cab97287-486a-4e86-98e8-7a4fddb29416",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);} , 500) } \",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); }  } \"\r\n            } ,\r\n            \"noDataText\": \"Please wait...\"\r\n        } ,\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            } ,\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,\r\n                    null,\r\n                    {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        } );return res;\r\n                    } )\r\n                } \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{} ).then( result =\u003e  { return Promise.resolve(result);} ) } \"\r\n            } ,\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            }  else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            } \r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        } \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);} \"\r\n    } \r\n} ,\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    } ,\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            } ; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    } );return res;\r\n                } )\r\n            }  else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    } );return res;\r\n                } )\r\n            } \r\n        } \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{} ).then( result =\u003e  { return Promise.resolve(result);} )} \"\r\n    } ,\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    }  else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    } \r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n} \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); } \",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n} \r\n} ,\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n} ,\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n    } ; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    }  \r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        } );return res;\r\n    } )\r\n} \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {} ).then( result =\u003e  { return Promise.resolve(result); }  ) } \"\r\n} ,\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n}  else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n} \r\n} \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); } \",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n} \r\n} \r\n]\r\n} ",
            "DashboardDefinitionId": "24792572-840d-471e-9c85-5c4c99f63cd8"
        } ,
        {
            "Id": "2f4705dc-9382-471b-b383-764fb3a3d1bf",
            "Name": "User Fields",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]} ,\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null} } ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT\\tjob.*, \\r\\n        duf.*, \\r\\n        ws.Name as StateName, \\r\\n        ws.Color as StateColor,\\r\\n        (select usr.Name from [User] usr, Deliverable del where del.Oid = job.Id and usr.Oid = del.CreatedBy) as CreatedByName,\\r\\n        (select string_agg(convert(nvarchar(50), ass.[User]), \u0027,\u0027) from Assignment ass, AssignmentType ast where ass.DocumentOid = job.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid) as ExecutorId,\\r\\n        (select string_agg(convert(nvarchar(50), usr2.Name), \u0027,\u0027) from Assignment ass, AssignmentType ast, [User] usr2 where usr2.Oid = ass.[User] and ass.DocumentOid = job.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid) as Executor,\\r\\n        (select STRING_AGG(convert(nvarchar(50), ass.[User]), \u0027,\u0027) from Assignment ass, AssignmentType ast where ass.DocumentOid = job.Oid and ast.Name = \u0027Responsible\u0027 and ass.AssignmentType = ast.Oid) AS ResponsibleId,\\r\\n        (select string_agg(convert(nvarchar(50), usr3.Name), \u0027,\u0027) from Assignment ass, AssignmentType ast, [User] usr3 where usr3.Oid = ass.[User] and ass.DocumentOid = job.Oid and ast.Name = \u0027Responsible\u0027 and ass.AssignmentType = ast.Oid) as Responsible\\r\\nFROM\\t[Analytics].[Job](@CurrentUserId) job LEFT OUTER JOIN Deliverable_userFields duf ON (job.Oid = duf.Oid) LEFT OUTER JOIN WorkflowState ws ON (job.StateId = ws.Oid) \\r\\nWHERE   job.[Date] BETWEEN @FromDate AND @ToDate  and\\r\\n        (job.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n        (job.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n        (job.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027) AND\\r\\n        ws.name in (\u0027Devolvido ao Solicitante\u0027, \u0027Em AprovaÃ§Ã£o AP/ExecuÃ§Ã£o\u0027, \u0027Em AprovaÃ§Ã£o do Cliente\u0027,\\r\\n            \u0027Em ExecuÃ§Ã£o\u0027, \u0027Em OrÃ§amentaÃ§Ã£o\u0027, \u0027Em Prep. AP / ExecuÃ§Ã£o\u0027, \u0027Em ProduÃ§Ã£o\u0027, \u0027Por Aprovar Internamente\u0027,\\r\\n            \u0027Em DistribuiÃ§Ã£o\u0027)\",\"mapping\":\"\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"]} } ]",
            "DashboardComponentType": {
                "Id": "cab97287-486a-4e86-98e8-7a4fddb29416",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    } ,\r\n    \"loadPanel\": {\r\n        \"enabled\": false\r\n    } ,\r\n    \"allowFiltering\": true,\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    } ,\r\n    \"editing\": {\r\n        \"mode\": \"cell\",\r\n        \"allowUpdating\": true\r\n    } ,\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    } ,\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    } ,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"StateName\",\r\n            \"caption\": \"Estado\",\r\n            \"name\": \"StateName\",\r\n            \"visibleIndex\": 2,\r\n            \"alignment\": \"left\",\r\n            \"width\": 80,\r\n            \"allowEditing\": false,\r\n            \"groupCellTemplate\": \"function(e, i) {\r\n                var color = i.component.option().dataSource.find(row =\u003e row.StateName == i.text).StateColor;\r\n                var h = document.createElement(\u0027span\u0027);\r\n                h.style.backgroundColor = color; \r\n                h.classList.add(\u0027documentStageColor\u0027);\r\n                e.append(h);\r\n                h = document.createElement(\u0027span\u0027);\r\n                var ht = \u0027 \u0027 + i.text + \u0027 (\u0027 + i.summaryItems[0].value + \u0027)\u0027; \r\n                h.innerHTML = ht;\r\n                e.append(h);\r\n            } \"\r\n        } ,\r\n        {\r\n            \"dataField\": \"Priority\",\r\n            \"name\": \"Priority\",\r\n            \"caption\": \"Prioridade\",\r\n            \"allowEditing\": false,\r\n            \"cellTemplate\": \"function(e, i) {\r\n        var h = document.createElement(\u0027DIV\u0027); \r\n        e.appendChild(h);\r\n        h.classList.add(\u0027fal\u0027);\r\n        if (i.value==2) \r\n        {\r\n          h.style[\u0027color\u0027\r\n                ] = \u0027#f7412d\u0027;\r\n          h.classList.add(\u0027fa-tachometer-fastest\u0027);\r\n            } \r\n        if (i.value==1)\r\n        {\r\n          h.style[\u0027color\u0027\r\n                ] = \u0027#3ba3f8\u0027;\r\n          h.classList.add(\u0027fa-tachometer-average\u0027);\r\n            } \r\n        if (i.value==0)\r\n        {\r\n          h.style[\u0027color\u0027\r\n                ] = \u0027#7ec880\u0027;\r\n          h.classList.add(\u0027fa-tachometer-slowest\u0027);\r\n            } \r\n        } \",\r\n    \"visibleIndex\": 6\r\n    } ,\r\n        {\r\n            \"name\": \"Tags\",\r\n            \"caption\": \"Tags\",\r\n            \"visibleIndex\": 5,\r\n            \"width\": 70,\r\n            \"allowEditing\": false,\r\n            \"cellTemplate\":\"function(e, i) {\r\n                    SW.executeAPI(\u0027GET\u0027,\u0027document/\u0027 + i.data.Id + \u0027/tags\u0027, { documentId:i.data.Id,documentType:\u0027deliverable\u0027 } ,null).then(x =\u003e {\r\n                        if (x != null \u0026\u0026 x.length \u003e 0) {\r\n                        var p = document.createElement(\u0027DIV\u0027); \r\n                        e.appendChild(p);\r\n                        SW.setAttribute(p, null,\u0027style\u0027,\u0027;display:flex;\u0027,false);\r\n                        var h = document.createElement(\u0027DIV\u0027); \r\n                        p.appendChild(h);\r\n                        SW.setAttribute(h, null,\u0027class\u0027,\u0027module-tags-list-for-lists\u0027,false);\r\n                        h.dataset[\u0027id\u0027] = i.data.Oid;\r\n                        var h0 = document.createElement(\u0027span\u0027); \r\n                        SW.setAttribute(h0, null,\u0027class\u0027,\u0027 module-tags-dot\u0027,false);\r\n                        h.appendChild(h0);\r\n                        var h1 = document.createElement(\u0027span\u0027); \r\n                        h0.appendChild(h1);\r\n                        var h2 = document.createElement(\u0027span\u0027); \r\n                        SW.setAttribute(h2, null,\u0027class\u0027,\u0027 module-tags-text\u0027,false);\r\n                        SW.setAttribute(h2, null,\u0027style\u0027,\u0027;line-height: 16px;\u0027,false);\r\n                        h.appendChild(h2);\r\n                        h2.innerHTML = x[0].Label;\r\n                        SW.setAttribute(h, null,\u0027style\u0027,\u0027;background-color:\u0027 + x[0].Color ,false);\r\n                    } ;\r\n                } );\r\n            } \"\r\n        } ,\r\n        {\r\n            \"dataField\": \"Company\",\r\n            \"caption\": \"Companhia\",\r\n            \"allowEditing\": false,\r\n            \"visible\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"caption\": \"Cliente\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 100,\r\n            \"groupIndex\": 2\r\n        } ,\r\n        {\r\n            \"dataField\": \"Division\",\r\n            \"caption\": \"DivisÃ£o\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 200,\r\n            \"groupIndex\": 0\r\n        } ,\r\n        {\r\n            \"dataField\": \"Department\",\r\n            \"caption\": \"Departamento\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 300,\r\n            \"groupIndex\": 1\r\n        } ,\r\n        {\r\n            \"dataField\": \"Name\",\r\n            \"caption\": \"Atividade\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 4\r\n        } ,\r\n        {\r\n            \"dataField\": \"Number\",\r\n            \"caption\": \"Numero\",\r\n            \"allowEditing\": false,\r\n            \"visible\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Data\",\r\n            \"allowEditing\": false,\r\n            \"dataType\": \"date\",\r\n            \"format\": \"shortDate\",\r\n            \"editorOptions\": {\r\n                \"type\": \"datetime\"\r\n            } ,\r\n            \"visibleIndex\": 7\r\n        } ,\r\n        {\r\n            \"dataField\": \"PO Number\",\r\n            \"dataType\": \"string\",\r\n            \"visible\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"Middle Delivery\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"shortDate\",\r\n            \"editorOptions\": {\r\n                \"type\": \"datetime\"\r\n            } ,\r\n            \"visible\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"Country\",\r\n            \"dataType\": \"string\",\r\n            \"visible\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"Desafio Semana\",\r\n            \"dataType\": \"string\",\r\n            \"visibleIndex\": 9\r\n        } ,\r\n        {\r\n            \"dataField\": \"Ponto de AtenÃ§Ã£o\",\r\n            \"dataType\": \"string\",\r\n            \"visibleIndex\": 10\r\n        } ,\r\n        {\r\n            \"dataField\": \"EndDateAndTime\",\r\n            \"caption\": \"Hora ConclusÃ£o\",\r\n            \"alignment\": \"center\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"HH:mm\",\r\n            \"allowEditing\": false,\r\n            \"width\": 105,\r\n            \"visibleIndex\": 8\r\n        } ,\r\n        {\r\n            \"dataField\": \"Project\",\r\n            \"name\": \"Project\",\r\n            \"caption\": \"Projeto\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 3\r\n        } ,\r\n        {\r\n            \"dataField\": \"CreatedByName\",\r\n            \"caption\": \"Criado por\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 12\r\n        } ,\r\n   {\r\n            \"dataField\": \"Executor\",\r\n            \"name\": \"Executor\",\r\n            \"caption\": \"Executado por\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 11\r\n        } , \r\n        {\r\n            \"dataField\": \"Responsible\",\r\n            \"name\": \"Responsible\",\r\n            \"caption\": \"ResponsÃ¡veis por\",\r\n            \"allowEditing\": false,\r\n            \"visibleIndex\": 1\r\n        } ,    \r\n        {\r\n            \"dataField\": \"ExecutorId\",\r\n            \"caption\": \"Executores\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"width\": 100,\r\n            \"allowEditing\": false,\r\n            \"visible\": false,\r\n            \"cellTemplate\": \"function(e, i) {\r\n                if (i.text == \u0027\u0027) return; \r\n                var executors = i.text.split(\u0027,\u0027);\r\n                var h = document.createElement(\u0027DIV\u0027);\r\n                e.appendChild(h);\r\n                h.style[\u0027text-align\u0027]= \u0027center\u0027; \r\n                h.style[\u0027display\u0027] = \u0027flex\u0027;\r\n                h.style[\u0027justify-content\u0027] = \u0027flex-end\u0027;\r\n                function myFunction(item, index) {\r\n                    var img = document.createElement(\u0027img\u0027); \r\n                    h.appendChild(img);\r\n                    img.src = SkillsWorkflow.getUserImages([item]);\r\n                    img.style[\u0027border-radius\u0027] = \u002740px\u0027; \r\n                    img.height=\u002716\u0027;\r\n                    img.width=\u002716\u0027;\r\n                } \r\n                executors.forEach( (item, index) =\u003e myFunction(item, index));\r\n            } \"\r\n        } ,\r\n        {\r\n            \"dataField\": \"ResponsibleId\",\r\n            \"caption\": \"ResponsÃ¡veis\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"width\": 100,\r\n            \"allowEditing\": false,\r\n            \"visible\": false,\r\n            \"cellTemplate\": \"function(e, i) {\r\n                if (i.text == \u0027\u0027) return; \r\n                var responsibles = i.text.split(\u0027,\u0027);\r\n                var h = document.createElement(\u0027DIV\u0027);\r\n                e.appendChild(h);\r\n                h.style[\u0027text-align\u0027]= \u0027center\u0027; \r\n                h.style[\u0027display\u0027] = \u0027flex\u0027;\r\n                h.style[\u0027justify-content\u0027] = \u0027flex-end\u0027;\r\n                function myFunction(item, index) {\r\n                    var img = document.createElement(\u0027img\u0027); \r\n                    h.appendChild(img);\r\n                    img.src = SkillsWorkflow.getUserImages([item]);\r\n                    img.style[\u0027border-radius\u0027] = \u002740px\u0027; \r\n                    img.height=\u002716\u0027;\r\n                    img.width=\u002716\u0027;\r\n                } \r\n                responsibles.forEach( (item, index) =\u003e myFunction(item, index));\r\n            } \"\r\n        } \r\n    ],\r\n    \"summary\": {\r\n        \"groupItems\": [\r\n            {\r\n                \"column\": \"Title\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"{0} \",\r\n                \"alignment\": \"left\"\r\n            } \r\n        ]\r\n    } ,\r\n    \"onRowUpdating\": \"function(e){ SW.executeAPI(\u0027PUT\u0027, \u0027v3/documentUserFieldValues\u0027, null, { \u0027DocumentTypeName\u0027:\u0027Deliverable\u0027, \u0027DocumentId\u0027:e.key.Id, \u0027DocumentUserFieldValues\u0027:Object.entries(e.newData).map(([k, v]) =\u003e ({\u0027ColumnName\u0027:k, \u0027Value\u0027:v} )) } ); } \",\r\n    \"onRowClick\": \"function(e){if(e.rowType==\u0027data\u0027) SkillsWorkflow.preview(e.key, \u0027job\u0027);} \"\r\n} ",
            "DashboardDefinitionId": "24792572-840d-471e-9c85-5c4c99f63cd8"
        } ,
        {
            "Id": "821e1b74-9e2d-45c7-b559-decb9c86e2be",
            "Name": "Manager Activities Dashboard",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]} ,\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null} } ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT  \\tDATEADD(dd, - (DATEPART(dw, job.[Date] - 2)), job.[Date]) AS WeekStart, \\r\\n\\t\\t\\t[Year], \\r\\n\\t\\t\\t[Month], \\r\\n\\t\\t\\tCONVERT(int, CONCAT(year(job.[Date]), DATEPART(wk, job.[Date]))) as [YearWeek], \\r\\n\\t\\t\\tSUM(CASE WHEN job.StateTypeCode IN (6) THEN 1 ELSE 0 END) as [Closed],\\r\\n\\t\\t\\tSUM(CASE WHEN job.StateTypeCode NOT IN (6) THEN -1 ELSE 0 END) as [Open]\\r\\nFROM    \\t[Analytics].[Job](@CurrentUserId) job\\r\\nWHERE   \\tYear(job.[Date]) = @year AND\\r\\n\\t\\t\\t(job.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) AND\\r\\n\\t\\t\\t(job.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) AND\\r\\n\\t\\t\\t(job.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nGROUP BY\\tDATEADD(dd, - (DATEPART(dw, job.[Date] - 2)), job.[Date]), [Year], [Month], CONVERT(int, CONCAT(year(job.[Date]), DATEPART(wk, job.[Date])))\\r\\nUNION ALL\\r\\nSELECT\\t\\tMIN(Day) as WeekStart,\\r\\n\\t\\t\\tYEAR(MIN(Day)) [Year],\\r\\n\\t\\t\\tMONTH(MIN(Day)) [Month],\\r\\n\\t\\t\\tConvert(int, CONCAT(year(MIN(Day)), DATEPART(wk, MIN(Day)))) as [YearWeek], \\r\\n        \\t0 as [Closed], \\r\\n        \\t0 as [Open]\\r\\nFROM \\t\\tYearDay WHERE Year(Day) = @year\\r\\nGROUP BY\\tDATEPART(yyyy, Day), DATEPART(ww, Day)\",\"mapping\":\"\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[\"year\",\"Company\",\"Department\",\"Division\"]} } ]",
            "DashboardComponentType": {
                "Id": "cab97287-486a-4e86-98e8-7a4fddb29416",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"onDrawn\": \"function(s) {\r\n      var sunday = new Date();\r\n      var lastDayOfWeek = 7 - sunday.getDay();\r\n      sunday.setDate(sunday.getDate() + lastDayOfWeek); \r\n      var monday = new Date(sunday);\r\n      monday.setDate(monday.getDate() - 6);\r\n      monday.setHours(0, 0, 0, 0);\r\n      sunday.setHours(23, 59, 59, 59);\r\n      s.component.option(\u0027value\u0027, [monday, sunday]);\r\n    } \",\r\n    \"size\": {\r\n        \"height\": 90\r\n    } ,\r\n    \"containerBackgroundColor\": \"#e0e0e0\",\r\n    \"selectedRangeColor\": \"#f5564a\",\r\n    \"chart\": {\r\n        \"commonSeriesSettings\": {\r\n            \"type\": \"steparea\",\r\n            \"argumentField\": \"WeekStart\"\r\n        } ,\r\n        \"series\": [\r\n            {\r\n                \"valueField\": \"Closed\"\r\n            } ,\r\n            {\r\n                \"valueField\": \"Open\"\r\n            }             \r\n        ]\r\n    } ,\r\n    \"scale\": {\r\n        \"minorTickInterval\": \"week\",\r\n        \"tickInterval\": \"week\",\r\n        \"valueType\": \"datetime\"\r\n    } ,\r\n    \"sliderMarker\": {\r\n        \"format\": \"monthAndDay\",\r\n        \"color\": \"#da5859\"\r\n    } ,\r\n    \"value\": [\r\n        \"2019/09/09\",\r\n        \"2019/09/15\"\r\n    ]\r\n} ",
            "DashboardDefinitionId": "24792572-840d-471e-9c85-5c4c99f63cd8"
        } 
    ],
    "Version": 2,
    "Default": false
} 
