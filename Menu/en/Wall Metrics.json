{
  "DashboardDefinitionRoles": [],
  "Id": "1fe868c3-84a7-4695-895b-4ffabf2cb67d",
  "Name": "Wall Metrics",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "0fdf8a73-4d25-471e-bcaa-15fee039828b",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":16,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select count(dj.[ClientId]) as CountLate\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) \u003c Convert(Date, CURRENT_TIMESTAMP) and (dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5)\\r\\n\\t\\tand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"searchPanel\":{\"visible\":false},\"width\":\"120\",\"height\":\"83\",\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":false,\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"Delayed\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: rgb(247, 65, 45); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"dataField\":\"CountLate\",\"cellTemplate\":\"function(e, i) { SW.setAttribute(e, i.data.CountLate, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027) }\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "cbded0a8-266f-4553-a0bb-2e1b0fe338b3",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":8,\"WidgetYPosition\":16,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as TodayToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as TodayDone\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 0, CURRENT_TIMESTAMP))\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Today\",\r\n            \"caption\": \"Today\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: rgb(255, 199, 32); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data[\u0027TodayToDo\u0027];                var done = i.data[\u0027TodayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "09608cf2-1409-4197-8a31-5125e195755f",
      "Name": "Filters",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": 3,\r\n    \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 500) }\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,\r\n                    null,\r\n                    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        });return res;\r\n                    })\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n        \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n    }; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    } else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n    }\r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        });return res;\r\n    });\r\n}\",\r\n        \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n        if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n            SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n            SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n    \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "7bb394d6-f237-427f-a985-834cba57f528",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 8,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":8,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays2ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays2Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP))\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"width\":\"120\",\"height\":\"83\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+3);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            var final = SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);            element.append(final);        }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {             var toDo = i.data[\u0027MoreDays2ToDo\u0027];            var done = i.data[\u0027MoreDays2Done\u0027];            var aux = done + \u0027 / \u0027 + toDo;            SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)        }\"}],\"onToolbarPreparing\":\"null\"}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "af3f02c0-c15b-497c-a70b-89e9be8ff0b9",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays1ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays1Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP))\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"searchPanel\":{\"visible\":false},\"width\":\"120\",\"height\":\"83\",\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                var final = SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);                element.append(final);            }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays1ToDo\u0027];                var done = i.data[\u0027MoreDays1Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "6200c7c4-c564-431d-9f43-a8835702f886",
      "Name": "Pending Jobs",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":14,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\tdj.[UserId], \\r\\n\\t\\tdj.[User], \\r\\n\\t\\tu.[HasImage] UserHasImage,\\r\\n\\t\\tdj.Name,\\r\\n\\t\\tdj.[Project], \\r\\n\\t\\tconvert(Date, dj.[Date]) as Date,\\r\\n\\t\\tcc.Name as Client,\\r\\n\\t\\tcc.HasImage as ClientHasImage,\\r\\n\\t\\tcc.Oid as ClientId\\r\\nfrom [CommercialClient] cc, Analytics.Job(@CurrentUserId) dj\\r\\nleft join [User] u\\r\\non u.[Oid] = dj.[UserId]\\r\\nwhere \\tcc.Oid = dj.ClientId and\\r\\n\\t\\t(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5) and\\r\\n\\t\\tdj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7, 5) and \\r\\n\\t\\tdj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7, 0)\\r\\n\\t\\tand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\norder by dj.[Date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"height\":\"375\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":false,\"rowAlternationEnabled\":false,\"showBorders\":false,\"columns\":[{\"dataField\":\"ClientId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, \u0027client\u0027, \u0027medium\u0027,i.data[\u0027ClientHasImage\u0027], i.data[\u0027Client\u0027], i.data[\u0027ClientId\u0027]) }\",\"width\":50},{\"dataField\":\"Project\",\"name\":\"Project\",\"caption\":\"Project\",\"width\":150},{\"dataField\":\"UserId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, \u0027user\u0027, \u0027small\u0027,i.data[\u0027UserHasImage\u0027], i.data[\u0027User\u0027], i.data[\u0027UserId\u0027]) }\",\"width\":30},{\"dataField\":\"User\",\"name\":\"Name\",\"caption\":\"Executor\",\"width\":150},{\"dataField\":\"Name\",\"name\":\"Name\",\"caption\":\"Job\",\"width\":\"100%\"},{\"dataField\":\"Date\",\"caption\":\"Date\",\"dataType\":\"date\",\"format\":\"d MMM\",\"cellTemplate\":\"function(e, i) {              var month = i.data.Date.substring(5,            7);            var day = i.data.Date.substring(8,            10);            var date = new Date();            var showDate = i.text;            if (month \u003c date.getMonth() + 1) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:rgb(247,                65,                45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else if (month \u003e date.getMonth() + 1) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else if (day \u003c date.getDate()) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:rgb(247,                65,                45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else if (day == date.getDate()) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:rgb(255,                199,                32); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else if (day == date.getDate() + 1) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:rgb(126,                200,                128); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else if (day \u003e date.getDate() + 1) {                SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            }        }\",\"alignment\":\"center\",\"width\":70}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "e389d545-f6e7-43ad-908e-b470e19c5c77",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":16,\"WidgetYPosition\":16,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as TomorrowToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as TomorrowDone\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP))\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"width\":\"120\",\"height\":\"83\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"scrolling1\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"Tomorrow\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: rgb(126, 200, 128); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TomorrowToDo\u0027];                var done = i.data[\u0027TomorrowDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)    }\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "70593852-9209-4067-9869-bf348aa31f21",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 2,
      "Order": 11,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":40,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":8,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select CURRENT_TIMESTAMP as Date\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"100%\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"onContentReady\": \"function r(e) {\\r\\n    if (window.refreshTimeout)\\r\\n        clearTimeout(window.refreshTimeout); \\r\\n    window.refreshTimeout = setTimeout(function () { SW.refreshDashboard(); }, 60000 ) \\r\\n}\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Last Refresh\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM H:mm\",\r\n            \"headerCellTemplate\": \"function (e, i) {            var final = SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027);            e.append(final);    }\",\r\n            \"cellTemplate\": \"function(e, i) {             SW.setAttribute(e, i.text, \u0027style\u0027, \u0027font-size: 18px; font-weight: 700\u0027);}\",\r\n            \"alignment\": \"center\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "214fa82d-0432-430e-9534-d2cf7440c8fa",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 9,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":16,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays3ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays3Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP))\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"width\":\"120\",\"height\":\"83\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                var final = SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);                element.append(final);            }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays3ToDo\u0027];                var done = i.data[\u0027MoreDays3Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "5ada04f6-645f-4a5b-a0b6-e72c16e3c50e",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 4,
      "Order": 10,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Media\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetXPosition\": 24,\r\n        \"WidgetYPosition\": 20,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select DATEADD(week, DATEDIFF(day, 0, getdate())/7-5, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7-5, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7-5, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7-4, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7-4, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7-4, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7-3, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7-3, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7-3, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7-2, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7-2, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7-2, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7-1, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7-1, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7-1, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+1, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7+1, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7+1, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+2, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7+2, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7+2, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+3, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7+3, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7+3, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+4, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7+4, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7+4, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+5, 0) as Week,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere dj.[Date] \u003c DATEADD(week, DATEDIFF(day, 0, getdate())/7+5, 5) and dj.[Date] \u003e DATEADD(week, DATEDIFF(day, 0, getdate())/7+5, 0)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 70\r\n    },\r\n    \"customizeLabel\": \"function (p) {\r\n        if (p.index != 5 \u0026\u0026 p.series.name == \u0027To Do\u0027) \r\n            return { backgroundColor: \u0027white\u0027, font: { color: \u0027#f7412d\u0027\r\n        }\r\n    };\r\n}\",\r\n    \"argumentAxis\": {\r\n    \"argumentType\": \"datetime\"\r\n},\r\n\"commonAxisSettings\": {\r\n    \"visible\": false,\r\n    \"grid\": {\r\n        \"visible\": false\r\n    },\r\n    \"label\": {\r\n        \"visible\": false\r\n    },\r\n    \"tick\": {\r\n        \"visible\": false\r\n    }\r\n},\r\n\"commonSeriesSettings\": {\r\n    \"argumentField\": \"Week\",\r\n    \"type\": \"stackedbar\"\r\n},\r\n\"series\": [\r\n    {\r\n        \"valueField\": \"Done\",\r\n        \"name\": \"Done\",\r\n        \"color\": \"#0072C6\"\r\n    },\r\n    {\r\n        \"valueField\": \"ToDo\",\r\n        \"name\": \"To Do\",\r\n        \"color\": \"#f7412d\",\r\n        \"label\": {\r\n            \"visible\": true,\r\n            \"position\": \"outside\",\r\n            \"font\": {\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 700\r\n            }\r\n        }\r\n    }\r\n],\r\n\"tooltip\": {\r\n    \"argumentFormat\": \"monthAndDay\"\r\n}\r\n}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "0d3b8444-122f-42ed-8b5a-ebf1f41bbe1d",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":24,\"WidgetYPosition\":11,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.[User], v.UserId, v.Day, u.HasImage, sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect\\tdj.[User], dj.[UserId],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) \u003c Convert(Date, CURRENT_TIMESTAMP) then 0\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, CURRENT_TIMESTAMP) then 1\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP)) then 2\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP)) then 3\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP)) then 4\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP)) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)) as Done\\r\\nfrom\\tAnalytics.Job(@CurrentUserId) dj\\r\\nwhere (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by dj.[User], dj.[Date], dj.[UserId]\\r\\n) as v\\r\\nleft join [User] u\\r\\non u.Oid = v.UserId\\r\\ngroup by v.[User], v.[UserId], v.Day, u.HasImage\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"onContentReady\":\"function(e) {                        var dataSource = e.component.getDataSource();                        if (typeof dataSource === \u0027undefined\u0027) return;                        if (this.r) return;                        var q = dataSource.store().createQuery();                        dataSource._items.forEach((e) =\u003e { e.Delayed = 0;                                                            e.TodayDone = 0;                                                             e.TodayToDo = 0;                                                            e.TomorrowDone = 0;                                                             e.TomorrowToDo = 0;                                                             e.MoreDays1Done = 0;                                                             e.MoreDays1ToDo = 0;                                                             e.MoreDays2Done = 0;                                                             e.MoreDays2ToDo = 0;                                                             e.MoreDays3Done = 0;                                                            e.MoreDays3ToDo = 0;                                                             if (e.Day === 0) {                                                                e.Delayed = e.ToDo;        } else if (e.Day === 1) {                                                                e.TodayDone = e.Done;                                                                e.TodayToDo = e.ToDo;        } else if (e.Day === 2) {                                                                e.TomorrowDone = e.Done;                                                                e.TomorrowToDo = e.ToDo;        } else if (e.Day === 3) {                                                                e.MoreDays1Done = e.Done;                                                                e.MoreDays1ToDo = e.ToDo;        } else if (e.Day === 4) {                                                                e.MoreDays2Done = e.Done;                                                                e.MoreDays2ToDo = e.ToDo;        } else if (e.Day === 5) {                                                                e.MoreDays3Done = e.Done;                                                                e.MoreDays3ToDo = e.ToDo;        }    });                        var data = dataSource._items;                        e.component.option(\u0027dataSource\u0027, data);                        this.r = true;}\",\"stateStoring\":{\"enabled\":false},\"height\":\"213\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"single\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {SK.showImage(e, \u0027user\u0027, \u0027small\u0027, i.data[\u0027HasImage\u0027], i.data[\u0027User\u0027], i.data[\u0027UserId\u0027])}\",\"width\":30},{\"dataField\":\"User\",\"name\":\"User\",\"caption\":\"User\",\"width\":\"100%\"},{\"dataField\":\"Delayed\",\"name\":\"Delayed\",\"caption\":\"Delayed\",\"alignment\":\"center\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"width\":80},{\"dataField\":\"Today\",\"name\":\"Today\",\"caption\":\"Today\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(255, 199, 32); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TodayToDo\u0027        ];                var done = i.data[\u0027TodayDone\u0027        ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);    }\"},{\"dataField\":\"Tomorrow\",\"name\":\"Tomorrow\",\"caption\":\"Tomorrow\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(126, 200, 128); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TomorrowToDo\u0027    ];                var done = i.data[\u0027TomorrowDone\u0027    ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays1\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays1ToDo\u0027];                var done = i.data[\u0027MoreDays1Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays2\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays2ToDo\u0027];                var done = i.data[\u0027MoreDays2Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays3\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays3ToDo\u0027];                var done = i.data[\u0027MoreDays3Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    },
    {
      "Id": "29e75f23-9cc8-4aee-b136-f4d69e9a2c8f",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":24,\"WidgetYPosition\":2,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.Client, v.ClientId, v.Day, cc.HasImage, sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect\\tdj.[Client], dj.[ClientId],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) \u003c Convert(Date, CURRENT_TIMESTAMP) then 0\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, CURRENT_TIMESTAMP) then 1\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP)) then 2\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP)) then 3\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP)) then 4\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP)) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)) as Done\\r\\nfrom\\tAnalytics.Job(@CurrentUserId) dj\\r\\nwhere (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by dj.[Client], dj.[Date], dj.[ClientId]\\r\\n) as v\\r\\nleft join [CommercialClient] cc\\r\\non cc.Oid = v.ClientId\\r\\ngroup by v.Client, v.ClientId, v.Day, cc.HasImage\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"onContentReady\":\"function(e) {                        var dataSource = e.component.getDataSource();                        if (typeof dataSource === \u0027undefined\u0027) return;                        if (this.r) return;                        var q = dataSource.store().createQuery();                        dataSource._items.forEach((e) =\u003e { e.Delayed = 0;                                                            e.TodayDone = 0;                                                             e.TodayToDo = 0;                                                            e.TomorrowDone = 0;                                                             e.TomorrowToDo = 0;                                                             e.MoreDays1Done = 0;                                                             e.MoreDays1ToDo = 0;                                                             e.MoreDays2Done = 0;                                                             e.MoreDays2ToDo = 0;                                                             e.MoreDays3Done = 0;                                                            e.MoreDays3ToDo = 0;                                                             if (e.Day === 0) {                                                                e.Delayed = e.ToDo;        } else if (e.Day === 1) {                                                                e.TodayDone = e.Done;                                                                e.TodayToDo = e.ToDo;        } else if (e.Day === 2) {                                                                e.TomorrowDone = e.Done;                                                                e.TomorrowToDo = e.ToDo;        } else if (e.Day === 3) {                                                                e.MoreDays1Done = e.Done;                                                                e.MoreDays1ToDo = e.ToDo;        } else if (e.Day === 4) {                                                                e.MoreDays2Done = e.Done;                                                                e.MoreDays2ToDo = e.ToDo;        } else if (e.Day === 5) {                                                                e.MoreDays3Done = e.Done;                                                                e.MoreDays3ToDo = e.ToDo;        }    });                        var data = dataSource._items;                        e.component.option(\u0027dataSource\u0027, data);                        this.r = true;}\",\"stateStoring\":{\"enabled\":false},\"height\":\"213\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"onToolbarPreparing\":\"null\",\"selection\":{\"mode\":\"single\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, \u0027client\u0027, \u0027medium\u0027, i.data[\u0027HasImage\u0027], i.data[\u0027Client\u0027], i.data[\u0027ClientId\u0027])}\",\"width\":40},{\"dataField\":\"Client\",\"name\":\"Client\",\"caption\":\"Client\",\"width\":\"100%\"},{\"dataField\":\"Delayed\",\"caption\":\"Delayed\",\"alignment\":\"center\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"width\":80},{\"caption\":\"Today\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(255, 199, 32); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TodayToDo\u0027        ];                var done = i.data[\u0027TodayDone\u0027        ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);    }\"},{\"dataField\":\"Tomorrow\",\"name\":\"Tomorrow\",\"caption\":\"Tomorrow\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(126, 200, 128); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TomorrowToDo\u0027    ];                var done = i.data[\u0027TomorrowDone\u0027    ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays1\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+2);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays1ToDo\u0027];                var done = i.data[\u0027MoreDays1Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays2\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+3);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays2ToDo\u0027];                var done = i.data[\u0027MoreDays2Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"dataField\":\"MoreDays3\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+4);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, date, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MoreDays3ToDo\u0027];                var done = i.data[\u0027MoreDays3Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"}]}",
      "DashboardDefinitionId": "1fe868c3-84a7-4695-895b-4ffabf2cb67d"
    }
  ],
  "Version": 7,
  "Default": true
}