{
    "DashboardDefinitionRoles": [],
    "Id": "5ea8b292-bf84-4846-a6dd-e54a50c705e8",
    "Name": "Usage Time \u0026 Leaves",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"patchModel\":[{\"model\":\"\",\"translation\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "89da662a-f722-45fd-9643-080b8c41acce",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 4,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":16,\"WidgetYPosition\":2,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with leaves as\\r\\n(\\r\\n\\tselect convert(Date, ad.[Date]) as date, count(1) as countLeave\\r\\n\\tfrom  [Analytics].[DatamartLeave] ad\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = ad.[UserId]\\r\\n\\twhere Year(ad.[Date]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by convert(Date, ad.[Date])\\r\\n),\\r\\ntimesheetAux as \\r\\n(\\r\\n\\tselect convert(Date, t.[CreatedOn]) as date, count(1) as countTimesheet\\r\\n\\tfrom [Timesheet] t\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = t.[CreatedBy]\\r\\n\\twhere Year(t.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by convert(Date, t.[CreatedOn])\\r\\n),\\r\\ngetDat as\\r\\n(\\r\\n\\tselect l.date\\r\\n\\tfrom leaves l\\r\\n\\tunion \\r\\n\\tselect t.date\\r\\n\\tfrom timesheetAux t\\r\\n),\\r\\nmaintable as\\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(l.countLeave, 0) as countLeave,\\r\\n\\t\\tIsNull(t.countTimesheet, 0) as countTimesheet\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join leaves l\\r\\n\\ton l.date = gd.date\\r\\n\\tfull join timesheetAux t\\r\\n\\ton t.date = gd.date\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countLeave]) as totalLeave,\\r\\n\\t\\t\\tsum(m.[countTimesheet]) as totalTimesheet,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverages as\\r\\n(\\r\\n\\tselect (t.[totalLeave]/22) as averageLeave, \\r\\n\\t\\t\\t(t.[totalTimesheet]/22) as averageTimesheet,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalLeave]/22), (t.[totalTimesheet]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countLeave] as countLeave, m.[countTimesheet] as countTimesheet,\\r\\n\\t\\ta.[averageLeave] as averageLeave, a.[averageTimesheet] as averageTimesheet,\\r\\n\\t\\tt.[totalLeave] as totalLeave, t.[totalTimesheet] as totalTimesheet\\r\\nfrom [maintable] m\\r\\nfull join [averages] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"size\": {\r\n        \"height\": 240\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\",\r\n        \"label\": {\r\n            \"font\": {\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        }\r\n    },\r\n    \"panes\": [\r\n        {\r\n            \"name\": \"paneLeave\"\r\n        },\r\n        {\r\n            \"name\": \"paneTimesheet\"\r\n        }\r\n    ],\r\n    \"defaultPane\": \"paneTimesheet\",\r\n    \"series\": [\r\n        {\r\n            \"pane\": \"paneLeave\",\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countLeave\",\r\n            \"name\": \"Leaves\"\r\n        },\r\n        {\r\n            \"pane\": \"paneLeave\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageLeave\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneLeave\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalLeave\",\r\n            \"axis\": \"total\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneTimesheet\",\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countTimesheet\",\r\n            \"name\": \"Timesheets\"\r\n        },\r\n        {\r\n            \"pane\": \"paneTimesheet\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageTimesheet\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneTimesheet\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalTimesheet\",\r\n            \"axis\": \"total\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"pane\": \"paneTimesheet\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Timesheets\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"pane\": \"paneLeave\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Leaves\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"total\",\r\n            \"position\": \"right\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Total\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": false,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\"\r\n    }\r\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "10332cd4-5f34-4467-9354-268a3e45d527",
            "Name": "Com cascade",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": 6,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                        var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);\r\n                        var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100);\r\n                        return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,\r\n                    null,\r\n                    {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All companies\u0027\r\n                        });return res;\r\n                    })\r\n                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                    if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                    SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 200,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                        let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);\r\n                        let skip = loadOptions.skip || 0;\r\n                        let take = loadOptions.take || 20;\r\n                        var param = {name: searchValue,skip: skip,take: take\r\n            };\r\n                        var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027);\r\n                        if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            } else if (companyId != null) {\r\n                            param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027, param,\r\n                {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                    if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                    SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                        let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                        let skip = loadOptions.skip || 0; \r\n                        let take = loadOptions.take || 20;\r\n                        var param = { name: searchValue, skip: skip, take: take\r\n    }; \r\n                        var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                        var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                        if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                            param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                            param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    } else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                            param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n    } else if (companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (divisionId == null || divisionId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n\t\t\t                param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    }\r\n                        return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        });return res;\r\n    });\r\n}\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                                if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "7a664e41-0347-4d93-a942-41ef429a5b3e",
            "Name": "Activity over the Year",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 4,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with logins as \\r\\n(\\r\\n\\tselect\\tConvert(Date, ul.Day) as date,\\r\\n\\t\\t\\tcount(1) as countLog\\r\\n\\tfrom\\tUserLogon ul\\r\\n\\tinner join [User] u\\r\\n\\ton ul.[User] = u.[Oid]\\r\\n\\twhere Year(day) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by Convert(Date, ul.[Day])\\r\\n),\\r\\nblocks as\\r\\n(\\r\\n\\tselect\\tConvert(Date, al.UtcLogTime) as date,\\r\\n\\t\\t\\tcount(1) as countBlocked\\r\\n\\tfrom\\tAssistantLog al\\r\\n\\tinner join [User] u\\r\\n\\ton al.[User] = u.[Oid]\\r\\n\\twhere Year(al.UtcLogTime) = @year and al.OperationType = \u0027Block\u0027\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by Convert(Date, al.[UtcLogTime])\\r\\n),\\r\\ngetDat as \\r\\n(\\r\\n\\tselect l.date\\r\\n\\tfrom logins l\\r\\n\\tunion\\r\\n\\tselect b.date\\r\\n\\tfrom blocks b\\r\\n),\\r\\nmaintable as\\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(l.countLog, 0) as countLog,\\r\\n\\t\\tIsNull(b.countBlocked, 0) as countBlock\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join logins l\\r\\n\\ton l.date = gd.[date]\\r\\n\\tfull join blocks b\\r\\n\\ton b.date = gd.[date]\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countLog]) as totalLog,\\r\\n\\t\\t\\tsum(m.[countBlock]) as totalBlock,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverages as\\r\\n(\\r\\n\\tselect (t.[totalLog]/22) as averageLog,\\r\\n\\t\\t\\t(t.[totalBlock]/22) as averageBlock,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalLog]/22), (t.[totalBlock]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countLog] as countLog, m.[countBlock] as countBlock,\\r\\n\\t\\ta.[averageLog] as averageLog, a.[averageBlock] as averageBlock,\\r\\n\\t\\tt.[totalLog] as totalLog, t.[totalBlock] as totalBlock\\r\\nfrom [maintable] m\\r\\nfull join [averages] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"size\": {\r\n        \"height\": 240\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\",\r\n        \"label\": {\r\n            \"font\": {\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        }\r\n    },\r\n    \"panes\": [\r\n        {\r\n            \"name\": \"paneLogs\"\r\n        },\r\n        {\r\n            \"name\": \"paneBlocks\"\r\n        }\r\n    ],\r\n    \"defaultPane\": \"paneBlocks\",\r\n    \"series\": [\r\n        {\r\n            \"pane\": \"paneLogs\",\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countLog\",\r\n            \"name\": \"Logins\"\r\n        },\r\n        {\r\n            \"pane\": \"paneLogs\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageLog\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneLogs\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalLog\",\r\n            \"axis\": \"total\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneBlocks\",\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countBlock\",\r\n            \"name\": \"Blocked\"\r\n        },\r\n        {\r\n            \"pane\": \"paneBlocks\",\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageBlock\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"pane\": \"paneBlocks\",\r\n            \"type\": \"spline\",\r\n            \"axis\": \"total\",\r\n            \"valueField\": \"totalBlock\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"pane\": \"paneBlocks\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": false\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Blocked\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"pane\": \"paneLogs\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": false\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Logins\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"total\",\r\n            \"position\": \"right\",\r\n            \"autoBreaksEnabled1\": true,\r\n            \"axisDivisionFactor1\": 15,\r\n            \"breakStyle1\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Total\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": false,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\"\r\n    }\r\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "fe0086f5-c05f-4279-b3d7-4b674fc57a84",
            "Name": "Top 10 (log)",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 6,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":0,\"WidgetYPosition\":28,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 u.[Name] as userName, count(u.[Name]) as count, u.[Oid] as userId\\r\\nfrom [User] u, [UserLogon] ul\\r\\nwhere ul.[User] = u.[Oid] and Year(ul.[Day]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by u.[Name], u.[Oid]\\r\\norder by count(u.[Name]) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
            "Configuration": "{\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"userName\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"visible\": true,\n        \"format\": \"fixedPoint\",\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"connector\": {\n          \"visible\": true,\n          \"width\": 1\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n   \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "3123a4ae-e7ca-4a17-ae96-5bbe3b4b31b7",
            "Name": "Top 10 (block)",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 7,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":16,\"WidgetYPosition\":28,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 u.[Name] as userName, count(u.[Name]) as count, u.[Oid] as userId\\r\\nfrom [User] u, [AssistantLog] al\\r\\nwhere al.[User] = u.[Oid] and Year(al.[UtcLogTime]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by u.[Name], u.[Oid]\\r\\norder by count(u.[Name]) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
            "Configuration": "{\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"userName\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"visible\": true,\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": false,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n    \"enabled\": true,\n    \"customizeText\": \"function (e) { return e.argumentText; }\"\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "557fcfae-98dc-46df-879c-7238f29dec8c",
            "Name": "Department stats",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 8,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":14,\"WidgetRows\":14,\"WidgetColumns\":32,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with logins as \\r\\n(\\r\\n\\tselect\\tu.[Oid] as idU,\\r\\n\\t\\t\\tcount(1) as countLog\\r\\n\\tfrom\\tUserLogon ul\\r\\n\\tinner join [User] u\\r\\n\\ton ul.[User] = u.[Oid]\\r\\n\\twhere Year(ul.[Day]) = @year\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\nblocks as\\r\\n(\\r\\n\\tselect\\tu.[Oid] as idU,\\r\\n\\t\\t\\tcount(1) as countBlocked\\r\\n\\tfrom\\tAssistantLog al\\r\\n\\tinner join [User] u\\r\\n\\ton al.[User] = u.[Oid]\\r\\n\\twhere al.OperationType = \u0027Block\u0027 and Year(al.[UtcLogTime]) = @year\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\nleaves as\\r\\n(\\r\\n\\tselect u.[Oid] as idU,\\r\\n\\t\\tcount(1) as countLeaves\\r\\n\\tfrom [Analytics].[DatamartLeave] ad\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = ad.[UserId]\\r\\n\\twhere Year(ad.[Date]) = @year\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\ntimesheetAux as\\r\\n(\\r\\n\\tselect u.[Oid] as idU,\\r\\n\\t\\tcount(1) as countTimesheets\\r\\n\\tfrom [Timesheet] t\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = t.[CreatedBy]\\r\\n\\twhere Year(t.[CreatedOn]) = @year\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n)\\r\\nselect c.[Name] as companyName, c.[Oid] as companyId, c.[HasImage] as cHasImage, di.[Name] as division, de.[Name] as department, u.[Name] as userName, u.[Oid] as userId, u.[HasImage] as uHasImage, utg.[Name] as typology,\\r\\n\\t\\tIsNull(lo.countLog,0) as Logs, \\r\\n\\t\\tIsNull(b.countBlocked,0) as Blocks, \\r\\n\\t\\tIsNull(le.countLeaves,0) as Leaves,\\r\\n\\t\\tIsNull(ts.[countTimesheets], 0) as Timesheets\\r\\nfrom [Company] c, [Division] di, [Department] de, [UserTypologyGroup] utg, [UserTypology] t, [User] u\\r\\nleft outer join logins lo \\r\\non (lo.idU = u.[Oid])\\r\\nleft outer join blocks b\\r\\non (b.idU = u.[Oid])\\r\\nleft outer join leaves le\\r\\non (le.idU = u.[Oid])\\r\\nleft outer join timesheetAux ts\\r\\non (ts.idU = u.[Oid])\\r\\nwhere u.[Company] = c.[Oid] and u.[Division] = di.[Oid] and u.[Department] = de.[Oid] and u.[Typology] = t.[Oid] and t.UserTypologyGroup = utg.Oid\\r\\nand (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\"onContentReady\":\"function(e){                        if (e.component.instance().getDataSource() != null \u0026\u0026 e.component.instance().getDataSource().items().length \u003e 0){              debugger;                                  var teste =  e.component.instance().getDataSource().items()[0].items[0].userId;                                    SkillsWorkflow.setDashboardFilter(\u0027userId\u0027, teste);                        }           }\",\"stateStoring\":{\"enabled\":false},\"height\":\"300\",\"searchPanel\":{\"visible\":true},\"columnChooser\":{\"enabled\":\"true\"},\"export\":{\"enabled\":true},\"groupPanel\":{\"visible\":true},\"grouping\":{\"autoExpandAll\":true},\"selection\":{\"mode\":\"single\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"onRowClick\":\"function(e){ if(e.data.userId != null) { SkillsWorkflow.setDashboardFilter(\u0027userId\u0027, e.data.userId); } }\",\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":\"true\",\"columns\":[{\"dataField\":\"department\",\"groupIndex\":0},{\"dataField\":\"userId\",\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {SK.showImage(e, \u0027user\u0027, \u0027small\u0027,i.data[\u0027uHasImage\u0027], i.data[\u0027userName\u0027], i.data[\u0027userId\u0027])}\",\"width\":30},{\"dataField\":\"userName\",\"name\":\"Name\",\"caption\":\"Name\"},{\"dataField\":\"companyId\",\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, \u0027company\u0027, \u0027small\u0027,i.data[\u0027cHasImage\u0027], i.data[\u0027companyName\u0027], i.data[\u0027companyId\u0027])}\",\"width\":30},{\"dataField\":\"companyName\",\"name\":\"Company\",\"caption\":\"Company\"},{\"dataField\":\"division\",\"name\":\"Division\",\"caption\":\"Division\"},{\"dataField\":\"typology\",\"name\":\"Typology\",\"caption\":\"Typology\"},{\"dataField\":\"Logs\",\"name\":\"Logs\",\"caption\":\"Logins\",\"alignment\":\"center\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e= 1 \u0026\u0026 i.value \u003c= 2, i.value \u003e 2); }\"},{\"dataField\":\"Blocks\",\"name\":\"Blocks\",\"caption\":\"Blocked\",\"alignment\":\"center\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SW.setRAG(e, i.value, i.value \u003e 2, i.value \u003e= 1 \u0026\u0026 i.value \u003c= 2, i.value \u003c= 0); }\"},{\"dataField\":\"Leaves\",\"name\":\"Leaves\",\"caption\":\"Leaves\",\"alignment\":\"center\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\"},{\"dataField\":\"Timesheets\",\"name\":\"Timesheets\",\"caption\":\"Timesheets\",\"alignment\":\"center\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\"}],\"summary\":{\"totalItems\":[{\"column\":\"userName\",\"summaryType\":\"count\",\"displayFormat\":\"{0}\",\"valueFormat\":\"#,##0\"},{\"column\":\"Logs\",\"summaryType\":\"sum\",\"displayFormat\":\"{0}\",\"valueFormat\":\"#,##0\"},{\"column\":\"Blocks\",\"summaryType\":\"sum\",\"displayFormat\":\"{0}\",\"valueFormat\":\"#,##0\"},{\"column\":\"Leaves\",\"summaryType\":\"sum\",\"displayFormat\":\"{0}\",\"valueFormat\":\"#,##0\"},{\"column\":\"Timesheets\",\"summaryType\":\"sum\",\"displayFormat\":\"{0}\",\"valueFormat\":\"#,##0\"}]}}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "c0208c42-12aa-4b8e-84d8-c0cc27cc0452",
            "Name": "Top 10 (leaves)",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 8,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":32,\"WidgetYPosition\":28,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 u.[Name] as userName, count(u.[Name]) as count, u.[Oid] as userId\\r\\nfrom [User] u, [Analytics].[DatamartLeave] ad\\r\\nwhere ad.[UserId] = u.[Oid] and Year(ad.[Date]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by u.[Name], u.[Oid]\\r\\norder by count(u.[Name]) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
            "Configuration": "{\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"userName\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"position\": \"columns\",\n        \"visible\": true,\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": true,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"position\": \"columns\",\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n    \"enabled\": true,\n    \"customizeText\": \"function (e) {return e.argumentText;}\"\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "48c8ee98-3ba5-490f-b454-c5d6f6d2f7ad",
            "Name": "Absences booked per type",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 4,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":32,\"WidgetYPosition\":2,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select ad.[LeaveType], count(ad.[LeaveType]) as count\\r\\nfrom  [User] u, [Analytics].[DatamartLeave] ad\\r\\nwhere u.[Oid] = ad.[UserId] and Year(ad.[Date]) = @year \\r\\n                            and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by ad.[LeaveType]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"type\": \"doughnut\",\r\n    \"series\": [\r\n        {\r\n            \"argumentField\": \"LeaveType\",\r\n            \"valueField\": \"count\",\r\n            \"label\": {\r\n                \"visible\": true,\r\n                \"format\": \"fixedPoint\",\r\n                \"position\": \"inside\",\r\n                \"font\": {\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                },\r\n                \"customizeText\": \"function(arg) { return arg.percentText; }\"\r\n            }\r\n        }\r\n    ],\r\n    \"commonSeriesSettings\": {\r\n        \"smallValuesGrouping\": {\r\n            \"mode\": \"topN\",\r\n            \"topCount\": 5,\r\n            \"groupName\": \"Others\"\r\n        }\r\n    },\r\n    \"size\": {\r\n        \"height\": 240\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"rowCount\": 2,\r\n        \"horizontalAlignment\": \"center\",\r\n        \"verticalAlignment\": \"top\",\r\n        \"itemTextPosition\": \"right\",\r\n        \"paddingLeftRight\": 0,\r\n        \"font\": {\r\n            \"size\": 10,\r\n            \"family\": \"Varela Round\",\r\n            \"weight\": 800\r\n        }\r\n    },\r\n    \"resolveLabelOverlapping\": \"shift\"\r\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        },
        {
            "Id": "a2c626bc-cff1-414b-99ab-efaf4a644245",
            "Name": "Selected user profile",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 4,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":32,\"WidgetYPosition\":14,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":true,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tmetricType, userId, sum([Count]) as count\\r\\nfrom\\t(\\r\\nselect\\r\\n\\t\u0027Logins\u0027 as metricType,\\r\\n\\tv.[userId] as userId,\\r\\n\\t(v.total * 100) / v.maxTotal as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tul.[User] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom [UserLogon] ul\\r\\n\\twhere Year(ul.[Day]) = @year\\r\\n\\tgroup by ul.[User]\\r\\n) v\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Blocks\u0027 as metricType,\\r\\n\\tz.[userId] as userId,\\r\\n\\t(z.total * 100) / z.maxTotal as [Count]\\r\\nfrom(\\r\\n\\tselect \\r\\n\\t\\tal.[User] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom [AssistantLog] al\\r\\n\\twhere al.[OperationType] = \u0027Block\u0027 and Year(al.[UtcLogTime]) = @year\\r\\n\\tgroup by al.[User]\\r\\n) z\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Leaves\u0027 as metricType,\\r\\n\\tx.[userId] as userId,\\r\\n\\t(x.total * 100) / x.maxTotal as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tad.[UserId] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom [Analytics].[DatamartLeave] ad\\r\\n\\twhere Year(ad.[Date]) = @year\\r\\n\\tgroup by ad.[UserId]\\r\\n\\t) x\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Timesheets\u0027 as metricType,\\r\\n\\tc.[userId] as userId,\\r\\n\\t(c.total * 100) / c.maxTotal as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tt.[CreatedBy] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom [Timesheet] t\\r\\n\\twhere Year(t.[CreatedOn]) = @year\\r\\n\\tgroup by t.[CreatedBy]\\r\\n\\t) c\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\t\u0027Timesheets\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Leaves\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Blocks\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Logins\u0027 as metricType, @userId as userId, 0 as count\\r\\n)t\\r\\ngroup by metricType, userId\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"userId\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 250\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"metricType\",\r\n        \"type\": \"bar\"\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"type\": \"bar\",\r\n            \"valueField\": \"count\",\r\n            \"name\": \"Type\"\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Percentage\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"label\": {\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        }\r\n    },\r\n    \"customizePoint\": \"function(pointInfo) {\r\n        if(pointInfo.argument === \u0027Blocks\u0027) {\r\n            return { color: \u0027#97c95c\u0027, hoverStyle: { color: \u0027#97c95c\u0027 } }\r\n        } else if(pointInfo.argument === \u0027Leaves\u0027) {\r\n            return { color: \u0027#f5564a\u0027, hoverStyle: { color: \u0027#f5564a\u0027 } }\r\n        } else if(pointInfo.argument === \u0027Logins\u0027) {\r\n            return { color: \u0027#1db2f5\u0027, hoverStyle: { color: \u0027#1db2f5\u0027 } }\r\n        } else if(pointInfo.argument === \u0027Timesheets\u0027) {\r\n                return { color: \u0027#ffc720\u0027, hoverStyle: { color: \u0027#ffc720\u0027 } }\r\n        }\r\n    }\",\r\n    \"legend\": {\r\n        \"visible\": false,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\"\r\n    }\r\n}",
            "DashboardDefinitionId": "5ea8b292-bf84-4846-a6dd-e54a50c705e8"
        }
    ],
    "Version": 4,
    "Default": true,
    "Dependencies": {
        "DashboardSdk": "1.0.0",
        "Analytics": "1.0.0",
        "SkillsWorkflow": "1.0.0"
    }
}