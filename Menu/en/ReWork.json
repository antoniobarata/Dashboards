{
    "DashboardDefinitionRoles": [],
    "Id": "f849b097-e554-48a2-a62e-8e4ac5702898",
    "Name": "Re-Work",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"workspaces\":false},\"fields\":[]}]",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "de340715-de6e-49b1-ba0c-015b0ece8caa",
            "Name": "Top 10 Projects",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"Re-Work per Project\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":13.714285714285714,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Jobs\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.Project,\\r\\n    v.Jobs,\\r\\n\\t(sum(v.Jobs) over()) as JobsGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tdj.ProjectNameAndExternalId as Project,\\r\\n\\t\\tsum(1) as Jobs\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Job(@CurrentUserId) dj\\r\\n\\t\\tjoin History h on h.DocumentOid = dj.Oid\\r\\n\\t\\tjoin WorkflowState ws on ws.Oid = h.WorkflowState\\r\\n\\t\\tjoin WorkflowStateType wst on wst.Oid = ws.WorkflowStateType\\r\\n\\twhere \\r\\n\\t\\tYear(h.StartDate) = @year and\\r\\n\\t\\twst.[Status] in (13,18) and\\r\\n\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by\\r\\n\\t\\tdj.ProjectNameAndExternalId\\r\\n) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ReWork_Per_Project/execute",
            "Configuration": "{\n    \"palette\": \"Material\",\n    \"type\": \"doughnut\",\n    \"series\": [\n        {\n            \"argumentField\": \"Project\",\n            \"valueField\": \"Jobs\",\n            \"name\": \"Jobs\",\n            \"label\": false\n        }\n    ],\n    \"commonSeriesSettings\": {\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10,\n            \"groupName\": \"Others\"\n        }\n    },\n    \"size\": {\n        \"height\": 200\n    },\n    \"tooltip\": {\n        \"enabled\": true,\n        \"format\": \"#,###.#\",\n        \"customizeTooltip\": \"function(e) { return { text: this.argumentText + \u0027\u003cbr\u003e\u0027 + this.seriesName + \u0027: \u0027 + this.valueText };}\"\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    }\n}",
            "DashboardDefinitionId": "f849b097-e554-48a2-a62e-8e4ac5702898"
        },
        {
            "Id": "06616189-6bfa-4e64-9339-057beb9c3e71",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 2000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.getMyCompanies(\u0027\u0027,\r\n                    0,\r\n                    0).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        });return res;\r\n                    });\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027 ) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                });\r\n            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n}\",\r\n\"displayExpr\": \"function (data) {  \r\n    if(!data) return \u0027All divisions\u0027; \r\n    if( data.CompanyName \u0026\u0026 data.CompanyName != \u0027\u0027 ) {\r\n        return data.Name + \u0027 - \u0027 + data.CompanyName;\r\n}\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n}; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n] = companyId;\r\n} else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n}\r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027, CompanyName: \u0027\u0027, DivisionName: \u0027\u0027\r\n});return res;\r\n})\r\n}\",\r\n    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n\"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n    if(data.Name == \u0027All departments\u0027) {\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n} else {\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 100%; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027-\u0027, \u0027style\u0027, \u0027margin: 0px 3px; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.DivisionName, \u0027style\u0027, \u0027max-width: 100%; float: left\u0027);\r\n}\r\n}\",\r\n\"displayExpr\": \"function (data) {\r\n    if(!data) return \u0027All departments\u0027;  \r\n    if( data.CompanyName != \u0027\u0027 \u0026\u0026 data.DivisionName != \u0027\u0027 ) {\r\n        return data.Name + \u0027 - \u0027 + data.DivisionName + \u0027 - \u0027 + data.CompanyName;\r\n} else if( data.CompanyName != \u0027\u0027 ) {\r\n        return data.Name + \u0027 - - \u0027 + data.CompanyName;\r\n} else if( data.DivisionName != \u0027\u0027 ) {\r\n        return data.Name + \u0027 - \u0027 + data.DivisionName;\r\n} else {\r\n        return data.Name;\r\n}\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
            "DashboardDefinitionId": "f849b097-e554-48a2-a62e-8e4ac5702898"
        },
        {
            "Id": "d7b84f0a-ff1e-4832-b660-17bd2bcaed48",
            "Name": "Re-Work Analysis",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"Re-Work per Department, Client \u0026 Project\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":16,\"WidgetRows\":24,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":true,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Jobs\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.Client,\\r\\n\\tv.ClientId,\\r\\n\\tv.HasImage,\\r\\n\\tv.Department,\\r\\n\\tv.Project,\\r\\n\\tv.Jobs,\\r\\n\\t(sum(v.Jobs) over (Partition by Department)) JobsPerDepartment,\\r\\n\\t(sum(v.Jobs) over (Partition by Client)) JobsPerClient,\\r\\n\\t(sum(v.Jobs) over()) as JobsGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tdj.Client,\\r\\n\\t\\tdj.ClientId,\\r\\n\\t\\tcc.HasImage,\\r\\n\\t\\tdj.Department,\\r\\n\\t\\tdj.ProjectNameAndExternalId as Project,\\r\\n\\t\\tsum(1) as Jobs\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Job(@CurrentUserId) dj\\r\\n\\t\\tjoin History h on h.DocumentOid = dj.Oid\\r\\n\\t\\tjoin WorkflowState ws on ws.Oid = h.WorkflowState\\r\\n\\t\\tjoin WorkflowStateType wst on wst.Oid = ws.WorkflowStateType\\r\\n\\t\\tjoin CommercialClient cc on cc.Oid = dj.ClientId\\r\\n\\twhere\\r\\n\\t\\twst.[Status] in (13,18) and\\r\\n\\t\\tYear(h.StartDate) = @year and\\r\\n\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by\\r\\n\\t\\tdj.Client,\\r\\n\\t\\tdj.ClientId,\\r\\n\\t\\tcc.HasImage,\\r\\n\\t\\tdj.Department,\\r\\n\\t\\tdj.ProjectNameAndExternalId\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": 400,\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": true,\r\n        \"fileName\": \"Re-Work Analysis\"\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"allowColumnReordering\": true,\r\n    \"rowAlternationEnabled\": true,\r\n    \"showBorders\": true,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Department\",\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"ClientId\",\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) {SK.showImage(e, \u0027client\u0027, \u0027small\u0027,i.data[\u0027HasImage\u0027], i.data[\u0027Client\u0027], i.data[\u0027ClientId\u0027])}\",\r\n            \"width\": 30\r\n        },\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"caption\": \"Client\"\r\n        },\r\n        {\r\n            \"dataField\": \"Project\",\r\n            \"caption\": \"Project\",\r\n            \"width\": 250\r\n        },\r\n        {\r\n            \"dataField\": \"Jobs\",\r\n            \"caption\": \"Jobs\",\r\n            \"alignment\": \"center\"\r\n        },\r\n        {\r\n            \"caption\": \"Department Re-Work %\",\r\n            \"format\": \"#,##0\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) { \r\n                var percentage = i.data.Jobs / i.data.JobsPerDepartment;\r\n                SW.setRAG(e, (percentage * 100.0).toFixed(1) + \u0027%\u0027, percentage \u003e= 0.75, (percentage \u003e 0.25 \u0026\u0026 percentage \u003c 0.75), percentage \u003c= 0.25, true);\r\n        }\"\r\n    },\r\n    {\r\n        \"dataField\": \"JobsPerDepartment\",\r\n        \"caption\": \"Per Department\",\r\n        \"alignment\": \"center\"\r\n    },\r\n    {\r\n        \"caption\": \"Client Re-Work %\",\r\n        \"format\": \"#,##0\",\r\n        \"alignment\": \"center\",\r\n        \"cellTemplate\": \"function(e, i) { \r\n                var percentage = i.data.Jobs / i.data.JobsPerClient;\r\n                SW.setRAG(e, (percentage * 100.0).toFixed(1) + \u0027%\u0027, percentage \u003e= 0.75, (percentage \u003e 0.25 \u0026\u0026 percentage \u003c 0.75), percentage \u003c= 0.25, true);\r\n    }\"\r\n},\r\n{\r\n    \"dataField\": \"JobsPerClient\",\r\n    \"caption\": \"Per Client\",\r\n    \"alignment\": \"center\"\r\n}\r\n],\r\n\"summary\": {\r\n\"calculateCustomSummary\": \"function (options) { \r\n                if (options.name === \u0027JobsReworkVsDepartmentRework\u0027) { \r\n                    switch(options.summaryProcess) {\r\n                        case \u0027start\u0027:\r\n                            options.totalValue = [\r\n            0,\r\n            0\r\n        ];\r\n                            break;\r\n                        case \u0027calculate\u0027:\r\n                            options.totalValue[\r\n            0\r\n        ] = options.totalValue[\r\n            0\r\n        ] + options.value.Jobs;\r\n                            options.totalValue[\r\n            1\r\n        ] = options.value.JobsGrandTotal;\r\n                            break;\r\n                        case \u0027finalize\u0027:\r\n                            if(Number(options.totalValue[\r\n            1\r\n        ]) \u003e 0)\r\n                                options.totalValue = (options.totalValue[\r\n            0\r\n        ] / options.totalValue[\r\n            1\r\n        ]) * 100;\r\n                            else\r\n                                options.totalValue = 0;\r\n                                break;\r\n    }\r\n}\r\n                if (options.name === \u0027JobsReworkVsClientRework\u0027) { \r\n                    switch(options.summaryProcess) {\r\n                        case \u0027start\u0027:\r\n                            options.totalValue = [\r\n            0,\r\n            0\r\n        ];\r\n                            break;\r\n                        case \u0027calculate\u0027:\r\n                            options.totalValue[\r\n            0\r\n        ] = options.totalValue[\r\n            0\r\n        ] + options.value.Jobs;\r\n                            options.totalValue[\r\n            1\r\n        ] = options.value.JobsGrandTotal;\r\n                            break;\r\n                        case \u0027finalize\u0027:\r\n                            if(Number(options.totalValue[\r\n            1\r\n        ]) \u003e 0) \r\n                                options.totalValue = (options.totalValue[\r\n            0\r\n        ] / options.totalValue[\r\n            1\r\n        ]) * 100;\r\n                            else \r\n                                options.totalValue = 0;\r\n                                break;\r\n    }\r\n}\r\n}\",            \r\n    \"totalItems\": [\r\n{\r\n    \"name\": \"JobsReworkVsDepartmentRework\",\r\n    \"showInColumn\": \"Department Re-Work %\",\r\n    \"displayFormat\": \"{0}\",\r\n    \"valueFormat\": \"#,##0\",\r\n    \"summaryType\": \"custom\",\r\n    \"alignment\": \"center\"\r\n},\r\n{\r\n    \"name\": \"JobsReworkVsClientRework\",\r\n    \"showInColumn\": \"Client Re-Work %\",\r\n    \"displayFormat\": \"{0}\",\r\n    \"valueFormat\": \"#,##0\",\r\n    \"summaryType\": \"custom\",\r\n    \"alignment\": \"center\"\r\n}\r\n]\r\n}\r\n}",
            "DashboardDefinitionId": "f849b097-e554-48a2-a62e-8e4ac5702898"
        },
        {
            "Id": "b607815a-5011-4e34-b4a0-567185e24610",
            "Name": "Reasons",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"ReWork per Reason\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":2,\"WidgetRows\":13.714285714285714,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Jobs\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.Motive,\\r\\n\\tv.Jobs,\\r\\n\\t(sum(v.Jobs) over()) as JobsGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\th.Motive,\\r\\n\\t\\tsum(1) as Jobs\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Job(@CurrentUserId) dj\\r\\n\\t\\tjoin History h on h.DocumentOid = dj.Oid\\r\\n\\t\\tjoin WorkflowState ws on ws.Oid = h.WorkflowState\\r\\n\\t\\tjoin WorkflowStateType wst on wst.Oid = ws.WorkflowStateType\\r\\n\\twhere \\r\\n\\t\\th.Motive is not null and\\r\\n\\t\\twst.[Status] in (13,18) and\\r\\n\\t\\tYear(h.StartDate) = @year and\\r\\n\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by\\r\\n\\t\\th.Motive\\r\\n) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ReWork_Per_Motive/execute",
            "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": [\n        {\n            \"argumentField\": \"Motive\",\n            \"valueField\": \"Jobs\",\n            \"name\": \"Jobs\",\n            \"label\": false\n        }\n    ],\n    \"commonSeriesSettings\": {\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 200\n    },\n    \"tooltip\": {\n        \"enabled\": true,\n        \"format\": \"#,###.#\",\n        \"customizeTooltip\": \"function(e) { return { text: this.argumentText + \u0027\u003cbr\u003e\u0027 + this.seriesName + \u0027: \u0027 + this.valueText };}\"\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    }\n}",
            "DashboardDefinitionId": "f849b097-e554-48a2-a62e-8e4ac5702898"
        },
        {
            "Id": "0d5eda01-4882-453d-874d-71b302c0d673",
            "Name": "Top 10 Executors",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Re-Work per Executors\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":2,\"WidgetRows\":13.714285714285714,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Projects\",\"metricFieldValue\":\"JobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with ReWork as (\\r\\n\\tselect \\r\\n\\t\\tdj.Oid\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Job(@CurrentUserId) dj\\r\\n\\t\\tjoin History h on h.DocumentOid = dj.Oid\\r\\n\\t\\tjoin WorkflowState ws on ws.Oid = h.WorkflowState\\r\\n\\t\\tjoin WorkflowStateType wst on wst.Oid = ws.WorkflowStateType\\r\\n\\twhere \\r\\n\\t\\twst.[Status] in (13,18) and\\r\\n\\t\\tYear(h.StartDate) = @year and\\r\\n\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by\\r\\n\\t\\tdj.Oid\\r\\n),\\r\\nExecutors as (\\r\\n\\tselect\\r\\n\\t\\tv.DocumentOid,\\r\\n\\t\\tSTRING_AGG(v.[Name], \u0027, \u0027) as Executors\\r\\n\\tfrom (\\r\\n\\t\\tselect \\r\\n\\t\\t\\th.DocumentOid, \\r\\n\\t\\t\\tu.[Name]\\r\\n\\t\\tfrom \\r\\n\\t\\t\\tAnalytics.Job(@CurrentUserId) dj\\r\\n\\t\\t\\tjoin History h on h.DocumentOid = dj.Oid\\r\\n\\t\\t\\tjoin WorkflowState ws on ws.Oid = h.WorkflowState\\r\\n\\t\\t\\tjoin WorkflowStateType wst on wst.Oid = ws.WorkflowStateType\\r\\n\\t\\t\\tjoin [User] u on u.Oid = h.[User]\\r\\n\\t\\twhere\\r\\n\\t\\t\\twst.[Status] = 5 and \\r\\n\\t\\t\\tYear(h.StartDate) = @year and\\r\\n\\t\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\th.DocumentOid, \\r\\n\\t\\t\\tu.[Name]\\r\\n\\t) v\\r\\n\\tgroup by v.DocumentOid\\r\\n),\\r\\nExecutorsFromReWork as (\\r\\n\\tselect \\r\\n\\t\\tex.Executors\\r\\n\\tfrom \\r\\n\\t\\tReWork rw\\r\\n\\t\\tleft outer join Executors ex on ex.DocumentOid = rw.Oid\\r\\n)\\r\\nselect \\r\\n\\tv.Executors,\\r\\n\\tv.Jobs,\\r\\n\\t(sum(v.Jobs) over ()) as JobsGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\terw.Executors,\\r\\n\\t\\tsum(1) as Jobs\\r\\n\\tfrom \\r\\n\\t\\tExecutorsFromReWork erw\\r\\n\\twhere \\r\\n\\t\\terw.Executors is not null\\r\\n\\tgroup by \\r\\n\\t\\terw.Executors\\r\\n) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_ReWork_Per_Executor/execute",
            "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": [\n        {\n            \"argumentField\": \"Executors\",\n            \"valueField\": \"Jobs\",\n            \"name\": \"Jobs\",\n            \"label\": false\n        }\n    ],\n    \"commonSeriesSettings\": {\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10,\n            \"groupName\": \"Others\"\n        }\n    },\n    \"size\": {\n        \"height\": 200\n    },\n    \"tooltip\": {\n        \"enabled\": true,\n        \"format\": \"#,###.#\",\n        \"customizeTooltip\": \"function(e) { return { text: this.argumentText + \u0027\u003cbr\u003e\u0027 + this.seriesName + \u0027: \u0027 + this.valueText };}\"\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    }\n}",
            "DashboardDefinitionId": "f849b097-e554-48a2-a62e-8e4ac5702898"
        }
    ],
    "QueryText": "",
    "UseStore": false,
    "StoreEntity": null,
    "Version": 9,
    "Default": false
}