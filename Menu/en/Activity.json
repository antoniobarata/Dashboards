{
    "DashboardDefinitionRoles": [],
    "Id": "b2b7f42b-1c36-464b-85f9-667aab2b8494",
    "Name": "Activity Dashboard",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentsConfiguration": "[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"} ,\"update\":{\"endpoint\":\"\",\"model\":{} } ,\"create\":{\"endpoint\":\"\",\"model\":{} } ,\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"} ]} ,\"remove\":{\"endpoint\":\"\"} ,\"lookup\":{\"endpoint\":\"\"} ,\"lookupById\":{\"endpoint\":\"\"} } ,\"layout\":{\"create\":{} ,\"read\":{} ,\"patch\":{} } ,\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"} ,\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false} ,\"fields\":[]} ]",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "4d9fe161-950f-408e-ab82-318effe935f7",
            "Name": "Time and Jobs over Months",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Last 12 months\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"} ,{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.[Date] as Date,\\r\\n\\tsum(v.[Jobs]) as Jobs, sum(v.[Hours]) as Hours\\r\\nfrom (\\r\\n\\tselect datefromparts(Year(dj.[Date]), Month(dj.[Date]), 1) as Date,\\r\\n\\t\\t\\tcount(dj.[JobType]) as Jobs,\\r\\n\\t\\t\\t0 as Hours\\r\\n\\tfrom [Analytics].[Job](@CurrentUserId) dj\\r\\n\\twhere Year(dj.[Date]) = @year and \\r\\n\\t\\t\\t(dj.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by datefromparts(Year(dj.[Date]), Month(dj.[Date]), 1)\\r\\n\\tunion all\\r\\n\\tselect datefromparts(Year(dt.[Date]), Month(dt.[Date]), 1) as Date, \\r\\n\\t\\t\\tcount(dt.[JobType]) as Jobs,\\r\\n\\t\\t\\tsum(dt.[ActualTime]) as Hours\\r\\n\\tfrom [Analytics].[Timesheet](@CurrentUserId) dt\\r\\n\\twhere Year(dt.[Date]) = @year and \\r\\n\\t\\t\\t(dt.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by datefromparts(Year(dt.[Date]), Month(dt.[Date]), 1)\\r\\n) as v\\r\\ngroup by v.[Date]\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]} } ]",
            "DashboardComponentType": {
                "Id": "1c5bcb1b-adf5-4b6f-94cd-f7dacaa568b2",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Activity_Per_Month/execute",
            "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Date\",\n    \"ignoreEmptyPoints\": false,\n    \"aggregation\": {\n      \"enabled\": true,\n      \"method\": \"sum\"\n    } \n  } ,\n  \"series\": [\n    {\n      \"axis\": \"jobs\",\n      \"type\": \"line\",\n      \"valueField\": \"Jobs\",\n      \"name\": \"Jobs\",\n      \"point\": {\n        \"size\": 6\n      } \n    } ,\n    {\n      \"axis\": \"time\",\n      \"type\": \"bar\",\n      \"valueField\": \"Hours\",\n      \"name\": \"Time\"\n    } \n  ],\n  \"argumentAxis\": {\n    \"argumentType\": \"datetime\",\n    \"tickInterval\": {\n      \"months\": 1\n    } ,\n    \"font\": {\n      \"size\": 12,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    } \n  } ,\n  \"valueAxis\": [\n    {\n      \"name\": \"time\",\n      \"position\": \"left\",\n      \"title\": {\n        \"text\": \"Time\",\n        \"font\": {\n          \"size\": 12,\n          \"family\": \"Varela Round\",\n          \"weight\": 600\n        } \n      } \n    } ,\n    {\n      \"name\": \"jobs\",\n      \"position\": \"right\",\n      \"title\": {\n        \"text\": \"Jobs\",\n        \"font\": {\n          \"size\": 12,\n          \"family\": \"Varela Round\",\n          \"weight\": 600\n        } \n      } \n    } \n  ],\n  \"legend\": {\n    \"visible\": true,\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\",\n    \"font\": {\n      \"size\": 12,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    } \n  } ,\n  \"tooltip\": {\n    \"enabled\": true,\n    \"argumentFormat\":\"monthAndYear\",\n    \"format\":\"#,##0.00\"} \n} ",
            "DashboardDefinitionId": "b2b7f42b-1c36-464b-85f9-667aab2b8494"
        } ,
        {
            "Id": "4872d2ed-c0f9-4d8a-9a08-9c713f609cbe",
            "Name": "Filters",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]} ,\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null} } ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[]} } ]",
            "DashboardComponentType": {
                "Id": "1c5bcb1b-adf5-4b6f-94cd-f7dacaa568b2",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);} , 2500) } \",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); }  } \"\r\n            } ,\r\n            \"noDataText\": \"Please wait...\"\r\n        } ,\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            } ,\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.getMyCompanies(\u0027\u0027,\r\n                            0,\r\n                            0).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                                } );return res;\r\n                            } );\r\n                } \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{} ).then( result =\u003e  { return Promise.resolve(result);} ) } \"\r\n            } ,\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            }  else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            } \r\n                debugger;\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        } \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);} \"\r\n    } \r\n} ,\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    } ,\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            } ; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    } );return res;\r\n                } )\r\n            }  else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    } );return res;\r\n                } )\r\n            } \r\n        } \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{} ).then( result =\u003e  { return Promise.resolve(result);} )} \"\r\n    } ,\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    }  else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    } \r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n} \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); } \",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n} \r\n} ,\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n} ,\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n    } ; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    }  \r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {} ).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        } );return res;\r\n    } )\r\n} \",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {} ).then( result =\u003e  { return Promise.resolve(result); }  ) } \"\r\n} ,\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n}  else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n} \r\n} \",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); } \",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n} \r\n} \r\n]\r\n} ",
            "DashboardDefinitionId": "b2b7f42b-1c36-464b-85f9-667aab2b8494"
        } ,
        {
            "Id": "2cd1d005-5a47-485b-bdb6-9fddc0c45a5f",
            "Name": "Activity Type per Department and Client",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 8,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Last 12 months\",\"WidgetType\":\"pivotgrid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"} ,{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select NullIf(v.[Client], \u0027\u0027) as Client, \\r\\n\\t\\tNullIf(v.[Department], \u0027\u0027) as Department, \\r\\n\\t\\tNullIf(v.[JobType], \u0027\u0027) as Type,\\r\\n\\t\\tsum(v.[Jobs]) as Jobs, sum(v.[Hours]) as Hours\\r\\nfrom (\\r\\n\\tselect dj.[JobType], \\r\\n\\t\\t\\tdj.[Department] as Department,\\r\\n\\t\\t\\tdj.[Client] as Client,\\r\\n\\t\\t\\tcount(dj.[JobType]) as Jobs,\\r\\n\\t\\t\\t0 as Hours\\r\\n\\tfrom [Analytics].[Job](@CurrentUserId) dj\\r\\n\\twhere Year(dj.[Date]) = @year and \\r\\n\\t\\t\\t(dj.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by dj.[JobType], dj.[Department], dj.[Client]\\r\\n\\tunion all\\r\\n\\tselect dt.[JobType],\\r\\n\\t\\t\\tdt.[Department] as Department,\\r\\n\\t\\t\\tdt.[Client] as Client,\\r\\n\\t\\t\\tcount(dt.[JobType]) as Jobs,\\r\\n\\t\\t\\tsum(dt.[ActualTime]) as Hours\\r\\n\\tfrom [Analytics].[Timesheet](@CurrentUserId) dt\\r\\n\\twhere Year(dt.[Date]) = @year and \\r\\n\\t\\t\\t(dt.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by dt.[JobType], dt.[Department], dt.[Client]\\r\\n) as v\\r\\ngroup by v.[Client], v.[Department], v.[JobType]\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]} } ]",
            "DashboardComponentType": {
                "Id": "1c5bcb1b-adf5-4b6f-94cd-f7dacaa568b2",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Activity_Per_Client_Departament_Type/execute",
            "Configuration": "{\n \"size\": {\n    \"height\": 250\n  } ,\n  \"allowSortingBySummary\": true,\n  \"allowSorting\": true,\n  \"allowFiltering\": true,\n  \"allowExpandAll\":true,\n  \"height\": 250,\n  \"showBorders\": true,\n  \"fieldPanel\": {\n      \"showColumnFields\": true,\n      \"showDataFields\": true,\n      \"showFilterFields\": true,\n      \"showRowFields\": true,\n      \"allowFieldDragging\": true,\n      \"visible\": true,\n      \"font\": {\n        \"size\": 10,\n        \"family\": \"Varela Round\",\n        \"weight\": 600\n      } \n  } ,\n  \"wordWrapEnabled\":false,\n  \"dataSource\": {\n    \"fields\": [\n      {\n        \"caption\": \"Department\",\n        \"width\": 120,\n        \"dataField\": \"Department\",\n        \"area\": \"column\",\n        \"expanded\":true\n      } ,\n      {\n        \"dataField\": \"Client\",\n        \"dataType\": \"string\",\n        \"area\": \"filter\",\n        \"expanded\":true\n      } ,\n      {\n        \"dataField\": \"Type\",\n        \"dataType\": \"string\",\n        \"area\": \"row\",\n        \"expanded\":true\n      } ,\n \n      {\n        \"caption\": \"Jobs\",\n        \"dataField\": \"Jobs\",\n        \"area\": \"data\",\n        \"dataType\": \"number\",\n        \"summaryType\": \"sum\",\n        \"format\":\"#,###.#\"\n      } ,\n     {\n        \"caption\": \"Time\",\n        \"dataField\": \"Hours\",\n        \"dataType\": \"number\",\n        \"summaryType\": \"sum\",\n        \"area\": \"data\",\n        \"format\":\"#,###.#\"\n      } \n    ],\n    \"store\": null\n  } ,\n   \"onCellPrepared\": \"function(e) {var dataField = e.component.getDataSource().getAreaFields(\u0027data\u0027)[e.cell.dataIndex];if(e.area==\u0027data\u0027 \u0026\u0026 dataField.caption==\u0027Utilization %\u0027 \u0026\u0026 e.cell.value\u003c0.8){e.cellElement.css(\u0027background-color\u0027,\u0027#ffc7ce\u0027);e.cellElement.css(\u0027color\u0027,\u0027#9c0c06\u0027);} } \"\n} ",
            "DashboardDefinitionId": "b2b7f42b-1c36-464b-85f9-667aab2b8494"
        } ,
        {
            "Id": "dead2ec9-1976-4186-88f7-c530eac9be06",
            "Name": "Top 10 Activity Types",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"Jobs and Time per Activity Type in the last 12 months\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select NullIf(v.[JobType], \u0027\u0027) as Type, \\r\\n\\t\\tsum(v.[Jobs]) as Jobs, sum(v.[Hours]) as Hours\\r\\nfrom (\\r\\n\\tselect dj.[JobType], \\r\\n\\t\\t\\tcount(dj.[JobType]) as Jobs,\\r\\n\\t\\t\\t0 as Hours\\r\\n\\tfrom [Analytics].[Job](@CurrentUserId) dj\\r\\n\\twhere Year(dj.[Date]) = @year and \\r\\n\\t\\t\\t(dj.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by dj.[JobType]\\r\\n\\tunion all\\r\\n\\tselect dt.[JobType], \\r\\n\\t\\t\\tcount(dt.[JobType]) as Jobs,\\r\\n\\t\\t\\tsum(dt.[ActualTime]) as Hours\\r\\n\\tfrom [Analytics].[Timesheet](@CurrentUserId) dt\\r\\n\\twhere Year(dt.[Date]) = @year and \\r\\n\\t\\t\\t(dt.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by dt.[JobType]\\r\\n) as v\\r\\ngroup by v.[JobType]\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]} } ]",
            "DashboardComponentType": {
                "Id": "1c5bcb1b-adf5-4b6f-94cd-f7dacaa568b2",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Activity_Per_Type/execute",
            "Configuration": "{\n \"type\": \"doughnut\",\n  \"series\": [{\n      \"argumentField\":\"Type\",\n      \"valueField\":\"Jobs\",\n      \"name\":\"Jobs\",\n      \"label\":false\n    } ,\n    {\n      \"argumentField\":\"Type\",\n      \"valueField\":\"Hours\",\n   \n   \"name\":\"Time\",\n      \"label\":false\n    } \n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      } \n    } ,\n    \"smallValuesGrouping\": {\n        \"mode\": \"topN\",\n        \"topCount\": 10\n    } \n  } ,\n  \"size\": {\n    \"height\": 250\n  } ,\n  \"tooltip\": {\n            \"enabled\": true,\n            \"format\": \"#,###.#\",\n            \"customizeTooltip\": \"function(e) { return { text: this.argumentText + \u0027\u003cbr\u003e\u0027 + this.seriesName + \u0027: \u0027 + this.valueText } ;} \"\n        } ,\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    } \n  } \n} ",
            "DashboardDefinitionId": "b2b7f42b-1c36-464b-85f9-667aab2b8494"
        } 
    ],
    "Version": 4,
    "Default": true
} 