{"DashboardDefinitionRoles":[{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester Profile"},{"AccessRoleId":"bd339167-d7ef-4c79-96c9-5be09c6f6231","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Administrator"},{"AccessRoleId":"bd339167-d7ef-4c79-96c9-5be09c6f6231","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"bd339167-d7ef-4c79-96c9-5be09c6f6231","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Requester Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a","AccessRoleName":"Responsible Profile"}],"Id":"35fd430a-00a6-413e-b6a7-755d82f0b35a","Name":"Time Sheet","Active":true,"Location":0,"DocumentId":"00000000-0000-0000-0000-000000000000","DocumentName":"","DocumentsConfiguration":"{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"remove\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemNames\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}","Templates":[],"DashboardDefinitionComponents":[{"Id":"60c6f8dd-dde4-46d7-996a-0d90c486b071","Name":"Filters","Active":true,"UseQuery":false,"Query":"","Size":12,"Order":0,"Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"","Configuration":"{\r\n\"colCount\": 4,\r\n\"items\": [\r\n    {\r\n        \"name\": \"Year\",\r\n        \"dataField\": \"Year\",\r\n        \"editorType\": \"dxNumberBox\",\r\n        \"editorOptions\": {\r\n            \"showSpinButtons\": true,\r\n            \"value\": 2019,\r\n            \"width\": 65,\r\n            \"placeholder\": \"year\",\r\n            \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2019); SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}, 500) }\",\r\n            \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n        },\r\n        \"noDataText\": \"Please wait...\"\r\n    },\r\n    {\r\n        \"dataField\": \"CompanyId\",\r\n        \"label\": {\r\n            \"text\": \"Company\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI('GET', 'companies/lookup',null,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'});return res;})\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('Company', e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');\r\n                }\r\n                SW.setComponentByValue(e.value, 'DivisionId');\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n        }\r\n    },\r\n    {\r\n        \"dataField\": \"DivisionId\",\r\n        \"label\": {\r\n            \"text\": \"Division\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take}; \r\n                            var companyId = SW.getValueFromComponent('CompanyId'); \r\n                            if (companyId == '00000000-0000-0000-0000-000000000000') {\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',null,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'});return res;})\r\n                            } else if (companyId != null) { \r\n                                param['companyId'] = companyId;\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'});return res;})\r\n                            }\r\n                        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n            },\r\n            \"placeholder\": \"All divisions\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if (e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('Division', e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');\r\n                }\r\n                SW.setComponentByValue(e.value, 'DepartmentId');\r\n                \r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"disabled\": true\r\n        }\r\n    },\r\n    {\r\n        \"dataField\": \"DepartmentId\",\r\n        \"label\": {\r\n            \"text\": \"Department\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take }; \r\n                    var divisionId = SW.getValueFromComponent('DivisionId'); \r\n                    var companyId = SW.getValueFromComponent('CompanyId'); \r\n                    if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') { \r\n                        param['divisionId'] = divisionId;\r\n                        param['companyId'] = companyId;\r\n                    } \r\n                    return SkillsWorkflow.executeAPI('GET', 'departments',param,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'});return res;})\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n            },\r\n            \"placeholder\": \"All departments\",\r\n            \"onValueChanged\": \"function(e){ \r\n                    if(e.value != null && e.value != '') {\r\n                        SkillsWorkflow.setDashboardFilter('Department', e.value);\r\n                    } else {\r\n                        SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');\r\n                    }\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"disabled\": true\r\n        }\r\n    }]\r\n}\r\n\r\n","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"137fd3e5-69d5-46ea-bdcb-3aa910a9718a","Name":"Period","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":7,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time - Select Months\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":50,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2018-01-01\",\"endDate\":\"2019-12-31\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT DATEADD(dd, -(DATEPART(dw, dt.[Date])-2), dt.[Date]) AS WeekStart, \\r\\n\\t\\t[Year], [Month], \\r\\n\\t\\tConvert(int, CONCAT(year(dt.[Date]), DatePart(wk, dt.[Date]))) as [YearWeek], \\r\\n\\t\\tSUM(dt.[ActualTime]) as [Hours]\\r\\nFROM [Analytics].Timesheet(@CurrentUserId) dt \\r\\nWHERE Year(dt.[Date]) = @year and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\nGROUP BY DATEADD(dd, -(DATEPART(dw, dt.[Date])-2), dt.[Date]), [Year], [Month], Convert(int, CONCAT(year(dt.[Date]), DatePart(wk, dt.[Date])))\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Hours_Per_YearWeek/execute","Configuration":"{\n \"margin\": {\n    \"top\": 0\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"line\",\n      \"argumentField\": \"WeekStart\",\n      \"font\": {\n        \"size\": 10,\n        \"family\": \"Varela Round\",\n        \"weight\": 600\n      }\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Hours\",\n        \"font\": {\n          \"size\": 10,\n          \"family\": \"Varela Round\",\n          \"weight\": 600\n        }\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"month\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\",\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    }\n  },\n  \"value\": [\n    \"year\"\n  ]\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"2cab9ed8-b66b-4bb8-8c8e-4a6409af826e","Name":"Non-billable Breakdown","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":2,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"With Leaves As ( \\r\\n\\tSELECT SUM(dl.[Hours]) AS [Hours] \\r\\n\\tFROM Analytics.Leave(@CurrentUserId) dl \\r\\n\\tWHERE dl.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n) \\r\\nSELECT TimeType, [Time] \\r\\nFROM ( \\r\\n\\tSELECT SUM(dt.AdministrativeTime) as Administrative, \\r\\n\\t\\t\\tSUM(dt.NewBusinessTime) as [New Business], \\r\\n\\t\\t\\tMAX(l.[Hours]) AS Leaves, \\r\\n\\t\\t\\tSUM(dt.InternalWorkTime) AS Internal \\r\\n\\tFROM Leaves l, Analytics.Timesheet(@CurrentUserId) dt \\r\\n\\tWHERE dt.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t) pvt UNPIVOT ( [Time] FOR TimeType IN (pvt.Administrative, pvt.[New Business], pvt.Leaves, pvt.Internal) \\r\\n) AS unpvt\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Hours_NonBillable/execute","Configuration":"{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"font\": {\n          \"size\": 10,\n          \"family\": \"Varela Round\",\n          \"weight\": 600\n        },\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 0.5\n        },\n        \"format\": {\n     \n     \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"0bf715f2-d17f-47a4-96fc-615deea582fd","Name":"Billable vs non - Billable","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":1,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT TimeType, [Time]\\r\\nFROM ( \\r\\n    SELECT SUM(v.Billable) AS Billable, SUM(v.NonBillable) AS NonBillable\\r\\n    FROM ( \\r\\n        SELECT SUM(dt.BillableTime) AS Billable, \\r\\n\\t\\t\\t\\tSUM(isnull(dt.AdministrativeTime, 0) + isnull(dt.NewBusinessTime, 0) + isnull(dt.InternalWorkTime, 0)) AS NonBillable\\r\\n        FROM Analytics.Timesheet(@CurrentUserId) dt\\r\\n\\t\\tWHERE dt.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        UNION ALL \\r\\n        SELECT 0.0 as Billable, \\r\\n\\t\\t\\t\\tSUM(dl.[Hours]) AS NonBillable\\r\\n        FROM Analytics.Leave(@CurrentUserId) dl\\r\\n\\t\\tWHERE dl.[Date] BETWEEN @FromDate AND @ToDate  and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t) v\\r\\n\\t) pvt UNPIVOT ([Time] FOR TimeType IN (pvt.Billable, pvt.NonBillable) \\r\\n) AS unpvt\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Hours_Billable_NonBillable/execute","Configuration":"{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"font\": {\n          \"size\": 10,\n          \"family\": \"Varela Round\",\n          \"weight\": 600\n        },\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 1\n        },\n        \"format\": {\n          \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 600\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"75e3a32b-6d42-4146-ab1b-938e3a085580","Name":"Top 10 Typology Groups","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":6,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"Leaves\",\"metricFieldValue\":\"TimeOffHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"WITH LeavesGrandTotal AS \\r\\n( \\r\\n    SELECT SUM(dl.[Hours]) AS GrandTotal \\r\\n    FROM Analytics.Leave(@CurrentUserId) dl\\r\\n\\tWHERE dl.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n) \\r\\nSELECT dt.UserTypologyGroup AS TypologyGroupName, \\r\\n        SUM(dt.ActualTime) AS TotalHours, \\r\\n        (SELECT GrandTotal FROM LeavesGrandTotal) AS TimeOffHoursGrandTotal \\r\\nFROM Analytics.Timesheet(@CurrentUserId) dt \\r\\nWHERE dt.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\nGROUP BY dt.UserTypologyGroup\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"],\"Sort\":{\"Type\":1,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_TypologyGroup/execute","Configuration":"{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"rotated\": true,\n  \"commonSeriesSettings\": {\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 500\n    },\n    \"argumentField\": \"TypologyGroupName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"TotalHours\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"font\": {\n        \"size\": 10,\n        \"family\": \"Varela Round\",\n        \"weight\": 500\n      }\n    }\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"TypologyGroupName\"\n  }\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"97dcd3f3-db70-4f48-8c17-c3717bdc3f9c","Name":"Top 10 Project Types","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":5,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Admin\",\"metricFieldValue\":\"AdministrativeHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT pn.[Name] as projectType,\\r\\n        SUM(dt.ActualTime) AS TotalHours, \\r\\n        SUM(SUM(dt.AdministrativeTime)) OVER () as AdministrativeHoursGrandTotal \\r\\nFROM Analytics.Timesheet(@CurrentUserId) dt \\r\\nfull join [Project] p\\r\\non p.[Oid] = dt.[ProjectId]\\r\\nfull join [ProjectNature] pn\\r\\non pn.[Oid] = p.[ProjectNature]\\r\\nWHERE dt.[Date] BETWEEN @FromDate AND @ToDate  and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\nGROUP BY pn.[Name]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"],\"Sort\":{\"Type\":2,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_User/execute","Configuration":"{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"projectType\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"TotalHours\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"continuous\",\n      \"font\": {\n        \"size\": 10,\n        \"family\": \"Varela Round\",\n        \"weight\": 500\n      }\n    }\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"projectType\"\n  }\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"190cd8eb-85e8-4678-a9d2-d3fd4beb68be","Name":"Top 10 Clients","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":3,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"Total\",\"metricFieldValue\":\"GlobalTotalHours\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT dt.Client AS ClientName, \\r\\n\\tSUM(dt.ActualTime) AS TotalHours, \\r\\n\\tSUM(SUM(isnull(dt.[ActualTime], 0.0))) OVER () as GlobalTotalHours \\r\\nFROM Analytics.Timesheet(@CurrentUserId) dt \\r\\nWHERE dt.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\nGROUP BY dt.Client\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"],\"Sort\":{\"Type\":2,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_Client/execute","Configuration":"{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"ClientName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"TotalHours\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"ClientName\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(' - ')[0].substring(0,20)}\",\n      \"font\": {\n        \"size\": 9,\n        \"family\": \"Varela Round\",\n        \"weight\": 500\n      }\n    }\n  }\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"},{"Id":"b46d52af-eaa6-454c-a51a-db07a04f1d12","Name":"Top 10 Departments","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":4,"Parameters":"[{\"WidgetSubTitle\":\"Non-Billable Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14.625\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"With Leaves As ( \\r\\n    SELECT dl.Department, \\r\\n\\t\\t\\tSUM(dl.[Hours]) AS [Hours] \\r\\n    FROM Analytics.Leave(@CurrentUserId) dl \\r\\n\\tWHERE dl.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dl.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n    GROUP BY dl.Department \\r\\n) \\r\\nSELECT dt.Department, \\r\\n\\t\\tSUM(isnull(dt.AdministrativeTime, 0) + isnull(dt.NewBusinessTime, 0) + isnull(dt.InternalWorkTime, 0)) + isnull(MAX(l.[Hours]), 0) as NonBillable \\r\\nFROM Analytics.Timesheet(@CurrentUserId) dt \\r\\nLEFT OUTER JOIN Leaves l \\r\\non (dt.Department = l.Department)\\r\\nWHERE dt.[Date] BETWEEN @FromDate AND @ToDate and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[CompanyId]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t\\t\\t\\t(dt.[DepartmentId] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\nGROUP BY dt.Department\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Department\",\"Company\",\"Division\"],\"Sort\":{\"Type\":2,\"FieldName\":\"NonBillable\"},\"Top\":{\"Count\":10}}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Hours_NonBillable_Per_Department/execute","Configuration":"{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Department\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"NonBillable\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"Department\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText}\",\n      \"font\": {\n        \"size\": 10,\n        \"family\": \"Varela Round\",\n        \"weight\": 500\n      }\n    }\n  }\n}","DashboardDefinitionId":"35fd430a-00a6-413e-b6a7-755d82f0b35a"}]}
