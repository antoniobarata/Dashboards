{
    "DashboardDefinitionRoles": [],
    "Id": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14",
    "Name": "Utilization",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"remove\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemNames\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "b6da676c-38d0-44a2-bd8e-0d3635d4aa3e",
            "Name": "User Projects",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 7,
            "Parameters": "[{\"WidgetSubTitle\":\"Different Projects the User was or is involved in\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":21,\"WidgetRows\":24,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, @FromDate, @ToDate) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, @FromDate, @ToDate) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @FromDate) = \u0027Sunday\u0027 THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @ToDate) = \u0027Saturday\u0027 THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\tu.Oid = @UserOid\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.Project,\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName,\\n\\t\\tdt.[Job],\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[AdministrativeTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ dt\\n\\tWHERE\\n\\t\\tdt.[Date] BETWEEN @FromDate and DateAdd(d, -1, @ToDate)\\n\\t\\tAND dt.UserId = @UserOid\\n\\tGROUP BY\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.Project,\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName,\\n        dt.[Job]\\n)\\nSELECT \\n\\tuh.ClientGroup,\\n\\tuh.Client,\\n\\tuh.[User],\\n\\tuh.Project,\\n\\tuh.ProjectClassificationName,\\n\\tIIF(uh.ProjectTypeName = \u0027\u0027, \u0027Admin\u0027, uh.ProjectTypeName) as ProjectTypeName,\\n\\tuh.Job,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\t0 AS Capacity,\\n\\t0 AS Leaves,\\n\\tIIF(uc.WorkingHours \u003e 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours \u003e 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc\\nWHERE\\n\\tuh.UserId = uc.UserId\\nUNION ALL\\nSELECT \\n\\t\u0027\u0027 as ClientGroup,\\n\\t\u0027\u0027 as Client,\\n\\t\u0027\u0027 as [User],\\n\\t\u0027\u0027 as Project,\\n\\t\u0027\u0027 as ProjectClassificationName,\\n\\t\u0027Leave\u0027 as ProjectTypeName,\\n\\t\u0027\u0027 as Job,\\n\\tuc.Leaves as [Hours],\\n\\t0 as AdministrativeHours,\\n\\t0 as InternalWorkHours,\\n\\t0 as NewBusinessHours,\\n\\t0 as BillableHours,\\n\\t0 as ClientHours,\\n\\t0 as NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\t0 as UtilizationPercentage,\\n\\t0 as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersCapacity uc\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"userOid\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
            "Configuration": "{\"headerFilter\":{\"visible\":true},\"stateStoring\":{\"enabled\":false},\"columnResizingMode\":\"widget\",\"allowColumnResizing\":\"true\",\"allowFiltering\":true,\"columnAutoWidth\":\"true\",\"grouping\":{\"autoExpandAll\":true},\"searchPanel\":{\"visible\":true},\"height\":\"450\",\"scrolling\":{\"mode\":\"virtual\"},\"selection\":{\"mode\":\"none\"},\"columnMinWidth\":\"80\",\"columns\":[{\"dataField\":\"Project\",\"name\":\"Project\",\"caption\":\"Project Name\",\"width\":175},{\"dataField\":\"Job\",\"caption\":\"Job\",\"width\":150},{\"dataField\":\"Client\",\"caption\":\"Client\",\"width\":120},{\"dataField\":\"ProjectClassificationName\",\"name\":\"ProjectClassificationName\",\"caption\":\"Project Classification\",\"width\":150,\"visible\":false},{\"dataField\":\"ProjectTypeName\",\"name\":\"ProjectTypeName\",\"caption\":\"Type\",\"width\":120,\"groupIndex\":0},{\"dataField\":\"NewBusinessHours\",\"caption\":\"Non-Billable\",\"name\":\"NonBillable\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"dataField\":\"BillableHours\",\"caption\":\"Billable\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"caption\":\"Utilization\",\"alignment\":\"center\",\"columns\":[{\"dataField\":\"UtilizationNonBillablePercentage\",\"caption\":\"Non Billable %\",\"name\":\"UtilizationNonBillable\",\"alignment\":\"right\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 1.2, (i.value \u003e= 0.8 \u0026\u0026 i.value \u003c 1.2), i.value \u003c 0.8, true);            }\"},{\"dataField\":\"UtilizationPercentage\",\"caption\":\"Billable %\",\"name\":\"Utilization\",\"alignment\":\"right\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 1.2, (i.value \u003e= 0.8 \u0026\u0026 i.value \u003c 1.2), i.value \u003c 0.8, true);            }\"}]},{\"dataField\":\"Hours\",\"caption\":\"Hours\",\"alignment\":\"right\",\"format\":\"#,##0\"}],\"sortByGroupSummaryInfo\":[{\"summaryItem\":\"count\"}],\"summary\":{\"calculateCustomSummary\":\"function (options) {            if (options.name === \u0027NonBillablePercentage\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                    options.totalValue = [0,0];                    break;                    case \u0027calculate\u0027:                    options.totalValue[0] = options.totalValue[0] + options.value.NewBusinessHours;                    options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case \u0027finalize\u0027:                    if(Number(options.totalValue[1]) \u003e 0)                    options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                    break;                }            }            if (options.name === \u0027BillablePercentage\u0027) {                        switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                        case \u0027calculate\u0027:                        options.totalValue[0] = options.totalValue[0] + options.value.BillableHours;                        options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case \u0027finalize\u0027:                        if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\"totalItems\":[{\"name\":\"BillablePercentage\",\"showInColumn\":\"Billable %\",\"displayFormat\":\"{0}\",\"valueFormat\":{\"type\":\"percent\",\"precision\":1},\"summaryType\":\"custom\",\"alignment\":\"right\"},{\"name\":\"NonBillablePercentage\",\"showInColumn\":\"Non Billable %\",\"displayFormat\":\"{0}\",\"valueFormat\":{\"type\":\"percent\",\"precision\":1},\"summaryType\":\"custom\",\"alignment\":\"right\"},{\"column\":\"Hours\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"right\"},{\"column\":\"Non-Billable\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"right\"},{\"column\":\"Billable\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"right\"}],\"groupItems\":[{\"name\":\"BillablePercentage\",\"showInColumn\":\"Billable %\",\"displayFormat\":\"{0}\",\"valueFormat\":{\"type\":\"percent\",\"precision\":1},\"summaryType\":\"custom\",\"showInGroupFooter\":false,\"alignByColumn\":true},{\"name\":\"NonBillablePercentage\",\"showInColumn\":\"Non Billable %\",\"displayFormat\":\"{0}\",\"valueFormat\":{\"type\":\"percent\",\"precision\":1},\"summaryType\":\"custom\",\"showInGroupFooter\":false,\"alignByColumn\":true},{\"column\":\"Hours\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true},{\"column\":\"Non-Billable\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true},{\"column\":\"Billable\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true}]}}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "39df100f-c94e-42ff-9d9b-4e5eea214526",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": 5,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027CompanyOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027DivisionOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027DepartmentOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027UserType\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 500) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,\r\n                    null,\r\n                    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        });return res;\r\n                    })\r\n                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027CompanyOid\u0027, e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027CompanyOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 200,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027DivisionOid\u0027, e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027DivisionOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n        \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n    }; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    } else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                        param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n    }\r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        });return res;\r\n    })\r\n}\",\r\n        \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n            if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027DepartmentOid\u0027, e.value);\r\n} else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027DepartmentOid\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n    \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"UserTypeId\",\r\n\"label\": {\r\n\"text\": \"User Type\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                                    let skip = loadOptions.skip || 0; \r\n                                    let take = loadOptions.take || 20;\r\n                                    var param = { name: searchValue, skip: skip, take: take\r\n};\r\n                                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027usertypes\u0027,param,\r\n{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All User Types\u0027\r\n});return res;\r\n});\r\n}\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027usertypes/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All User Types\",\r\n\"onValueChanged\": \"function(e){ \r\n                                if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027UserType\u0027, e.value);\r\n} else {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027UserType\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n        \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027UserTypeId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": false\r\n}\r\n}\r\n]\r\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "87ee2cb5-b6b8-4fd7-8d4c-60c8e1b0928b",
            "Name": "Utilization per Project Type ",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Project Type in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":10,\"WidgetRows\":11,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\t\\r\\n\\t\\tIIF(v.ProjectTypeName = \u0027\u0027, \u0027Admin Hours\u0027,v.ProjectTypeName) as ProjectTypeName,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT top 10\\r\\n\\t\\tv.ProjectTypeName,\\t\\r\\n\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tAND (v.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tAND (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\tAND (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tAND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\tv.ProjectTypeName\\r\\n) v\\r\\norder by (v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
            "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"ProjectTypeName\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Project Type\",\n            \"argumentField\": \"ProjectTypeName\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"seriesTemplate\": {\n        \"nameField\": \"ProjectTypeName\"\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "c61ca061-c00c-46e8-94e5-6f36373b8e55",
            "Name": "Utilization per User",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 6,
            "Parameters": "[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours in % of User Capacity\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":21,\"WidgetRows\":24,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\tu.[Name] as [User], \\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate), IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate)) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate), IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate)) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate)) = \u0027Sunday\u0027 THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate)) = \u0027Saturday\u0027 THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate) AND IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate))\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate) AND IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate))\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate) AND IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate)) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN IIF(@FromDate \u003e u.StartDate, @FromDate, u.StartDate) AND IIF(@ToDate \u003e u.ExpirationDate, u.ExpirationDate, @ToDate)) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\t(u.Company = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n\\t\\tAND (u.Division = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n\\t\\tAND (u.Department = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[AdministrativeTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ dt\\n\\tWHERE\\n        dt.[Date] between @FromDate and @ToDate\\n\\t\\tAND (dt.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n\\t\\tAND (dt.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n\\t\\tAND (dt.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\n\\tGROUP BY\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User]\\n)\\nSELECT \\n\\tuh.Department,\\n\\tuh.UserTypologyGroup,\\n\\tuc.[User],\\n\\tut.[Name] as UserType,\\n\\tuh.UserId,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\tIIF(uc.WorkingHours \u003e 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours \u003e 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc,\\n\\t[User] u\\n\\tLEFT OUTER JOIN UserType ut ON (ut.Oid = u.UserType)\\nWHERE\\n\\tuh.UserId = uc.UserId\\n\\tAND u.Oid = uc.UserId\\n\\tAND (u.UserType = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
            "Configuration": "{\r\n    \"headerFilter\": {\r\n        \"visible\": true\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"columnResizingMode\": \"widget\",\r\n    \"allowColumnResizing\": \"true\",\r\n    \"allowFiltering\": true,\r\n    \"columnAutoWidth\": \"true\",\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"onSelectionChanged\": \"function (selectedItems) {   \\r\\n    debugger;         \\r\\n    var data = selectedItems.selectedRowsData[0];            \\r\\n    if(data) {                \\r\\n        SkillsWorkflow.setDashboardFilter(\u0027userOid\u0027, data.UserId);          \\r\\n        }  \\r\\n    }\",\r\n    \"height\": \"500\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columnMinWidth\": \"80\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Department\",\r\n            \"caption\": \"Department\",\r\n            \"width\": 120,\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"UserTypologyGroup\",\r\n            \"name\": \"Typology Group\",\r\n            \"caption\": \"Typology\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"UserId\",\r\n            \"name\": \"Picture\",\r\n            \"caption\": \"Picture\",\r\n            \"width\": 30,\r\n            \"alignment\": \"left\",\r\n            \"cellTemplate\": \"function(e, i) {        console.log(i.text);        console.log(i.data.User);        SK.showImage(e, \u0027user\u0027, \u0027small\u0027, i.text, i.data.User);    }\"\r\n        },\r\n        {\r\n            \"dataField\": \"User\",\r\n            \"name\": \"User\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"UserType\",\r\n            \"name\": \"UserType\",\r\n            \"caption\": \"User Type\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"Capacity\",\r\n            \"caption\": \"Capacity\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"Leaves\",\r\n            \"caption\": \"Leaves\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"NewBusinessHours\",\r\n            \"caption\": \"Non-Billable\",\r\n            \"name\": \"NonBillable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"AdministrativeHours\",\r\n            \"caption\": \"Admin\",\r\n            \"name\": \"Admin\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"BillableHours\",\r\n            \"caption\": \"Billable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"caption\": \"Utilization\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"UtilizationNonBillablePercentage\",\r\n                    \"caption\": \"Non Billable %\",\r\n                    \"name\": \"UtilizationNonBillable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 1.2, (i.value \u003e= 0.8 \u0026\u0026 i.value \u003c 1.2), i.value \u003c 0.8, true);            }\"\r\n                },\r\n                {\r\n                    \"dataField\": \"UtilizationPercentage\",\r\n                    \"caption\": \"Billable %\",\r\n                    \"name\": \"Utilization\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 1.2, (i.value \u003e= 0.8 \u0026\u0026 i.value \u003c 1.2), i.value \u003c 0.8, true);            }\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"sortByGroupSummaryInfo\": [\r\n        {\r\n            \"summaryItem\": \"count\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === \u0027NonBillablePercentage\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                    options.totalValue = [0,0];                    break;                    case \u0027calculate\u0027:                    options.totalValue[0] = options.totalValue[0] + options.value.NewBusinessHours;                    options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case \u0027finalize\u0027:                    if(Number(options.totalValue[1]) \u003e 0)                    options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                    break;                }            }            if (options.name === \u0027BillablePercentage\u0027) {                        switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                        case \u0027calculate\u0027:                        options.totalValue[0] = options.totalValue[0] + options.value.BillableHours;                        options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case \u0027finalize\u0027:                        if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Capacity\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Leaves\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Admin\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Capacity\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Leaves\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Admin\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    }\r\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "d8cca3c7-5ce8-48c4-8efc-a99e9e4b31b4",
            "Name": "Period Selector",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Closed and In Progress Tickets\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":8,\"WidgetColumns\":48,\"WidgetHeader\":{\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\r\\n\\tSUM(v.[Hours]) as [Hours],\\r\\n\\tv.[Month]\\r\\nFROM\\r\\n(\\r\\n\\tSELECT \\r\\n\\t\\tIsNull(SUM(v.ActualTime), 0) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t(Year(v.[Date]) = @year or (Year(v.[Date]) = @year + 1 and Month(v.[Date]) = 1)) \\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (v.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tIsNull(SUM(v.[Hours]), 0) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.DatamartLeave/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t(Year(v.[Date]) = @year or (Year(v.[Date]) = @year + 1 and Month(v.[Date]) = 1)) \\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (v.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tIsNull(SUM(v.[Hours]), 0) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.DatamartHoliday/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t(Year(v.[Date]) = @year or (Year(v.[Date]) = @year + 1 and Month(v.[Date]) = 1)) \\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (@DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027 or v.DepartmentId = (select d.Division from Department d where d.Oid = @DepartmentOid))\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.[Month]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Range_Selector/execute",
            "Configuration": "{\r\n    \"containerBackgroundColor\": \"#e0e0e0\",\r\n    \"selectedRangeColor\": \"#f5564a\",\r\n    \"size\": {\r\n        \"height\": 150\r\n    },\r\n    \"chart\": {\r\n        \"commonSeriesSettings\": {\r\n            \"type\": \"steparea\",\r\n            \"argumentField\": \"Month\"\r\n        },\r\n        \"series\": [\r\n            {\r\n                \"valueField\": \"Hours\"\r\n            }\r\n        ]\r\n    },\r\n    \"scale\": {\r\n        \"minorTickInterval\": \"month\",\r\n        \"tickInterval\": \"month\",\r\n        \"valueType\": \"datetime\"\r\n    },\r\n    \"sliderMarker\": {\r\n        \"customizeText\": \"function (e) {                         var bla = SW.getComponent(\u0027rangeSelector\u0027);                                    if(bla === null)                                                return;                                    var endDate = bla._slidersController._sliders[1]._value;                                    if(endDate === e.value) {                                                var aux = new Date(endDate);                                    aux.setDate(aux.getDate()-1);                                                var blo = aux.toLocaleDateString(undefined, {month: \u0027long\u0027}) + \u0027 \u0027 + aux.toLocaleDateString(undefined,{day:\u0027numeric\u0027});                                    return blo;                                   } else {                                return e.valueText;                        }            }\",\r\n        \"format\": \"monthAndDay\",\r\n        \"color\": \"#da5859\"\r\n    },\r\n    \"value\": {\r\n        \"length\": {\r\n            \"years\": 1\r\n        }\r\n    },\r\n    \"disabled\": false,\r\n    \"onDrawn\": \"function bla(e) {\\r\\n  ;\\r\\n    SW.saveComponent(e.component, \u0027rangeSelector\u0027);\\r\\n}\"\r\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "137b9800-77a3-43a4-9112-b15a8f8b12ac",
            "Name": "Utilization per Client  ",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Client in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":10,\"WidgetRows\":11,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\ttop 10\\r\\n\\t\\tv.Client,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\t\\tv.Client,\\t\\r\\n\\t\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\tAND (v.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\tAND (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\t\\tAND (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\tAND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\t\\tv.Client\\r\\n) v\\r\\nORDER BY (v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) desc\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
            "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"Client\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Client\",\n            \"argumentField\": \"Client\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        },
        {
            "Id": "9cccf6a5-4f75-4c74-b668-fdad0eff37ee",
            "Name": "Utilization per Department",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Department in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":10,\"WidgetRows\":11,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\ttop 10\\r\\n\\t\\tv.Department,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\tv.Department,\\t\\r\\n\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.DatamartTimesheet/*(@CurrentUserId)*/ v, userType ut\\r\\n\\tWHERE\\t\\r\\n        (v.CompanyId = @CompanyOid or @CompanyOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n        AND (v.DivisionId = @DivisionOid or @DivisionOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n        AND (v.DepartmentId = @DepartmentOid or @DepartmentOid = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\tAND (ut.UserTypeId = @UserType or @UserType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n        AND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Department\\r\\n) v\\r\\nORDER BY (v.[Hours] / IIF(v.[TotalHours] \u003e 0, v.[TotalHours], 1.0)) DESC\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
            "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"Department\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Department\",\n            \"argumentField\": \"Department\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
        }
    ],
    "Version": 13,
    "Default": true
}