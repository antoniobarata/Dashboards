{"DashboardDefinitionRoles":[{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"bcc11000-0bfd-4128-be33-0c33ddbdb56f","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Finance Profile"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"},{"AccessRoleId":"6c7d5998-96ac-40e0-aa08-36a067bac255","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Responsible Profile"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"37bb1c74-f352-4a97-a363-b442659a92b7","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Administrator"},{"AccessRoleId":"b4ca8f83-0107-455d-bfcb-8038f3ac0f7b","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631","AccessRoleName":"Requester Profile"}],"Id":"382e9899-4114-49ba-b6b9-c2dc18319631","Name":"Utilization Dashboard","Active":true,"Location":0,"DocumentId":"00000000-0000-0000-0000-000000000000","DocumentName":"","DocumentTypeName":null,"DocumentsConfiguration":"{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"remove\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemNames\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}","Templates":[],"DashboardDefinitionComponents":[{"Id":"ed77a222-7db1-49be-a95d-1b242ee3807c","Name":"","Active":true,"UseQuery":false,"Query":"","Size":12,"Order":0,"Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"","Configuration":"{\r\n    \"colCount\": 5,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2019); SkillsWorkflow.setDashboardFilter('CompanyOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('DivisionOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('DepartmentOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('UserType', '00000000-0000-0000-0000-000000000000');}, 500) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI('GET', 'companies/lookup',\r\n                    null,\r\n                    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'\r\n                        });return res;\r\n                    })\r\n                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('CompanyOid', e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter('CompanyOid', '00000000-0000-0000-0000-000000000000');\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 200,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent('CompanyId'); \r\n                            if (companyId == '00000000-0000-0000-0000-000000000000') {\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',\r\n                null,\r\n                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'\r\n                    });return res;\r\n                })\r\n            } else if (companyId != null) { \r\n                                param['companyId'\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,\r\n                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('DivisionOid', e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter('DivisionOid', '00000000-0000-0000-0000-000000000000');\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');\r\n}\",\r\n        \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n    }; \r\n                    var divisionId = SW.getValueFromComponent('DivisionId'); \r\n                    var companyId = SW.getValueFromComponent('CompanyId'); \r\n                    if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') { \r\n                        param['divisionId'\r\n        ] = divisionId;\r\n                        param['companyId'\r\n        ] = companyId;\r\n    } else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {\r\n                        param['divisionId'\r\n        ] = divisionId;\r\n    }\r\n                    return SkillsWorkflow.executeAPI('GET', 'departments',param,\r\n    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'\r\n        });return res;\r\n    })\r\n}\",\r\n        \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n            if(e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('DepartmentOid', e.value);\r\n} else {\r\n                    SkillsWorkflow.setDashboardFilter('DepartmentOid', '00000000-0000-0000-0000-000000000000');\r\n}\r\n}\",\r\n    \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"UserTypeId\",\r\n\"label\": {\r\n\"text\": \"User Type\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                                    let skip = loadOptions.skip || 0; \r\n                                    let take = loadOptions.take || 20;\r\n                                    var param = { name: searchValue, skip: skip, take: take\r\n};\r\n                                    return SkillsWorkflow.executeAPI('GET', 'usertypes',param,\r\n{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All User Types'\r\n});return res;\r\n});\r\n}\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI('GET', 'usertypes/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All User Types\",\r\n\"onValueChanged\": \"function(e){ \r\n                                if(e.value != null && e.value != '') {\r\n                                    SkillsWorkflow.setDashboardFilter('UserType', e.value);\r\n} else {\r\n                                    SkillsWorkflow.setDashboardFilter('UserType', '00000000-0000-0000-0000-000000000000');\r\n}\r\n}\",\r\n        \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'UserTypeId'); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": false\r\n}\r\n}\r\n]\r\n}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"d9dfa98f-19e0-40cd-8762-62b464a2d865","Name":"Utilization per Department","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":4,"Parameters":"[{\"WidgetSubTitle\":\"Actual Hours per Department in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetXPosition\":16,\"WidgetYPosition\":11,\"WidgetRows\":11,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\t\\r\\n\\t\\tv.Department,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\tv.Department,\\t\\r\\n\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n        (v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n        AND (v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\r\\n        AND (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\tAND (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n        AND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Department\\r\\n) v\\r\\nORDER BY (v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) DESC\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Totals/execute","Configuration":"{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        }\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Department\",\n            \"argumentField\": \"Department\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"459088cf-37c6-4d8a-a630-7ff9a6e7f600","Name":"Utilization per Project Type ","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":5,"Parameters":"[{\"WidgetSubTitle\":\"Actual Hours per Project Type in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetXPosition\":32,\"WidgetYPosition\":11,\"WidgetRows\":11,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\t\\r\\n\\t\\tIIF(v.ProjectTypeName = '', 'Admin Hours',v.ProjectTypeName) as ProjectTypeName,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\tv.ProjectTypeName,\\t\\r\\n\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tAND (v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tAND (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\tAND (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tAND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\tv.ProjectTypeName\\r\\n) v\\r\\norder by (v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Totals/execute","Configuration":"{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"ProjectTypeName\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Project Type\",\n            \"argumentField\": \"ProjectTypeName\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"seriesTemplate\": {\n        \"nameField\": \"ProjectTypeName\"\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"e59796e2-32c9-468b-9167-862759aea27f","Name":"Period Selector","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":2,"Parameters":"[{\"WidgetSubTitle\":\"Closed and In Progress Tickets\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":9,\"WidgetColumns\":48,\"WidgetHeader\":{\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\r\\n\\tSUM(v.[Hours]) as [Hours],\\r\\n\\tv.[Month]\\r\\nFROM\\r\\n(\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.ActualTime) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\tYear(v.[Date]) = @year\\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (v.DivisionId = @DepartmentOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.[Hours]) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Leave(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\tYear(v.[Date]) = @year\\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (v.DivisionId = @DepartmentOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.[Hours]) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Holiday(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\tYear(v.[Date]) = @year\\r\\n\\t\\tand (v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (@DivisionOid = '00000000-0000-0000-0000-000000000000' or v.DepartmentId = (select d.Division from Department d where d.Oid = @DepartmentOid))\\r\\n\\t\\tand (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand v.UserId = ut.Oid \\r\\n\\t\\tand (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.[Month]\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\",\"UserType\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Range_Selector/execute","Configuration":"{\"containerBackgroundColor\":\"#e0e0e0\",\"selectedRangeColor\":\"#f5564a\",\"chart\":{\"commonSeriesSettings\":{\"type\":\"steparea\",\"argumentField\":\"Month\"},\"series\":[{\"valueField\":\"Hours\"}]},\"scale\":{\"minorTickInterval\":\"month\",\"tickInterval\":\"month\",\"valueType\":\"datetime\"},\"sliderMarker\":{\"customizeText\":\"function (e) {                         var bla = SW.getComponent('rangeSelector');                                    if(bla === null)                                                return;                                    var endDate = bla._slidersController._sliders[1]._value;                                    if(endDate === e.value) {                                                var aux = new Date(endDate);                                    aux.setDate(aux.getDate()-1);                                                var blo = aux.toLocaleDateString(undefined, {month: 'long'}) + ' ' + aux.toLocaleDateString(undefined,{day:'numeric'});                                    return blo;                                   } else {                                return e.valueText;                        }            }\",\"format\":\"monthAndDay\",\"color\":\"#da5859\"},\"value\":{\"length\":{\"months\":1}},\"disabled\":false,\"onDrawn\":\"function bla(e) {\\r\\n  ;\\r\\n    SW.saveComponent(e.component, 'rangeSelector');\\r\\n}\"}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"e7dfa54c-40f1-498a-b25c-d78d3402edd9","Name":"User Projects","Active":true,"UseQuery":false,"Query":null,"Size":6,"Order":7,"Parameters":"[{\"WidgetSubTitle\":\"Different Projects the User was or is involved in\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":24,\"WidgetYPosition\":22,\"WidgetRows\":22,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, @FromDate, @ToDate) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, @FromDate, @ToDate) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @FromDate) = 'Sunday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @ToDate) = 'Saturday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\tu.Oid = @UserOid\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.Project,\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName,\\n\\t\\tdt.[Job],\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[InternalWorkTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.Timesheet(@CurrentUserId) dt\\n\\tWHERE\\n\\t\\tdt.[Date] BETWEEN @FromDate AND @ToDate\\n\\t\\tAND dt.UserId = @UserOid\\n\\tGROUP BY\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.Project,\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName,\\n        dt.[Job]\\n)\\nSELECT \\n\\tuh.ClientGroup,\\n\\tuh.Client,\\n\\tuh.[User],\\n\\tuh.Project,\\n\\tuh.ProjectClassificationName,\\n\\tuh.ProjectTypeName,\\n\\tuh.Job,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc\\nWHERE\\n\\tuh.UserId = uc.UserId\\n\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"userOid\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Per_Company_Department_User/execute","Configuration":"{\r\n    \"headerFilter\": {\r\n        \"visible\": true\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"columnResizingMode\": \"widget\",\r\n    \"allowColumnResizing\": \"true\",\r\n    \"allowFiltering\": true,\r\n    \"columnAutoWidth\": \"true\",\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"height\": \"100%\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"columnMinWidth\": \"80\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Project\",\r\n            \"name\": \"Project\",\r\n            \"caption\": \"Project Name\",\r\n            \"width\": 120,\r\n            \"groupIndex\": 1\r\n        },\r\n        {\r\n            \"dataField\": \"Job\",\r\n            \"caption\": \"Job\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"caption\": \"Client\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"ProjectClassificationName\",\r\n            \"name\": \"ProjectClassificationName\",\r\n            \"caption\": \"Project Classification\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"ProjectTypeName\",\r\n            \"name\": \"ProjectTypeName\",\r\n            \"caption\": \"Type\",\r\n            \"width\": 120,\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"ClientHours\",\r\n            \"caption\": \"Client \",\r\n            \"name\": \"ClientHours\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"NewBusinessHours\",\r\n            \"caption\": \"Non-Billable\",\r\n            \"name\": \"NonBillable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"BillableHours\",\r\n            \"caption\": \"Billable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"caption\": \"Utilization\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"UtilizationPercentage\",\r\n                    \"caption\": \"Billable %\",\r\n                    \"name\": \"Utilization\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"cellTemplate\": \"function(e, i) {          SK.setRAG(e, (i.value * 100.0).toFixed(1), i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);        }\"\r\n                },\r\n                {\r\n                    \"dataField\": \"UtilizationNonBillablePercentage\",\r\n                    \"caption\": \"Non Billable %\",\r\n                    \"name\": \"UtilizationNonBillable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"cellTemplate\": \"function(e, i) {          SK.setRAG(e, (i.value * 100.0).toFixed(1), i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);      }\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"AdministrativeHours\",\r\n            \"caption\": \"Admin Time\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"Leaves\",\r\n            \"caption\": \"Leaves\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        }\r\n    ],\r\n    \"sortByGroupSummaryInfo\": [\r\n        {\r\n            \"summaryItem\": \"count\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"Capacity\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            }\r\n        ]\r\n    }\r\n}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"e91e006a-44cc-467d-8c36-f7504d526243","Name":"Utilization per Client  ","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":3,"Parameters":"[\r\n    {\r\n        \"WidgetSubTitle\": \"Actual Hours per Client in % of Total\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#dddddd\",\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 11,\r\n        \"WidgetRows\": 11,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Planned\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with userType as (\\r\\n\\tSELECT\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n\\tFROM \\r\\n\\t\\tAnalytics.DatamartUser v\\r\\n\\tGROUP BY\\r\\n\\t\\tv.Oid,\\r\\n\\t\\tv.UserTypeId\\r\\n)\\r\\nSELECT\\t\\r\\n\\t\\tv.Client,\\r\\n\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nFROM\\t\\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\t\\tv.Client,\\t\\r\\n\\t\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\tFROM\\r\\n\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v, userType ut\\r\\n\\tWHERE\\t\\r\\n\\t\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\tAND (v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\tAND (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\tAND v.UserId = ut.Oid \\r\\n\\t\\t\\tAND (ut.UserTypeId = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\tAND v.[Date] between @FromDate and @ToDate\\r\\n\\tGROUP BY\\r\\n\\t\\t\\tv.Client\\r\\n) v\\r\\nORDER BY (v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) desc\\r\\n\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"CompanyOid\",\r\n                \"DivisionOid\",\r\n                \"DepartmentOid\",\r\n                \"UserType\"\r\n            ]\r\n        }\r\n    }\r\n]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Totals/execute","Configuration":"{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        }\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Client\",\n            \"argumentField\": \"Client\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"stack\"\n}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"},{"Id":"b6660d7d-8903-473e-a76c-fb792318ce3e","Name":"Utilization per User","Active":true,"UseQuery":false,"Query":null,"Size":6,"Order":6,"Parameters":"[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours in % of User Capacity\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":22,\"WidgetRows\":22,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, @FromDate, @ToDate) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, @FromDate, @ToDate) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @FromDate) = 'Sunday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @ToDate) = 'Saturday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\t(u.Company = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\n\\t\\tAND (u.Division = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\n\\t\\tAND (u.Department = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[InternalWorkTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.Timesheet(@CurrentUserId) dt\\n\\tWHERE\\n        dt.[Date] between @FromDate and @ToDate\\n\\t\\tAND (dt.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\n\\t\\tAND (dt.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000')\\n\\t\\tAND (dt.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\n\\tGROUP BY\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User]\\n)\\nSELECT \\n\\tuh.Department,\\n\\tuh.UserTypologyGroup,\\n\\tuh.[User],\\n\\tut.[Name] as UserType,\\n\\tuh.UserId,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc,\\n\\t[User] u\\n\\tLEFT OUTER JOIN UserType ut ON (ut.Oid = u.UserType)\\nWHERE\\n\\tuh.UserId = uc.UserId\\n\\tAND u.Oid = uc.UserId\\n\\tAND (u.UserType = @UserType or @UserType = '00000000-0000-0000-0000-000000000000')\\n\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]","DashboardComponentType":{"Id":"3c1da83b-efe9-4b70-87d0-c3813a512774","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Utilization_Per_Company_Department_User/execute","Configuration":"{\"headerFilter\":{\"visible\":true},\"grouping\":{\"autoExpandAll\":true},\"columnResizingMode\":\"widget\",\"allowColumnResizing\":\"true\",\"allowFiltering\":true,\"columnAutoWidth\":\"true\",\"searchPanel\":{\"visible\":true},\"selection\":{\"mode\":\"single\"},\"onSelectionChanged\":\"function (selectedItems) {            var data = selectedItems.selectedRowsData[0];            if(data) {                SkillsWorkflow.setDashboardFilter('userOid', data.UserId);          }  }\",\"height\":\"100%\",\"scrolling\":{\"mode\":\"virtual\"},\"columnMinWidth\":\"80\",\"columns\":[{\"dataField\":\"Department\",\"caption\":\"Department\",\"width\":120,\"groupIndex\":0},{\"dataField\":\"UserTypologyGroup\",\"name\":\"Typology Group\",\"caption\":\"Typology\",\"width\":120},{\"dataField\":\"UserId\",\"name\":\"Picture\",\"caption\":\"Picture\",\"width\":30,\"alignment\":\"left\",\"cellTemplate\":\"function(e, i) {        console.log(i.text);        console.log(i.data.User);        SK.showImage(e, 'user', 'small', i.text, i.data.User);    }\"},{\"dataField\":\"User\",\"name\":\"User\",\"caption\":\"User\",\"width\":120},{\"dataField\":\"UserType\",\"name\":\"UserType\",\"caption\":\"User Type\",\"width\":120},{\"dataField\":\"Capacity\",\"caption\":\"Capacity\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"dataField\":\"Leaves\",\"caption\":\"Leaves\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"dataField\":\"NewBusinessHours\",\"caption\":\"Non-Billable\",\"name\":\"NonBillable\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"dataField\":\"AdministrativeHours\",\"caption\":\"Admin\",\"name\":\"Admin\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"dataField\":\"BillableHours\",\"caption\":\"Billable\",\"alignment\":\"right\",\"format\":\"#,##0\"},{\"caption\":\"Utilization\",\"alignment\":\"center\",\"columns\":[{\"dataField\":\"UtilizationNonBillablePercentage\",\"caption\":\"Non Billable %\",\"name\":\"UtilizationNonBillable\",\"alignment\":\"right\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);            }\"},{\"dataField\":\"UtilizationPercentage\",\"caption\":\"Billable %\",\"name\":\"Utilization\",\"alignment\":\"right\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);          }\"}]}],\"sortByGroupSummaryInfo\":[{\"summaryItem\":\"count\"}],\"summary\":{\"totalItems\":[{\"column\":\"Capacity\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"right\"},{\"column\":\"Leaves\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"right\"}]}}","DashboardDefinitionId":"382e9899-4114-49ba-b6b9-c2dc18319631"}]}
