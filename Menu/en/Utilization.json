{
  "DashboardDefinitionRoles": [],
  "Id": "5151f4f6-a6bc-4915-b98d-e85cebea18c8",
  "Name": "Utilization",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"remove\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemNames\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "8ee2fc81-e4f0-4263-a38c-3513bf5aeaa7",
      "Name": "Utilization per User",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours in % of User Capacity\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, @FromDate, @ToDate) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, @FromDate, @ToDate) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @FromDate) = 'Sunday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @ToDate) = 'Saturday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\tu.Company = @CompanyOid\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[InternalWorkTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.Timesheet(@CurrentUserId) dt\\n\\tWHERE\\n\\t\\tdt.[Date] BETWEEN @FromDate AND @ToDate\\n\\t\\tAND dt.CompanyId = @CompanyOid\\n\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR dt.DepartmentId IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR dt.DepartmentId = @DepartmentOid)\\n\\tGROUP BY\\n\\t\\tdt.Department,\\n\\t\\tdt.UserTypologyGroup,\\t\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User]\\n)\\nSELECT \\n\\tuh.Department,\\n\\tuh.UserTypologyGroup,\\n\\tuh.[User],\\n\\tut.[Name] as UserType,\\n\\tuh.UserId,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc,\\n\\t[User] u\\n\\tLEFT OUTER JOIN UserType ut ON (ut.Oid = u.UserType)\\nWHERE\\n\\tuh.UserId = uc.UserId\\n\\tAND u.Oid = uc.UserId\\n\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"companyOid\",\"divisionOid\",\"departmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\n  \"headerFilter\": {\n    \"visible\": true\n  },\n  \"grouping\" : {\n    \"autoExpandAll\" : true\n  },\n  \"columnResizingMode\": \"widget\",\n  \"allowColumnResizing\": true,\n  \"allowFiltering\": true,\n  \"columnAutoWidth\": true,\n  \"searchPanel\": {\n    \"visible\": true\n  },\n  \"selection\": {\n    \"mode\": \"single\"\n  },\n\"onSelectionChanged\": \"function (selectedItems) {\n            var data = selectedItems.selectedRowsData[0];\n            if(data) {\n                SkillsWorkflow.setDashboardFilter('userOid', data.UserId);\n          }\n  }\",\n  \"height\": \"100%\",\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"columnMinWidth\": 80,\n  \"columns\": [\n    {\n      \"dataField\": \"Department\",\n      \"caption\": \"Department\",\n      \"width\": 120,\n      \"groupIndex\": 0\n    },\n    {\n      \"dataField\": \"UserTypologyGroup\",\n      \"name\": \"Typology Group\",\n      \"caption\": \"Typology\",\n      \"width\": 120\n    },\n    {\n      \"dataField\": \"UserId\",\n      \"name\": \"Picture\",\n      \"caption\": \"Picture\",\n      \"width\": 30,\n      \"alignment\": \"left\",\n      \"cellTemplate\": \"function(e, i) {\n        console.log(i.text);\n        console.log(i.data.User);\n        SK.showImage(e, 'user', 'small', i.text, i.data.User);\n    }\"\n  },\n    {\n      \"dataField\": \"User\",\n      \"name\": \"User\",\n      \"caption\": \"User\",\n      \"width\": 120\n    },\n    {\n      \"dataField\": \"UserType\",\n      \"name\": \"UserType\",\n      \"caption\": \"User Type\",\n      \"width\": 120\n    },\n    {\n      \"dataField\": \"Capacity\",\n      \"caption\": \"Capacity\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"Leaves\",\n      \"caption\": \"Leaves\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"NewBusinessHours\",\n      \"caption\": \"Non-Billable\",\n      \"name\": \"NonBillable\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"AdministrativeHours\",\n      \"caption\": \"Admin\",\n      \"name\": \"Admin\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"BillableHours\",\n      \"caption\": \"Billable\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"caption\": \"Utilization\",\n              \"alignment\": \"center\",\n              \"columns\": [\n            {\n              \"dataField\": \"UtilizationNonBillablePercentage\",\n              \"caption\": \"Non Billable %\",\n              \"name\": \"UtilizationNonBillable\",\n              \"alignment\": \"right\",\n              \"format\": \"#,##0\",\n              \"cellTemplate\": \"function(e, i) {\n                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);\n            }\n              \"\n          },\n          {\n            \"dataField\": \"UtilizationPercentage\",\n            \"caption\": \"Billable %\",\n            \"name\": \"Utilization\",\n            \"alignment\": \"right\",\n            \"format\": \"#,##0\",\n            \"cellTemplate\": \"function(e, i) {\n                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);\n          }\n              \"\n        }\n      ]\n    }\n  ],\n  \"sortByGroupSummaryInfo\": [\n    {\n      \"summaryItem\": \"count\"\n    }\n  ],\n  \"summary\": {\n    \"totalItems\": [\n      {\n        \"column\": \"Capacity\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"{0}\",\n        \"alignment\": \"right\"\n      },\n      {\n        \"column\": \"Leaves\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"{0}\",\n        \"alignment\": \"right\"\n      }\n    ]\n  }\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "7077f62f-2078-4db0-b3f6-3c5f768bd661",
      "Name": "Utilization per Client  ",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Client in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetHeight\":150,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\t\\tSELECT\\t\\r\\n\\t\\t\\tv.Client,\\r\\n\\t\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\n\\t\\tFROM\\t\\r\\n\\t\\t(\\r\\n\\t\\t\\tSELECT\\r\\n\\t\\t\\t\\tv.Client,\\t\\r\\n\\t\\t\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\t\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\t\\t\\tFROM\\r\\n\\t\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tWHERE\\t\\r\\n\\t\\t\\t\\tv.CompanyId = @CompanyOid\\r\\n\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\r\\n\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId = @DepartmentOid)\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ AND v.[Date] between @FromDate and @ToDate  /*[/DateFilter]*/\\r\\n\\t\\t\\tGROUP BY\\r\\n\\t\\t\\t\\tv.Client\\r\\n\\t\\t) v\\r\\n\\t\\tORDER BY (v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) DESC\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"companyOid\",\"divisionOid\",\"departmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"cornerRadius\": \"2px\",\n    \"label\": {\n      \"visible\": true,\n      \"showForZeroValues\": false,\n      \"format\": \"percent\"\n    }\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"tooltip\": {\n    \"format\": \"percent\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"label\": {\n      \"format\": \"percent\"\n    }\n  },\n  \"series\": [\n    {\n      \"name\":\"Client\",\n      \"argumentField\": \"Client\",\n      \"valueField\": \"UtilizationPercentage\",\n      \"label\": {\n        \"visible\": false,\n        \"format\": \"percent\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": false,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 8\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\",\n  \"dataPrepareSettings\": {\n    \"sortingMethod\": false\n  }\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "330add09-d34c-4b40-b5e8-4fc9101575ac",
      "Name": "Period Selector",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Closed and In Progress Tickets\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":30,\"WidgetHeader\":{\"WidgetPeriodChooser\":{\"startDate\":\"2019-01-01\",\"endDate\":\"2019-12-31\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT\\r\\n\\tSUM(v.[Hours]) as [Hours],\\r\\n\\tv.[Month]\\r\\nFROM\\r\\n(\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.ActualTime) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\tWHERE\\t\\r\\n\\t\\tv.[Date] between DateAdd(mm, -12, getdate()) and getdate()\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.[Hours]) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Leave(@CurrentUserId) v\\r\\n\\tWHERE\\t\\r\\n\\t\\tv.[Date] between DateAdd(mm, -12, getdate()) and getdate()\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tSUM(v.[Hours]) as [Hours],\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month]\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Holiday(@CurrentUserId) v\\r\\n\\tWHERE\\t\\r\\n\\t\\tv.[Date] between DateAdd(mm, -12, getdate()) and getdate()\\r\\n\\tGROUP BY\\r\\n\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.[Month]\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Range_Selector/execute",
      "Configuration": "{\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"Month\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Hours\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"month\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": {\n    \"startValue\": \"2019-08-01\",\n    \"endValue\": \"2019-9-01\",\n    \"length\": {\n      \"months\": 1\n    }\n  }\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "6da88038-ff70-4595-9023-64b67a81dc10",
      "Name": "Company and Client Group",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\n  \"colCount\": 4,\n  \"items\": [\n    {\n      \"name\": \"Year\",\n      \"dataField\": \"Year\",\n      \"editorType\": \"dxNumberBox\",\n      \"editorOptions\": {\n        \"showSpinButtons\": true,\n        \"value\": 2019,\n        \"width\": 65,\n        \"placeholder\": \"year\",\n        \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2019); SkillsWorkflow.setDashboardFilter('companyOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('divisionOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('departmentOid', '00000000-0000-0000-0000-000000000000');}, 500) }\",\n        \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\n      },\n      \"noDataText\": \"Please wait...\"\n    },\n    {\n      \"dataField\": \"CompanyId\",\n      \"label\": {\n        \"text\": \"Company\"\n      },\n      \"editorType\": \"dxSelectBox\",\n      \"editorOptions\": {\n        \"width\": 250,\n        \"searchEnabled\": true,\n        \"dataSource\": {\n          \"load\": \"function(loadOptions){ \n                            var searchValue = (\n                            loadOptions.searchValue != null ? loadOptions.searchValue : ''); \n                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \n                            return SkillsWorkflow.executeAPI('GET', 'companies/lookup',\n          null,\n          {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'\n            });return res;\n          })\n        }\",\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\n      },\n      \"placeholder\": \"All companies\",\n      \"displayExpr\": \"Name\",\n      \"valueExpr\": \"Id\",\n      \"onValueChanged\": \"function(e){ \n                if( e.value != null && e.value != '') {\n                    SkillsWorkflow.setDashboardFilter('companyOid', e.value);\n      } else {\n                    SkillsWorkflow.setDashboardFilter('companyOid', '00000000-0000-0000-0000-000000000000');\n      }\n                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');\n    }\",\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\n  }\n},\n{\n  \"dataField\": \"DivisionId\",\n  \"label\": {\n    \"text\": \"Division\"\n  },\n  \"editorType\": \"dxSelectBox\",\n  \"editorOptions\": {\n    \"width\": 250,\n    \"searchEnabled\": true,\n    \"dataSource\": {\n      \"load\": \"function(loadOptions){ \n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \n                            let skip = loadOptions.skip || 0; \n                            let take = loadOptions.take || 20; \n                            var param = { name:searchValue, skip: skip, take: take\n      }; \n                            var companyId = SW.getValueFromComponent('CompanyId'); \n                            if (companyId == '00000000-0000-0000-0000-000000000000') {\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',\n        null,\n        {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'\n          });return res;\n        })\n      } else if (companyId != null) { \n                                param['companyId'\n        ] = companyId;\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,\n        {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'\n          });return res;\n        })\n      }\n    }\",\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\n  },\n  \"placeholder\": \"All divisions\",\n  \"onValueChanged\": \"function(e){ \n                if (e.value != null && e.value != '') {\n                    SkillsWorkflow.setDashboardFilter('divisionOid', e.value);\n  } else {\n                    SkillsWorkflow.setDashboardFilter('divisionOid', '00000000-0000-0000-0000-000000000000');\n  }\n                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');\n}\",\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\n\"displayExpr\": \"Name\",\n\"valueExpr\": \"Id\",\n\"disabled\": true\n}\n},\n{\n\"dataField\": \"DepartmentId\",\n\"label\": {\n\"text\": \"Department\"\n},\n\"editorType\": \"dxSelectBox\",\n\"editorOptions\": {\n\"width\": 250,\n\"searchEnabled\": true,\n\"dataSource\": {\n  \"load\": \"function(loadOptions){ \n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \n                    let skip = loadOptions.skip || 0; \n                    let take = loadOptions.take || 20;\n                    var param = { name: searchValue, skip: skip, take: take\n  }; \n                    var divisionId = SW.getValueFromComponent('DivisionId'); \n                    var companyId = SW.getValueFromComponent('CompanyId'); \n                    if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') { \n                        param['divisionId'\n    ] = divisionId;\n                        param['companyId'\n    ] = companyId;\n  } \n                    return SkillsWorkflow.executeAPI('GET', 'departments',param,\n  {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'\n    });return res;\n  })\n}\",\n                \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\n},\n\"placeholder\": \"All departments\",\n\"onValueChanged\": \"function(e){ \n                    if(e.value != null && e.value != '') {\n                        SkillsWorkflow.setDashboardFilter('departmentOid', e.value);\n} else {\n                        SkillsWorkflow.setDashboardFilter('departmentOid', '00000000-0000-0000-0000-000000000000');\n}\n}\",\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\n\"displayExpr\": \"Name\",\n\"valueExpr\": \"Id\",\n\"disabled\": true\n}\n}\n]\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "26fb6a27-1323-409a-b109-6909f2d04b80",
      "Name": "Utilization per Department",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Department in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetHeight\":150,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\t\\tSELECT\\t\\r\\n\\t\\t\\tv.Department,\\r\\n\\t\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\n\\t\\tFROM\\t\\r\\n\\t\\t(\\r\\n\\t\\t\\tSELECT\\r\\n\\t\\t\\t\\tv.Department,\\t\\r\\n\\t\\t\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\t\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\t\\t\\tFROM\\r\\n\\t\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tWHERE\\t\\r\\n\\t\\t\\t\\tv.CompanyId = @CompanyOid\\r\\n\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\r\\n\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId = @DepartmentOid)\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ AND v.[Date] between @FromDate and @ToDate  /*[/DateFilter]*/\\r\\n\\t\\t\\tGROUP BY\\r\\n\\t\\t\\t\\tv.Department\\r\\n\\t\\t) v\\r\\n\\t\\tORDER BY (v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) DESC\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"companyOid\",\"divisionOid\",\"departmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"cornerRadius\": \"2px\",\n    \"label\": {\n      \"visible\": true,\n      \"showForZeroValues\": false,\n      \"format\": \"percent\"\n    }\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"tooltip\": {\n    \"format\": \"percent\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"label\": {\n      \"format\": \"percent\"\n    }\n  },\n  \"series\": [\n    {\n      \"name\":\"Department\",\n      \"argumentField\": \"Department\",\n      \"valueField\": \"UtilizationPercentage\",\n      \"label\": {\n        \"visible\": false,\n        \"format\": \"percent\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": false,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 8\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\",\n  \"dataPrepareSettings\": {\n    \"sortingMethod\": false\n  }\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "6ff9ced3-899a-4162-aa80-ac0428c96279",
      "Name": "Utilization per Project Type ",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Project Type in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetHeight\":150,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\t\\tSELECT\\t\\r\\n\\t\\t\\tv.ProjectTypeName,\\r\\n\\t\\t\\t(v.[Hours] / IIF(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\n\\t\\tFROM\\t\\r\\n\\t\\t(\\r\\n\\t\\t\\tSELECT\\r\\n\\t\\t\\t\\tv.ProjectTypeName,\\t\\r\\n\\t\\t\\t\\tSUM(v.BillableTime) as [Hours],\\r\\n\\t\\t\\t\\tSUM(SUM(v.BillableTime)) OVER () as [TotalHours]\\r\\n\\t\\t\\tFROM\\r\\n\\t\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tWHERE\\t\\r\\n\\t\\t\\t\\t(1 = 1)\\r\\n\\t\\t\\t\\tAND v.CompanyId = @CompanyOid\\r\\n\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\r\\n\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR v.DepartmentId = @DepartmentOid)\\r\\n\\t\\t\\t\\t/*[DateFilter]*/ AND v.[Date] between @FromDate and @ToDate  /*[/DateFilter]*/\\r\\n\\t\\t\\tGROUP BY\\r\\n\\t\\t\\t\\tv.ProjectTypeName\\r\\n\\t\\t) v\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"companyOid\",\"divisionOid\",\"departmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"cornerRadius\": \"2px\",\n    \"label\": {\n      \"visible\": true,\n      \"showForZeroValues\": false,\n      \"format\": \"percent\"\n    },\n    \"argumentField\": \"ProjectTypeName\",\n    \"valueField\": \"UtilizationPercentage\"\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"tooltip\": {\n    \"format\": \"percent\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"label\": {\n      \"format\": \"percent\"\n    }\n  },\n  \"series\": [\n    {\n      \"label\": {\n        \"visible\": false,\n        \"format\": \"percent\"\n      }\n    }\n  ],\n  \"seriesTemplate\": {\n    \"nameField\": \"ProjectTypeName\"\n  },\n  \"legend\": {\n    \"visible\": false,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 8\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    },
    {
      "Id": "fea3366f-1afa-4a34-bae9-b4c5c995d4c4",
      "Name": "User Projects",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"Different Projects the User was or is involved in\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH UsersCapacity AS\\n(\\n\\tSELECT \\n\\t\\tu.Oid AS UserId,\\n\\t\\t(\\n\\t\\t\\t(\\n\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t(DATEDIFF(dd, @FromDate, @ToDate) + 1)\\n\\t\\t\\t\\t\\t-(DATEDIFF(wk, @FromDate, @ToDate) * 2)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @FromDate) = 'Sunday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t\\t-(CASE WHEN DATENAME(dw, @ToDate) = 'Saturday' THEN 1 ELSE 0 END)\\n\\t\\t\\t\\t) + 1 \\n\\t\\t\\t)\\n\\t\\t\\t-\\n\\t\\t\\t(\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t\\t+\\n\\t\\t\\t\\t(SELECT COUNT(*) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate)\\n\\t\\t\\t)\\n\\t\\t) * u.RequiredHours AS WorkingHours,\\n\\t\\t(SELECT ISNULL(SUM(dl.[Hours]), 0.0) FROM Analytics.DatamartLeave dl WHERE dl.UserId = u.Oid AND dl.[Date] BETWEEN @FromDate AND @ToDate) AS Leaves,\\n\\t\\t(SELECT ISNULL(SUM(dh.[Hours]), 0.0) FROM Analytics.DatamartHoliday dh WHERE dh.UserId = u.Oid AND dh.[Date] BETWEEN @FromDate AND @ToDate) as Holidays\\n\\tFROM\\n\\t\\t[User] u\\n\\tWHERE\\n\\t\\tu.Oid = @UserOid\\n),\\nUsersHours AS\\n(\\n\\tSELECT\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName,\\n\\t\\tSUM(dt.ActualTime) AS [Hours],\\n\\t\\tSUM(dt.AdministrativeTime) AS [AdministrativeHours],\\n\\t\\tSUM(ISNULL(dt.InternalWorkTime, 0.0)) AS [InternalWorkHours],\\n\\t\\tSUM(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\tSUM(dt.BillableTime) AS [BillableHours],\\n\\t\\tSUM(ISNULL(dt.BillableTime, 0.0) - ISNULL(dt.[InternalWorkTime], 0.0)) as [ClientHours],\\n\\t\\tSUM(ISNULL(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tFROM \\n\\t\\tAnalytics.Timesheet(@CurrentUserId) dt\\n\\tWHERE\\n\\t\\tdt.[Date] BETWEEN @FromDate AND @ToDate\\n\\t\\tAND dt.UserId = @UserOid\\n\\tGROUP BY\\n\\t\\tdt.ClientGroup,\\n\\t\\tdt.Client,\\n\\t\\tdt.[UserId],\\n\\t\\tdt.[User],\\n\\t\\tdt.ProjectClassificationName,\\n\\t\\tdt.ProjectTypeName\\n)\\nSELECT \\n\\tuh.ClientGroup,\\n\\tuh.Client,\\n\\tuh.[User],\\n\\tuh.ProjectClassificationName,\\n\\tuh.ProjectTypeName,\\n\\tuh.[Hours],\\n\\tuh.AdministrativeHours,\\n\\tuh.InternalWorkHours,\\n\\tuh.NewBusinessHours,\\n\\tuh.BillableHours,\\n\\tuh.ClientHours,\\n\\tuh.NonWorkedHours,\\n\\tuc.WorkingHours AS Capacity,\\n\\tuc.Leaves AS Leaves,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[BillableHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationPercentage,\\n\\tIIF(uc.WorkingHours > 0, ISNULL(uh.[NewBusinessHours], 0.0) / uc.WorkingHours, 1.0) as UtilizationNonBillablePercentage\\nFROM \\n\\tUsersHours uh,\\n\\tUsersCapacity uc\\nWHERE\\n\\tuh.UserId = uc.UserId\\n\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"userOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\n  \"headerFilter\": {\n    \"visible\": true\n  },\n  \"columnResizingMode\": \"widget\",\n  \"allowColumnResizing\": true,\n  \"allowFiltering\": true,\n  \"columnAutoWidth\": true,\n  \"grouping\": {\n    \"autoExpandAll\": true\n  },\n  \"searchPanel\": {\n    \"visible\": true\n  },\n  \"height\": \"100%\",\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"selection\": {\n    \"mode\": \"none\"\n  },\n  \"columnMinWidth\": 80,\n  \"columns\": [\n    {\n      \"dataField\": \"Client\",\n      \"caption\": \"Client\",\n      \"width\": 120\n    },\n    {\n      \"dataField\": \"ProjectClassificationName\",\n      \"name\": \"ProjectClassificationName\",\n      \"caption\": \"Classification\",\n      \"width\": 120\n    },\n    {\n      \"dataField\": \"ProjectTypeName\",\n      \"name\": \"ProjectTypeName\",\n      \"caption\": \"Type\",\n      \"width\": 120,\n      \"groupIndex\": 0\n    },\n    {\n      \"dataField\": \"ClientHours\",\n      \"caption\": \"Client \",\n      \"name\": \"ClientHours\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"NewBusinessHours\",\n      \"caption\": \"Non-Billable\",\n      \"name\": \"NonBillable\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"dataField\": \"BillableHours\",\n      \"caption\": \"Billable\",\n      \"alignment\": \"right\",\n      \"format\": \"#,##0\"\n    },\n    {\n      \"caption\": \"Utilization\",\n      \"alignment\": \"center\",\n      \"columns\": [\n        {\n          \"dataField\": \"UtilizationPercentage\",\n          \"caption\": \"Billable %\",\n          \"name\": \"Utilization\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cellTemplate\": \"function(e, i) {\n          SK.setRAG(e, (i.value * 100.0).toFixed(1), i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);\n        }\n      \"\n      },\n      {\n        \"dataField\": \"UtilizationNonBillablePercentage\",\n        \"caption\": \"Non Billable %\",\n        \"name\": \"UtilizationNonBillable\",\n        \"alignment\": \"right\",\n        \"format\": \"#,##0\",\n        \"cellTemplate\": \"function(e, i) {\n          SK.setRAG(e, (i.value * 100.0).toFixed(1), i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true);\n      }\n      \"\n    }\n  ]\n}\n],\n\"sortByGroupSummaryInfo\": [\n{\n  \"summaryItem\": \"count\"\n}\n],\n\"summary\": {\n\"totalItems\": [\n  {\n    \"column\": \"Capacity\",\n    \"summaryType\": \"sum\",\n    \"valueFormat\": \"#,##0\",\n    \"displayFormat\": \"{0}\",\n    \"alignment\": \"right\"\n  },\n  {\n    \"column\": \"Leaves\",\n    \"summaryType\": \"sum\",\n    \"valueFormat\": \"#,##0\",\n    \"displayFormat\": \"{0}\",\n    \"alignment\": \"right\"\n  }\n]\n}\n}",
      "DashboardDefinitionId": "5151f4f6-a6bc-4915-b98d-e85cebea18c8"
    }
  ]
}
