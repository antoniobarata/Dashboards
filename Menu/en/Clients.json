{
    "DashboardDefinitionRoles": [],
    "Id": "32a7de19-0196-4867-8781-1f22d219c967",
    "Name": "Clients Dashboard",
    "Active": true,
    "Location": 0,
    "DocumentId": "0372f8b5-3fea-47ef-803b-d983964c69a8",
    "DocumentName": "Client",
    "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "70e7302c-fff4-4317-9315-3400331101fb",
            "Name": "Filters",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n\"colCount\": 3,\r\n\"items\": [\r\n    {\r\n        \"name\": \"Year\",\r\n        \"dataField\": \"Year\",\r\n        \"editorType\": \"dxNumberBox\",\r\n        \"editorOptions\": {\r\n            \"showSpinButtons\": true,\r\n            \"value\": 2019,\r\n            \"width\": 65,\r\n            \"placeholder\": \"year\",\r\n            \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n            \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n        },\r\n        \"noDataText\": \"Please wait...\"\r\n    },\r\n    {\r\n        \"dataField\": \"CompanyId\",\r\n        \"label\": {\r\n            \"text\": \"Company\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,null,{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027});return res;})\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n                }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n        }\r\n    },\r\n    {\r\n        \"dataField\": \"DivisionId\",\r\n        \"label\": {\r\n            \"text\": \"Division\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take}; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,null,{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027});return res;})\r\n                            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027});return res;})\r\n                            }\r\n                        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n            },\r\n            \"placeholder\": \"All divisions\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n                }\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"disabled\": true\r\n        }\r\n    }]\r\n}\r\n\r\n",
            "DashboardDefinitionId": "32a7de19-0196-4867-8781-1f22d219c967"
        },
        {
            "Id": "6e2c8416-ad87-4aa3-8b5d-696ec7589ea2",
            "Name": "Burn by Business Titles for selected client",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":250,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\" SELECT v.UserTypologyGroupId as TypologyGroupId, v.UserTypologyGroup as TypologyGroup, sum(v.ActualTime) as ActualTime, sum(v.PlannedTime) as PlannedTime, sum(v.ContractedTime) as PlannedTime, sum(sum(v.ActualTime)) over () as ActualTimeGrandTotal, sum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal, sum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal FROM ( SELECT t.UserTypologyGroupId, t.UserTypologyGroup, sum(t.ActualTime) as ActualTime, 0 as PlannedTime, 0 as ContractedTime FROM Analytics.Timesheet(@CurrentUserId) t WHERE 1 = 1 /*[DateFilter]*/ and (DATEFROMPARTS(t.[Year], t.[Month], 1) between @FromDate and @ToDate) /*[/DateFilter]*/ /*[ClientFilter]*/ and t.ClientId = @ClientId /*[/ClientFilter]*/ GROUP BY t.UserTypologyGroupId, t.UserTypologyGroup UNION SELECT pht.UserTypologyGroupId, pht.UserTypologyGroup, 0 as ActualTime, sum(pht.[Hours]) as PlannedTime, sum(pht.ContractedHours) as ContractedTime FROM Analytics.PlannedHoursTotal(@CurrentUserId) pht WHERE 1 = 1 /*[ClientFilter]*/ and pht.ClientId = @ClientId /*[/ClientFilter]*/ GROUP BY pht.UserTypologyGroupId, pht.UserTypologyGroup ) v GROUP BY v.UserTypologyGroupId, v.UserTypologyGroup\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"clientId\",\"startDate\",\"endDate\"],\"Sort\":{\"FieldName\":\"ActualTime\",\"Type\":2}}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_TypologyGroup/execute",
            "Configuration": "{\n\"palette\":\"material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"TypologyGroup\"\n  },\n  \"series\": [\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual Time\"\n    },\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"PlannedTime\",\n      \"name\": \"Planned Time\"\n    },\n    {\n      \"type\": \"scatter\",\n      \"valueField\": \"ContractedTime\",\n      \"name\": \"Contracted Time\",\n      \"point\": {\n   \"symbol\": \"triangleDown\",\n        \"color\":\"#a5bdd7\"\n      }\n    }\n  ],\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"orientation\":\"horizontal\",\n    \"verticalAlignment\":\"bottom\",\n    \"horizontalAlignment\":\"center\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(\u0027 - \u0027)[0].substring(0,10)}\",\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  }\n}",
            "DashboardDefinitionId": "32a7de19-0196-4867-8781-1f22d219c967"
        },
        {
            "Id": "03161e27-4f29-49ea-b392-826bfc749006",
            "Name": "Time by Project for selected client",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 8,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Planned x Actual\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":250,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT v.ProjectId, \\r\\n       v.Project, \\r\\n       Sum(v.actualtime)  AS ActualTime, \\r\\n       Sum(v.plannedtime) AS PlannedTime, \\r\\n       Sum(Sum(v.actualtime)) \\r\\n         OVER ()          AS ActualTimeGrandTotal, \\r\\n       Sum(Sum(v.plannedtime)) \\r\\n         OVER ()          AS PlannedTimeGrandTotal \\r\\nFROM   (SELECT t.projectid, \\r\\n               t.project, \\r\\n               Sum(t.actualtime) AS ActualTime, \\r\\n               0                 AS PlannedTime \\r\\n        FROM   analytics.Timesheet(@CurrentUserId) t \\r\\n        WHERE  1 = 1 \\r\\n        /*[DateFilter]*/ AND ( Datefromparts(t.[year], t.[month], 1) BETWEEN @FromDate AND @ToDate ) /*[/DateFilter]*/ \\r\\n        /*[ClientFilter]*/ AND t.clientid = @ClientId /*[/ClientFilter]*/ \\r\\n        GROUP  BY t.projectid, \\r\\n                  t.project \\r\\n        UNION \\r\\n        SELECT pht.projectid, \\r\\n               pht.project, \\r\\n               0                AS ActualTime, \\r\\n               Sum(pht.[hours]) AS PlannedTime \\r\\n        FROM   analytics.Plannedhourstotal(@CurrentUserId) pht \\r\\n        WHERE  1 = 1 \\r\\n              /*[ClientFilter]*/ AND pht.clientid = @ClientId /*[/ClientFilter]*/ \\r\\n        GROUP  BY pht.projectid, \\r\\n                  pht.project) v \\r\\nGROUP  BY v.projectid, \\r\\n          v.project \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"clientId\",\"startDate\",\"endDate\"],\"Sort\":{\"FieldName\":\"ActualTime\",\"Type\":2}}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_Project/execute",
            "Configuration": "{\n \"size\": {\n    \"height\": 250\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Project\",\n    \"ignoreEmptyPoints\": false\n  },\n  \"series\": [\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"PlannedTime\",\n      \"name\": \"Planned\"\n    },\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual\"\n    }\n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(\u0027 - \u0027)[0].substring(0,10)}\",\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  }\n}",
            "DashboardDefinitionId": "32a7de19-0196-4867-8781-1f22d219c967"
        },
        {
            "Id": "f58f9972-b2ba-415b-a82a-e4f619ff2716",
            "Name": "Period",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Time - Select Months\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":100,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2018-06-01\",\"endDate\":\"2019-12-31\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT Dateadd(dd, -( Datepart(dw, t.[date]) - 2 ), t.[date]) AS WeekStart, \\r\\n       t.[year], \\r\\n       t.[month], \\r\\n       CONVERT(INT, Concat(t.[year], Datepart(wk, t.[date]))) AS YearWeek, \\r\\n       Sum(t.actualtime)                                      AS [Hours] \\r\\nFROM   analytics.Timesheet(@CurrentUserId) t \\r\\nWHERE  [year] = @year\\r\\nGROUP  BY Dateadd(dd, -( Datepart(dw, t.[date]) - 2 ), t.[date]), \\r\\n          t.[year], \\r\\n          t.[month], \\r\\n          CONVERT(INT, Concat(t.[year], Datepart(wk, t.[date]))) \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Hours_Per_YearWeek/execute",
            "Configuration": "{\n \"margin\": {\n    \"top\": 0\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"line\",\n      \"argumentField\": \"WeekStart\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Hours\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"month\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"month\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": [\n  ]\n}",
            "DashboardDefinitionId": "32a7de19-0196-4867-8781-1f22d219c967"
        },
        {
            "Id": "74a58582-a410-4b43-b8e4-f644a0be1a37",
            "Name": "Plan vs. Actual",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"All Clients\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"ClientId\",\"WidgetColor\":\"\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"showPeriodChooser\":false,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Revenue\",\"metricFieldValue\":\"PlannedSellGrandTotal\"},{\"visible\":true,\"metricName\":\"# Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"SELECT v.*, \\n       Iif(( v.plannedsellgrandtotal - v.actualcostgrandtotal ) \u003e 0, ( \\n       ( v.plannedsell - v.actualcost ) / \\n       ( v.plannedsellgrandtotal - v.actualcostgrandtotal ) ), 0) * 100.0 AS \\n       PlannedProfitPercentage \\nFROM   (SELECT v.clientId, \\n               v.client, \\n               Sum(v.actualtime)     AS ActualTime, \\n               Sum(v.plannedtime)    AS PlannedTime, \\n               Sum(v.contractedtime) AS ContractedTime, \\n               Sum(v.actualcost)     AS ActualCost, \\n               Sum(v.plannedsell)    AS PlannedSell, \\n               Max(v.contractedrate) AS ContractedRate, \\n               Sum(Sum(v.actualtime)) \\n                 OVER ()             AS ActualTimeGrandTotal, \\n               Sum(Sum(v.plannedtime)) \\n                 OVER ()             AS PlannedTimeGrandTotal, \\n               Sum(Sum(v.actualcost)) \\n                 OVER ()             AS ActualCostGrandTotal, \\n               Sum(Sum(v.plannedsell)) \\n                 OVER ()             AS PlannedSellGrandTotal \\n        FROM   (SELECT t.clientid, \\n                       cc.[name] AS Client, \\n                       t.actualtime, \\n                       0         AS PlannedTime, \\n                       0         AS ContractedTime, \\n                       t.actualcost, \\n                       0         AS PlannedSell, \\n                       0         AS ContractedRate \\n                FROM   (SELECT t.clientid, \\n                               Sum(t.actualtime) AS ActualTime, \\n                               0                 AS PlannedTime, \\n                               0                 AS ContractedTime, \\n                               Sum(t.hourscost)  AS ActualCost \\n                        FROM   analytics.Timesheet(@CurrentUserId) t \\n                        where  (date between @FromDate and @ToDate)  and (t.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\n                                                                    and (t.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\n                        GROUP  BY t.clientid) t, \\n                       commercialclient cc \\n                WHERE  cc.oid = t.clientid \\n                UNION \\n                SELECT pht.clientid, \\n                       pht.client, \\n                       0                                            AS \\n                       ActualTime, \\n                       Sum(pht.[hours])                             AS \\n                       PlannedTime, \\n                       Sum(Isnull(pht.contractedhours, 0.0))        AS \\n                       ContractedTime, \\n                       0                                            AS \\n                       ActualCost, \\n                       Sum(( pht.[hours] * Isnull(pht.[rate], 0) )) AS \\n                       PlannedSell, \\n                       Max(pht.rate)                                AS \\n                       ContractedRate \\n                FROM   analytics.Plannedhourstotal(@CurrentUserId) pht \\n                WHERE (pht.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\n                      and (pht.[CompanyId] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\n                GROUP  BY pht.clientid, \\n                          pht.client) v \\n        GROUP  BY v.clientid, \\n                  v.client) v \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\"],\"Sort\":{\"Type\":1,\"FieldName\":\"MonthYearNumber\"}}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_Client/execute",
            "Configuration": "{\n\"palette\":\"material\",\n  \"selection\": {\n    \"mode\": \"single\"\n  },\n  \"height\": 250,\n  \"columnsAutoWidth\": true,\n  \"allowColumnResizing\": true,\n  \"columnResizingMode\": \"nextColumn\",\n  \"columnMinWidth\": 50,\n  \"filterPanel\": {\n    \"visible\": false\n  },\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"onRowClick\": \"function(e){ if(e.data.clientId != null) { SkillsWorkflow.setDashboardFilter(\u0027clientId\u0027, e.data.clientId); } }\",\n  \"columns\": [\n    {\n      \"dataField\": \"client\",\n      \"caption\": \"Client\"\n    },\n    {\n      \"dataField\": \"ActualTime\",\n      \"caption\": \"Actual\",\n      \"format\": \"#,##0.00\"\n    },\n    {\n      \"dataField\": \"ActualCost\",\n      \"caption\": \"Cost\",\n      \"format\": {\n        \"type\": \"currency\",\n        \"precision\": 2\n      }\n    },\n    {\n      \"dataField\": \"PlannedTime\",\n      \"caption\": \"Planned\",\n      \"format\": \"#,##0.00\"\n    },\n    {\n      \"dataField\": \"PlannedSell\",\n      \"caption\": \"Planned Revenue\",\n      \"format\": {\n        \"type\": \"currency\",\n        \"precision\": 2\n      }\n    },\n    {\n      \"dataField\": \"PlannedProfitPercentage\",\n      \"caption\": \"Profit %\",\n      \"dataType\":\"number\",\n      \"format\":\"percent\"\n    },\n    {\n      \"dataField\": \"ContractedTime\",\n      \"caption\": \"Contracted\",\n      \"format\": \"#,##0.00\"\n    }\n  ],\n  \"summary\": {\n    \"totalItems\": [\n      {\n        \"column\": \"Project\",\n        \"summaryType\": \"count\"\n      },\n      {\n        \"column\": \"ActualTime\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0.00\",\n        \"displayFormat\": \"{0}\"\n      },\n  \n    {\n        \"column\": \"ActualCost\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": {\n          \"type\": \"currency\",\n          \"precision\": 2\n        },\n        \"displayFormat\": \"{0}\"\n      },\n      {\n        \"column\": \"PlannedTime\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0.00\",\n        \"displayFormat\": \"{0}\"\n      },\n      {\n        \"column\": \"PlannedSell\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": {\n          \"type\": \"currency\",\n          \"precision\": 2\n        },\n        \"displayFormat\": \"{0}\"\n      },\n      {\n        \"column\": \"ContractedTime\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0.00\",\n        \"displayFormat\": \"{0}\"\n      }\n    ]\n  }\n}",
            "DashboardDefinitionId": "32a7de19-0196-4867-8781-1f22d219c967"
        }
    ],
    "Version": 4,
    "Default": true,
    "Dependencies": {
        "DashboardSdk": "1.0.0",
        "Analytics": "1.0.0",
        "SkillsWorkflow": "1.0.0"
    }
}