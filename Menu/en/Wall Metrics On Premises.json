{
  "DashboardDefinitionRoles": [

  ],
  "Id": "ee2b8162-818f-4b58-b622-c9f485885153",
  "Name": "Wall Metrics On Premises",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "282625f7-1c29-486f-9520-0f78fa787ba8",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 8,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as MoreDays2ToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as MoreDays2Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP))\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                var final = SW.setAttribute(element, date, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');                element.append(final);            }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays2ToDo'];                var done = i.data['MoreDays2Done'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "369a4ceb-62c7-4238-a620-219f8222c9d8",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":12,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as TomorrowToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as TomorrowDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP))\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling1\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Tomorrow\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color: rgb(126, 200, 128); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TomorrowToDo'];                var done = i.data['TomorrowDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')    }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "f341e12d-3731-4bb2-ae64-5757c2cfaf77",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":18,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\td.CreatedBy as UserId, \\r\\n\\t\\tu.[Name] as [User], \\r\\n\\t\\tu.[HasImage] as UserHasImage,\\r\\n\\t\\te.Subject as Name,\\r\\n\\t\\tp.[Name] as Project, \\r\\n\\t\\tconvert(Date, d.AgreedDate) as Date,\\r\\n\\t\\tcc.Name as Client,\\r\\n\\t\\tcc.HasImage as ClientHasImage,\\r\\n\\t\\tcc.Oid as ClientId\\r\\nfrom [CommercialClient] cc, CurrentUserPermissions cup, Deliverable d\\r\\nfull join [Event] e\\r\\non d.[Oid] = e.[Oid]\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nfull join Project p\\r\\non p.[Oid] = d.Project\\r\\nleft join [User] u\\r\\non u.[Oid] = d.CreatedBy\\r\\nwhere \\tcc.Oid = d.Client and\\r\\n\\t\\t(wst.[Status] = 4 or wst.[Status] = 5)and\\r\\n\\t\\td.AgreedDate < DATEADD(week, DATEDIFF(day, 0, getdate())/7, 5) and \\r\\n\\t\\td.AgreedDate > DATEADD(week, DATEDIFF(day, 0, getdate())/7, 0) and\\r\\n\\t\\t((u.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000')) and\\r\\n\\t\\t((u.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000')) and\\r\\n\\t\\t((u.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000'))\\r\\n\\t\\tand u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\norder by d.AgreedDate\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"height\":\"485\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":false,\"rowAlternationEnabled\":false,\"showBorders\":false,\"columns\":[{\"dataField\":\"ClientId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, 'client', 'medium',i.data['ClientHasImage'], i.data['Client'], i.data['ClientId']) }\",\"width\":50},{\"dataField\":\"Project\",\"name\":\"Project\",\"caption\":\"Project\",\"width\":150},{\"dataField\":\"UserId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, 'user', 'small',i.data['UserHasImage'], i.data['User'], i.data['UserId']) }\",\"width\":30},{\"dataField\":\"User\",\"name\":\"Name\",\"caption\":\"Executor\",\"width\":150},{\"dataField\":\"Name\",\"name\":\"Name\",\"caption\":\"Job\",\"width\":\"100%\"},{\"dataField\":\"Date\",\"caption\":\"Date\",\"dataType\":\"date\",\"format\":\"d MMM\",\"cellTemplate\":\"function(e, i) {              var month = i.data.Date.substring(5,7);            var day = i.data.Date.substring(8,10);            var date = new Date();            var showDate = i.text;            if (month < date.getMonth() + 1) {                SW.setAttribute(e, showDate, 'style', 'background-color:rgb(247, 65, 45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else if (month > date.getMonth() + 1) {                SW.setAttribute(e, showDate, 'style', 'background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else if (day < date.getDate()) {                SW.setAttribute(e, showDate, 'style', 'background-color:rgb(247,65,45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else if (day == date.getDate()) {                SW.setAttribute(e, showDate, 'style', 'background-color:rgb(255,199,32); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else if (day == date.getDate() + 1) {                SW.setAttribute(e, showDate, 'style', 'background-color:rgb(126,200,128); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else if (day > date.getDate() + 1) {                SW.setAttribute(e, showDate, 'style', 'background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            }        }\",\"alignment\":\"center\",\"width\":70}],\"onToolbarPreparing\":\"null\"}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "d9efc333-db95-40e8-908f-59ded28ea306",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":6,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as TodayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as TodayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 0, CURRENT_TIMESTAMP))\\r\\n        and (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Today\",\r\n            \"caption\": \"Today\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color: rgb(255, 199, 32); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TodayToDo'];                var done = i.data['TodayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "f019cd50-fdc4-4d19-b563-7ab6b16c9149",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":11,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect v.[Name] as UserName, v.CreatedBy as UserId, v.Day, v.[HasImage], sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect d.CreatedBy, u.[Name], u.[HasImage],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate ) < Convert(Date, CURRENT_TIMESTAMP) then 0\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, CURRENT_TIMESTAMP) then 1\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP)) then 2\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP)) then 3\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP)) then 4\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP)) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(wst.[Status] > 5, 1, 0)) as Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [Event] e\\r\\non d.[Oid] = e.[Oid]\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nfull join [User] u\\r\\non u.[Oid] = d.[CreatedBy]\\r\\nwhere e.[GCRecord] is null and d.CreatedBy is not null and \\r\\n\\t\\t(u.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(u.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(u.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\ngroup by d.CreatedBy, d.AgreedDate, u.[Name], u.[HasImage]\\r\\n) as v\\r\\ngroup by v.CreatedBy, v.Day, v.[Name], v.[HasImage]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"onContentReady\": \"function(e) {                        var dataSource = e.component.getDataSource();                        if (typeof dataSource === 'undefined') return;                        if (this.r) return;                        var q = dataSource.store().createQuery();                        dataSource._items.forEach((e) => { e.Delayed = 0;                                                            e.TodayDone = 0;                                                             e.TodayToDo = 0;                                                            e.TomorrowDone = 0;                                                             e.TomorrowToDo = 0;                                                             e.MoreDays1Done = 0;                                                             e.MoreDays1ToDo = 0;                                                             e.MoreDays2Done = 0;                                                             e.MoreDays2ToDo = 0;                                                             e.MoreDays3Done = 0;                                                            e.MoreDays3ToDo = 0;                                                             if (e.Day === 0) {                                                                e.Delayed = e.ToDo;                                                            } else if (e.Day === 1) {                                                                e.TodayDone = e.Done;                                                                e.TodayToDo = e.ToDo;                                                            } else if (e.Day === 2) {                                                                e.TomorrowDone = e.Done;                                                                e.TomorrowToDo = e.ToDo;                                                            } else if (e.Day === 3) {                                                                e.MoreDays1Done = e.Done;                                                                e.MoreDays1ToDo = e.ToDo;                                                            } else if (e.Day === 4) {                                                                e.MoreDays2Done = e.Done;                                                                e.MoreDays2ToDo = e.ToDo;                                                            } else if (e.Day === 5) {                                                                e.MoreDays3Done = e.Done;                                                                e.MoreDays3ToDo = e.ToDo;                                                            }                                                    });                        var data = dataSource._items;                        e.component.option('dataSource', data);                        this.r = true;    }\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": \"213\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) {SK.showImage(e, 'user', 'small', i.data['HasImage'], i.data['UserName'], i.data['UserId'])}\",\r\n            \"width\": 30\r\n        },\r\n        {\r\n            \"dataField\": \"UserName\",\r\n            \"name\": \"User\",\r\n            \"caption\": \"User\",\r\n            \"width\": \"100%\"\r\n        },\r\n        {\r\n            \"dataField\": \"Delayed\",\r\n            \"name\": \"Delayed\",\r\n            \"caption\": \"Delayed\",\r\n            \"alignment\": \"center\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"width\": 80\r\n        },\r\n        {\r\n            \"dataField\": \"Today\",\r\n            \"name\": \"Today\",\r\n            \"caption\": \"Today\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(255, 199, 32); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TodayToDo'];                var done = i.data['TodayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Tomorrow\",\r\n            \"name\": \"Tomorrow\",\r\n            \"caption\": \"Tomorrow\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(126, 200, 128); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TomorrowToDo'];                var done = i.data['TomorrowDone'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays1\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays1ToDo'];                var done = i.data['MoreDays1Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays2\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays2ToDo'];                var done = i.data['MoreDays2Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays3\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays3ToDo'];                var done = i.data['MoreDays3Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"userName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Projects\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Jobs\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Comments\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Assignments\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            }\r\n        ]\r\n    },\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "d97a5510-5885-49ff-943b-83be883c295a",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":2,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect v.[Name] as Client, v.Client as ClientId, v.Day, v.[HasImage], sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect d.Client, cc.[Name], cc.[HasImage],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate ) < Convert(Date, CURRENT_TIMESTAMP) then 0\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, CURRENT_TIMESTAMP) then 1\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 1, CURRENT_TIMESTAMP)) then 2\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP)) then 3\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 3, CURRENT_TIMESTAMP)) then 4\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP)) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(wst.[Status] > 5, 1, 0)) as Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [Event] e\\r\\non d.[Oid] = e.[Oid]\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nfull join [CommercialClient] cc\\r\\non cc.[Oid] = d.[Client]\\r\\nwhere e.[GCRecord] is null and d.Client is not null and \\r\\n\\t\\t(d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\\r\\ngroup by d.Client, d.AgreedDate, cc.[Name], cc.[HasImage]\\r\\n) as v\\r\\ngroup by v.Client, v.Day, v.[Name], v.[HasImage]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"onContentReady\": \"function(e) {                        var dataSource = e.component.getDataSource();                        if (typeof dataSource === 'undefined') return;                        if (this.r) return;                        var q = dataSource.store().createQuery();                        dataSource._items.forEach((e) => { e.Delayed = 0;                                                            e.TodayDone = 0;                                                             e.TodayToDo = 0;                                                            e.TomorrowDone = 0;                                                             e.TomorrowToDo = 0;                                                             e.MoreDays1Done = 0;                                                             e.MoreDays1ToDo = 0;                                                             e.MoreDays2Done = 0;                                                             e.MoreDays2ToDo = 0;                                                             e.MoreDays3Done = 0;                                                            e.MoreDays3ToDo = 0;                                                             if (e.Day === 0) {                                                                e.Delayed = e.ToDo;                                                            } else if (e.Day === 1) {                                                                e.TodayDone = e.Done;                                                                e.TodayToDo = e.ToDo;                                                            } else if (e.Day === 2) {                                                                e.TomorrowDone = e.Done;                                                                e.TomorrowToDo = e.ToDo;                                                            } else if (e.Day === 3) {                                                                e.MoreDays1Done = e.Done;                                                                e.MoreDays1ToDo = e.ToDo;                                                            } else if (e.Day === 4) {                                                                e.MoreDays2Done = e.Done;                                                                e.MoreDays2ToDo = e.ToDo;                                                            } else if (e.Day === 5) {                                                                e.MoreDays3Done = e.Done;                                                                e.MoreDays3ToDo = e.ToDo;                                                            }                                                    });                        var data = dataSource._items;                        e.component.option('dataSource', data);                        this.r = true;    }\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": \"213\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) {SK.showImage(e, 'client', 'medium', i.data['HasImage'], i.data['Client'], i.data['ClientId'])}\",\r\n            \"width\": 40\r\n        },\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"name\": \"Client\",\r\n            \"caption\": \"Client\",\r\n            \"width\": \"100%\"\r\n        },\r\n        {\r\n            \"dataField\": \"Delayed\",\r\n            \"caption\": \"Delayed\",\r\n            \"alignment\": \"center\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"width\": 80\r\n        },\r\n        {\r\n            \"dataField\": \"Today\",\r\n            \"caption\": \"Today\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(255, 199, 32); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TodayToDo'];                var done = i.data['TodayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Tomorrow\",\r\n            \"name\": \"Tomorrow\",\r\n            \"caption\": \"Tomorrow\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(126, 200, 128); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TomorrowToDo'];                var done = i.data['TomorrowDone'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays1\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+2);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays1ToDo'];                var done = i.data['MoreDays1Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays2\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+3);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays2ToDo'];                var done = i.data['MoreDays2Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        },\r\n        {\r\n            \"dataField\": \"MoreDays3\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+4);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, date, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');        }\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays3ToDo'];                var done = i.data['MoreDays3Done'];                var aux = done + ' / ' + toDo;                e.append(aux);        }\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"userName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Projects\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Jobs\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Comments\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Assignments\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            }\r\n        ]\r\n    },\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "2c1ff9c5-cc92-4169-9a6d-b7f316a1c5f7",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 2,
      "Order": 11,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":39,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":7,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 1 \\r\\n    CURRENT_TIMESTAMP as [Date]\\r\\nfrom [User]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"100%\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"onContentReady1\": \"function (e) {         if(window.refreshTimeout) clearTimeout(window.refreshTimeout);        window.refreshTimeout = setTimeout( function() { SW.refreshDashboard();    },    60000)}\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Last Refresh\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM H:mm\",\r\n            \"headerCellTemplate\": \"function (e, i) {            var final = SW.setAttribute(e, i.column.caption, 'style', 'font-size: 15px; font-weight: 700');            e.append(final);    }\",\r\n            \"cellTemplate\": \"function(e, i) {             SW.setAttribute(e, i.text, 'style', 'font-size: 18px; font-weight: 700');}\",\r\n            \"alignment\": \"center\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "89511c23-87ad-4274-9500-cf17a80ad52d",
      "Name": "Filters",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"colCount\":\"3\",\"onContentReady\":\"function setFilters(e) {\\r\\n    setTimeout(function () {\\r\\n        SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');\\r\\n        SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');\\r\\n        SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');\\r\\n    },\\r\\n        800)\\r\\n}\",\"items\":[{\"dataField\":\"CompanyId\",\"label\":{\"text\":\"Company\"},\"editorType\":\"dxSelectBox\",\"editorOptions\":{\"width\":250,\"searchEnabled\":true,\"dataSource\":{\"load\":\"function(loadOptions){                             var searchValue = (                            loadOptions.searchValue != null ? loadOptions.searchValue : '');                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                             return SkillsWorkflow.getMyCompanies('',                            0,                            0).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'                                });return res;                            });                }\",\"byKey\":\"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"},\"placeholder\":\"All companies\",\"displayExpr\":\"Name\",\"valueExpr\":\"Id\",\"onValueChanged\":\"function(e){                 if( e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('Company', e.value);            } else {                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');            }                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');        }\",\"onInitialized\":\"function(e){ SW.saveComponent(e.component,'CompanyId');}\"}},{\"dataField\":\"DivisionId\",\"label\":{\"text\":\"Division\"},\"editorType\":\"dxSelectBox\",\"editorOptions\":{\"width\":250,\"searchEnabled\":true,\"dataSource\":{\"load\":\"function(loadOptions){                             let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                             let skip = loadOptions.skip || 0;                             let take = loadOptions.take || 20;                             var param = { name:searchValue, skip: skip, take: take            };                             var companyId = SW.getValueFromComponent('CompanyId');                             if (companyId == '00000000-0000-0000-0000-000000000000') {                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',                null,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            } else if (companyId != null) {                                 param['companyId'                ] = companyId;                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            }        }\",\"byKey\":\"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"},\"placeholder\":\"All divisions\",\"onValueChanged\":\"function(e){                 if (e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('Division', e.value);    } else {                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');    }                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');}\",\"onInitialized\":\"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\"displayExpr\":\"Name\",\"valueExpr\":\"Id\",\"disabled\":true}},{\"dataField\":\"DepartmentId\",\"label\":{\"text\":\"Department\"},\"editorType\":\"dxSelectBox\",\"editorOptions\":{\"width\":250,\"searchEnabled\":true,\"dataSource\":{\"load\":\"function(loadOptions){                     let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                     let skip = loadOptions.skip || 0;                     let take = loadOptions.take || 20;                    var param = { name: searchValue, skip: skip, take: take    };                     var divisionId = SW.getValueFromComponent('DivisionId');                     var companyId = SW.getValueFromComponent('CompanyId');                     if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') {                         param['divisionId'        ] = divisionId;                        param['companyId'        ] = companyId;    } else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {                        param['divisionId'        ] = divisionId;    }                    return SkillsWorkflow.executeAPI('GET', 'departments',param,    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'        });return res;    });}\",\"byKey\":\"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"},\"placeholder\":\"All departments\",\"onValueChanged\":\"function(e){         if(e.value != null && e.value != '') {            SkillsWorkflow.setDashboardFilter('Department', e.value);} else {            SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}}\",\"onInitialized\":\"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\"displayExpr\":\"Name\",\"valueExpr\":\"Id\",\"disabled\":true}}]}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "78dd7199-2f01-4cee-8c9a-e5b420a0b3c0",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 9,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":30,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as MoreDays3ToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as MoreDays3Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 4, CURRENT_TIMESTAMP))\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"countMoreDays3ToDo\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                var final = SW.setAttribute(element, date, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');                element.append(final);            }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays3ToDo'];                var done = i.data['MoreDays3Done'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700');            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "9674d571-7617-462e-a60c-e71b967b3b7a",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\t\\r\\n\\t\\tucdd.Company as Companies,\\r\\n\\t\\tucdd.Division as Divisions,\\r\\n\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\t\\r\\n\\t\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\t\\r\\n\\t\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\r\\n\\tIsNull(count(d.Client), 0) as countLate\\r\\nfrom \\r\\n\\tCurrentUserPermissions cup, \\r\\n\\tDeliverable d\\r\\n\\t\\tleft outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere \\r\\n\\tConvert(Date, d.AgreedDate) < Convert(Date, CURRENT_TIMESTAMP) \\r\\n    and (wst.[Status] = 4 or wst.[Status] = 5)\\r\\n\\tand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\tand d.Company = cup.Companies\\r\\n\\tand d.Division = cup.Divisions\\r\\n\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": false,\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Delayed\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color: rgb(247, 65, 45); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"dataField\": \"countLate\",\r\n            \"cellTemplate\": \"function(e, i) {                if(i.data.countLate != 0) {                    SW.setAttribute(e, i.data.countLate, 'style', 'font-size: 15px; font-weight: 700');                } else {                    SW.setAttribute(e, '0', 'style', 'font-size: 15px; font-weight: 700');                }            }\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    },
    {
      "Id": "8f7c4087-e837-470b-846a-ea60d550fe43",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":18,\"WidgetYPosition\":20,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as MoreDays1ToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as MoreDays1Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\nfull join [WorkflowState] ws\\r\\non ws.[Oid] = d.[WorkflowState]\\r\\nfull join [WorkflowStateType] wst\\r\\non wst.[Oid] = ws.[WorkflowStateType]\\r\\nwhere Convert(Date, d.AgreedDate) = Convert(Date, DATEADD(day, 2, CURRENT_TIMESTAMP))\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and d.Company = cup.Companies\\r\\n\\t\\tand d.Division = cup.Divisions\\r\\n\\t\\tand d.Department = cup.Departments\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                var final = SW.setAttribute(element, date, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');                element.append(final);            }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['MoreDays1ToDo'];                var done = i.data['MoreDays1Done'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "ee2b8162-818f-4b58-b622-c9f485885153"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 7,
  "Default": true
}
