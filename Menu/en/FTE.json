{
  "DashboardDefinitionRoles": [],
  "Id": "9409d82b-5ab5-4654-9413-33ea31f3f87e",
  "Name": "FTE",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"remove\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemNames\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "ea548d6e-14b0-466d-ad23-0c2dead31a3c",
      "Name": "Overtime View",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Capacity, Contracted Time & Weeks with not Enough Capacity\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2018/06/1\",\"endDate\":\"2019/06/30\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  [Date] - datepart(dw, [Date]) + 1 as Week,\\n        sum(WorkingTime - Holidays - Leaves) as Capacity,\\n        sum(ContractedTime) as ContractedTime,\\n        iif(sum(WorkingTime - Holidays - Leaves - ContractedTime) < 0, sum(WorkingTime - Holidays - Leaves), null) as NotEnoughCapacity\\nfrom    (\\n                select  typ.UserTypologyGroup as TypologyGroupOid,\\n                        ssu.Oid as UserOid,\\n                        yrd.Day as [Date],\\n                        sum(RequiredHours) as WorkingTime,\\n                        0 as Holidays,\\n                        0 as Leaves,\\n                        0 as ContractedTime,\\n                        0 as ActualTime,\\n                        0 as BillableTime,\\n                        0 as NewBusinessTime,\\n                        0 as AdministrativeTime\\n                from    [User] ssu, Yearday yrd, UserTypology typ\\n                where   datepart(dw, yrd.day) not in (1, 7) and\\n                        typ.oid = ssu.Typology\\n                        and yrd.day >= @FromDate and yrd.day <= @ToDate\\n                group by typ.UserTypologyGroup, ssu.Oid, yrd.Day\\n                union all\\n                select  typ.UserTypologyGroup as TypologyGroupOid,\\n                        ssu.Oid as UserOid,\\n                        hld.Date as [Date],\\n                        0 as WorkingTime,\\n                        sum(RequiredHours) as Holidays,\\n                        0 as Leaves,\\n                        0 as ContractedTime,\\n                        0 as ActualTime,\\n                        0 as BillableTime,\\n                        0 as NewBusinessTime,\\n                        0 as AdministrativeTime\\n                from    [User] ssu, UserTypology typ, Holiday hld\\n                where   datepart(dw, hld.Date) not in (1, 7) and\\n                        typ.oid = ssu.Typology and\\n                        ssu.Company = hld.Company \\n                        and hld.Date >= @FromDate and hld.Date <= @ToDate\\n                group by typ.UserTypologyGroup, ssu.Oid, hld.Date\\n                union all\\n                select  typ.UserTypologyGroup as TypologyGroupOid,\\n                        ssu.Oid as UserOid,\\n                        uv.Day as [Date],\\n                        0 as WorkingTime,\\n                        0 as Holidays,\\n                        sum(RequiredHours) as Leaves,\\n                        0 as ContractedTime,\\n                        0 as ActualTime,\\n                        0 as BillableTime,\\n                        0 as NewBusinessTime,\\n                        0 as AdministrativeTime\\n                from    [User] ssu, UserVacation uv, UserTypology typ\\n                where   datepart(dw, uv.Day) not in (1, 7) and\\n                        uv.[User] = ssu.Oid and\\n                        typ.oid = ssu.Typology\\n                        and uv.Day >= @FromDate and uv.Day <= @ToDate\\n                group by typ.UserTypologyGroup, ssu.Oid, uv.Day\\n                union all\\n                select  TypologyGroupOid,\\n                        UserOid,\\n                        [Date],\\n                        0 as WorkingTime,\\n                        0 as Holidays,\\n                        0 as Leaves,\\n                        sum(ContractedTime) as ContractedTime,\\n                        0 as ActualTime,\\n                        0 as BillableTime,\\n                        0 as NewBusinessTime,\\n                        0 as AdministrativeTime\\n                from    (\\n                            select  edt.UserTypologyGroup as TypologyGroupOid,\\n                                    edt.[User] as UserOid,\\n                                    yrd.Day as [Date],\\n                                    sum(edt.Hours / (datediff(dd, est.[Date], est.Expiration) + 1)) as ContractedTime\\n                            from    Estimate est, EstimateItem eit, EstimateItemDetail edt, YearDay yrd\\n                            where   eit.Estimate = est.Oid and\\n                                    edt.EstimateItem = eit.Oid and\\n                                    yrd.Day between cast(est.[Date] as date) and cast(est.Expiration as date) and\\n                                    edt.Type = 2\\n                                    and [Date] >= @FromDate and [Date] <= @ToDate\\n                            group by  est.Oid, edt.UserTypologyGroup, edt.[User], yrd.Day\\n                        ) t\\n                group by TypologyGroupOid, UserOid, [Date]\\n        ) t\\nwhere   [Date] >= @FromDate and [Date] <= @ToDate\\ngroup by [Date] - datepart(dw, [Date]) + 1\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":null}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/FTE - Overtime View/execute",
      "Configuration": "{\n    \"height\": 200,\n    \"size\": {\n      \"height\": 200\n    },\n    \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"Week\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Capacity\"\n},\n        {\n         \"valueField\": \"ContractedTime\"\n      },\n      {\n         \"valueField\": \"NotEnoughCapacity\",\n         \"type\":\"scatter\",\n         \"ignoreEmptyPoints\":true,\n        \"color\": \"#da5859\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"week\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  },\n\"value\": [\n    \"2018/11/01\",\n    \"2018/11/30\"\n  ]\n}",
      "DashboardDefinitionId": "9409d82b-5ab5-4654-9413-33ea31f3f87e"
    },
    {
      "Id": "5cee095d-e022-4c90-b022-1d2f8501bb44",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 4,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Choose a Company\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":0,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT 1;\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"height\": 288,\r\n    \"size\": {\r\n        \"height\": 288\r\n    },\r\n    \"colCount\": 1,\r\n    \"formData\": {\r\n        \"company\": \"Company\",\r\n        \"clientGroup\": \"Client Group\"\r\n    },\r\n    \"dataSource\": {\r\n        \"company\": \"Company\",\r\n        \"clientGroup\": \"Client Group\"\r\n    },\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Company\",\r\n            \"dataField\": \"company\",\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var query = 'SELECT DISTINCT c.Oid as Id, c.[Name] FROM Company c, SkillUsersCompanies suc where suc.Company = c.Oid and suc.[User] = @CurrentUserId ORDER BY c.[Name]'; return SW.executeAPI('POST', 'analytics/query/execute', null, {'query': query, 'parameters': {}}).then(function(res){ return res.Data; }); }\",\r\n                    \"byKey\": \"function(key) { console.log('byKey'); }\"\r\n                },\r\n                \"value\": \"\",\r\n                \"onValueChanged\": \"function(e){ console.log('Value:' + e.value); if(e.value != null) { SW.setDashboardFilter('divisionOid', '00000000-0000-0000-0000-000000000000'); SW.setDashboardFilter('departmentOid', '00000000-0000-0000-0000-000000000000'); SW.setDashboardFilter('companyOid', e.value);} }\",\r\n                \"valueExpr\": \"Id\",\r\n                \"displayExpr\": \"Name\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"name\": \"Division\",\r\n            \"dataField\": \"division\",\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var query = 'SELECT Id, [Name] FROM (SELECT \\\\'00000000-0000-0000-0000-000000000000\\\\' as Id, \\\\'\\\\' as [Name] UNION ALL SELECT DISTINCT dv.Oid as Id, dv.[Name] FROM Division dv, SkillUsersCompaniesDivisions sudv where sudv.Division = dv.Oid and sudv.[User] = @CurrentUserId) v ORDER BY v.[Name]'; return SW.executeAPI('POST', 'analytics/query/execute', null, {'query': query, 'parameters': {}}).then(function(res){ return res.Data; }); }\",\r\n                    \"byKey\": \"function(key) { console.log('byKey'); }\"\r\n                },\r\n                \"value\": \"\",\r\n                \"onValueChanged\": \"function(e){ console.log('Value:' + e.value); if(e.value != null) { SW.setDashboardFilter('departmentOid', '00000000-0000-0000-0000-000000000000'); SW.setDashboardFilter('divisionOid', e.value); } }\",\r\n                \"valueExpr\": \"Id\",\r\n                \"displayExpr\": \"Name\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"name\": \"Department\",\r\n            \"dataField\": \"department\",\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var query = 'SELECT Id, [Name] FROM (SELECT \\\\'00000000-0000-0000-0000-000000000000\\\\' as Id, \\\\'\\\\' as [Name] UNION ALL SELECT DISTINCT dp.Oid as Id, dp.[Name] FROM Department dp, SkillUsersCompaniesDivisionsDepartments sudp where sudp.Department = dp.Oid and sudp.[User] = @CurrentUserId) v ORDER BY v.[Name]'; return SW.executeAPI('POST', 'analytics/query/execute', null, {'query': query, 'parameters': {}}).then(function(res){ return res.Data; }); }\",\r\n                    \"byKey\": \"function(key) { console.log('byKey'); }\"\r\n                },\r\n                \"value\": \"\",\r\n                \"onValueChanged\": \"function(e){ console.log('Value:' + e.value); if(e.value != null) { SW.setDashboardFilter('departmentOid', e.value); } }\",\r\n                \"valueExpr\": \"Id\",\r\n                \"displayExpr\": \"Name\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "9409d82b-5ab5-4654-9413-33ea31f3f87e"
    },
    {
      "Id": "55144b15-0b57-4fd2-be71-dc4124d06cd8",
      "Name": "Typology Groups",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 2,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Staff, Proposals & Timesheet\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"? Delayed To Do\",\r\n                        \"metricFieldValue\": \"DelayedToDoJobsGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"?  Delayed Work in Progress\",\r\n                        \"metricFieldValue\": \"DelayedWorkInProgressJobsGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"                        SELECT\\n                            utg.Name AS TypologyGroup,\\n                            MAX(UserCount) AS UserCount,\\n                            SUM(WorkingTime - Holidays - Leaves) AS Capacity,\\n                            SUM(Holidays) AS Holidays,\\n                            SUM(Leaves) AS Leaves,\\n                            SUM(ContractedTime) AS ContractedTime,\\n                            SUM(PlannedTime) AS PlannedTime,\\n                            SUM(ActualTime) AS ActualTime,\\n                            SUM(BillableTime) AS BillableTime,\\n                            SUM(NewBusinessTime) AS NewBusinessTime,\\n                            SUM(AdministrativeTime) AS AdministrativeTime,\\n                            SUM(BillableTime + NewBusinessTime) AS ClientTime,\\n                            SUM(WorkingTime - Holidays - Leaves - BillableTime - NewBusinessTime) AS CapacityClientTimeVariation,\\n                            SUM(WorkingTime - Holidays - Leaves - ContractedTime) AS CapacityContractedTimeVariation\\n                        FROM UserTypologyGroup utg,\\n                             (SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 COUNT(*) AS UserCount\\n                             FROM [User] ssu,\\n                                  UserTypology typ\\n                             WHERE typ.oid = ssu.Typology\\n                             GROUP BY typ.UserTypologyGroup) tuc,\\n                             (SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 yrd.Day AS [Date],\\n                                 SUM(RequiredHours) AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM [User] ssu,\\n                                  Yearday yrd,\\n                                  UserTypology typ\\n                             WHERE DATEPART(dw, yrd.day) NOT IN (1, 7)\\n                             AND typ.oid = ssu.Typology\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      yrd.Day\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 hld.Date AS [Date],\\n                                 0 AS WorkingTime,\\n                                 SUM(RequiredHours) AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM [User] ssu,\\n                                  UserTypology typ,\\n                                  Holiday hld\\n                             WHERE DATEPART(dw, hld.Date) NOT IN (1, 7)\\n                             AND typ.oid = ssu.Typology\\n                             AND ssu.Company = hld.Company\\n                             AND (1 != 1 /*[DateFilter]*/ OR hld.Date >= @FromDate AND hld.Date <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      hld.Date\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 uv.Day AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 SUM(RequiredHours) AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM [User] ssu,\\n                                  UserVacation uv,\\n                                  UserTypology typ\\n                             WHERE DATEPART(dw, uv.Day) NOT IN (1, 7)\\n                             AND uv.[User] = ssu.Oid\\n                             AND typ.oid = ssu.Typology\\n                             AND (1 != 1 /*[DateFilter]*/ OR uv.Day >= @FromDate AND uv.Day <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      uv.Day\\n                             UNION ALL\\n                             SELECT\\n                                 TypologyGroupOid,\\n                                 UserOid,\\n                                 [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 SUM(ContractedTime) AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM (SELECT\\n                                 edt.UserTypologyGroup AS TypologyGroupOid,\\n                                 edt.[User] AS UserOid,\\n                                 yrd.Day AS [Date],\\n                                 SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime\\n                             FROM Estimate est,\\n                                  EstimateItem eit,\\n                                  EstimateItemDetail edt,\\n\\t\\t\\t\\t\\t\\t\\t\\t  [User] ssu,\\n                                  YearDay yrd\\n                             WHERE eit.Estimate = est.Oid\\n                             AND edt.EstimateItem = eit.Oid\\n\\t\\t\\t\\t\\t\\t\\t AND edt.[User] = ssu.Oid\\n                             AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date)\\n                             AND edt.Type = 2\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY est.Oid,\\n                                      edt.UserTypologyGroup,\\n                                      edt.[User],\\n                                      yrd.Day) t\\n                             GROUP BY TypologyGroupOid,\\n                                      UserOid,\\n                                      [Date]\\n                             UNION ALL\\n                             SELECT\\n                                 pht.UserTypologyGroup AS TypologyGroupOid,\\n                                 pht.[User] AS UserOid,\\n                                 yrd.Day AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 SUM((pht.PlannedMinutes / 60) / (DATEDIFF(dd, prj.BeginDate, prj.EndDate + 1))) AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM PlannedHoursTotal pht,\\n                                  Project prj,\\n\\t\\t\\t\\t\\t\\t\\t\\t  [User] ssu,\\n                                  YearDay yrd\\n                             WHERE prj.Oid = pht.Project\\n\\t\\t\\t\\t\\t\\t\\t AND ssu.Oid = pht.[User]\\n                             AND yrd.Day BETWEEN CAST(prj.BeginDate AS date) AND CAST(prj.EndDate AS date)\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY pht.UserTypologyGroup,\\n                                      pht.[User],\\n                                      yrd.Day\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 SUM(DurationHours + DurationMinutes / 60) AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM Timesheet tim,\\n                                  [User] ssu,\\n                                  UserTypology typ\\n                             WHERE typ.Oid = ssu.Typology\\n                             AND tim.CreatedBy = ssu.Oid\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      CAST(tim.CreatedOn AS date)\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 SUM(DurationHours + DurationMinutes / 60) AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM Timesheet tim,\\n                                  [User] ssu,\\n                                  UserTypology typ\\n                             WHERE typ.Oid = ssu.Typology\\n                             AND tim.CreatedBy = ssu.Oid\\n                             AND tim.Client IS NOT NULL\\n                             AND (tim.Billable = 1\\n                             OR tim.Billable IS NULL)\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      CAST(tim.CreatedOn AS date)\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime,\\n                                 0 AS AdministrativeTime\\n                             FROM Timesheet tim,\\n                                  [User] ssu,\\n                                  UserTypology typ\\n                             WHERE typ.Oid = ssu.Typology\\n                             AND tim.CreatedBy = ssu.Oid\\n                             AND tim.Client IS NOT NULL\\n                             AND NOT (tim.Billable = 1\\n                             OR tim.Billable IS NULL)\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      CAST(tim.CreatedOn AS date)\\n                             UNION ALL\\n                             SELECT\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\n                                 ssu.Oid AS UserOid,\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\n                                 0 AS WorkingTime,\\n                                 0 AS Holidays,\\n                                 0 AS Leaves,\\n                                 0 AS ContractedTime,\\n                                 0 AS PlannedTime,\\n                                 0 AS ActualTime,\\n                                 0 AS BillableTime,\\n                                 0 AS NewBusinessTime,\\n                                 SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime\\n                             FROM Timesheet tim,\\n                                  [User] ssu,\\n                                  UserTypology typ\\n                             WHERE typ.Oid = ssu.Typology\\n                             AND tim.CreatedBy = ssu.Oid\\n                             AND tim.Client IS NULL\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\n\\t\\t\\t\\t\\t\\t\\t\\tAND ssu.Company = @CompanyOid\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DivisionOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department IN (SELECT Oid FROM Department WHERE Division = @DivisionOid))\\n\\t\\t\\t\\t\\t\\t\\t\\tAND (@DepartmentOid = '00000000-0000-0000-0000-000000000000' OR ssu.Department = @DepartmentOid)\\n                             GROUP BY typ.UserTypologyGroup,\\n                                      ssu.Oid,\\n                                      CAST(tim.CreatedOn AS date)) t\\n                        WHERE utg.Oid = t.TypologyGroupOid\\n                        AND tuc.TypologyGroupOid = utg.Oid\\n                        GROUP BY utg.Name\\n\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"companyOid\",\r\n                \"divisionOid\",\r\n                \"departmentOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/FTE - Typology Groups/execute",
      "Configuration": "{\n  \"headerFilter\":{\n  \"visible\":true\n},\n\"columnResizingMode\":\"widget\",\n\"allowColumnResizing\":true,\n\"allowFiltering\":true,\n\"columnAutoWidth\":true,\n  \"searchPanel\": {\n            \"visible\": true\n  },\n  \"height\": 370,\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"columnMinWidth\": 80,\n  \"columns\": [\n    {\n      \"dataField\": \"TypologyGroup\",\n      \"name\": \"Typology Group\",\n      \"caption\": \"Typology\",\n      \"width\": 300\n    },\n    {\n      \"caption\":\"Staff\",\n      \"columns\":[\n        {\n          \"dataField\": \"UserCount\",\n          \"caption\": \"# Heads\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cssClass\":\"dataCell actualHours\"\n        },\n        {\n          \"dataField\": \"Capacity\",\n          \"caption\": \"Capacity\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Proposals & Projects\",\n      \"columns\":[\n        {\n          \"dataField\": \"CapacityContractedTimeVariation\",\n          \"caption\": \"Variation\",\n          \"name\": \"Variation\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cellTemplate\": \"function(e, i) {\n\n             var h = document.createElement('DIV'); \n                    e.appendChild(h);\n                    h.innerHTML = i.text; \n              if(i.value < 0) { h.style['background-color'] = '#f5564a';  h.style['color'] = '#ffffff';}      \n           \n          }\"\n        },\n        {\n          \"dataField\": \"ContractedTime\",\n          \"caption\": \"Contracted\",\n          \"name\": \"Contracted\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"PlannedTime\",\n          \"caption\": \"Planned\",\n          \"name\": \"Planned\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Timesheet\",\n      \"columns\":[\n        {\n          \"dataField\": \"ActualTime\",\n          \"caption\": \"Actual\",\n          \"name\": \"Actual\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"BillableTime\",\n          \"caption\": \"Billable\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"NewBusinessTime\",\n          \"caption\": \"New Business\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"AdministrativeTime\",\n          \"caption\": \"Administrative\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    }\n],\n  \"sortByGroupSummaryInfo\": [\n    {\n      \"summaryItem\": \"count\"\n    }\n  ],\n  \"summary\": {\n    \"totalItems\": [\n      {\n        \"column\": \"Typology Group\",\n        \"summaryType\": \"count\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"Total: {0}\",\n        \"alignment\": \"left\"\n      },\n      {\n        \"column\": \"Capacity\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"{0}\",\n        \"alignment\": \"right\"\n      }\n    ]\n  }\n}",
      "DashboardDefinitionId": "9409d82b-5ab5-4654-9413-33ea31f3f87e"
    }
  ]
}
