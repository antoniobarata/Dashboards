{
    "DashboardDefinitionRoles": [],
    "Id": "9e8c27c3-9a83-4fbd-bd4e-f9f856d32178",
    "Name": "FTE Dashboard",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentsConfiguration": null,
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "d5bf026a-184c-4ebf-8681-c40ced842456",
            "Name": "Overview",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Timesheet & Capacity\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"Total\",\"metricFieldValue\":\"PendingGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\r\\n                SELECT TOP 20\\r\\n                    utg.Name AS TypologyGroup,\\r\\n                    MAX(UserCount) AS UserCount,\\r\\n                    SUM(WorkingTime - Holidays - Leaves) AS Capacity,\\r\\n                    SUM(Holidays) AS Holidays,\\r\\n                    SUM(Leaves) AS Leaves,\\r\\n                    SUM(ContractedTime) AS ContractedTime,\\r\\n                    SUM(ActualTime) AS ActualTime,\\r\\n                    SUM(BillableTime) AS BillableTime,\\r\\n                    SUM(NewBusinessTime) AS NewBusinessTime,\\r\\n                    SUM(AdministrativeTime) AS AdministrativeTime,\\r\\n                    SUM(BillableTime + NewBusinessTime) AS ClientTime,\\r\\n                    SUM(WorkingTime - Holidays - Leaves - BillableTime - NewBusinessTime) AS CapacityClientTimeVariation,\\r\\n                    SUM(WorkingTime - Holidays - Leaves - ContractedTime) AS CapacityContractedTimeVariation\\r\\n                FROM UserTypologyGroup utg,\\r\\n                     (SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         COUNT(*) AS UserCount\\r\\n                     FROM [User] ssu,\\r\\n                          UserTypology typ\\r\\n                     WHERE typ.oid = ssu.Typology\\r\\n                     GROUP BY typ.UserTypologyGroup) tuc,\\r\\n                     (SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         yrd.Day AS [Date],\\r\\n                         SUM(RequiredHours) AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM [User] ssu,\\r\\n                          Yearday yrd,\\r\\n                          UserTypology typ\\r\\n                     WHERE DATEPART(dw, yrd.day) NOT IN (1, 7)\\r\\n                     AND typ.oid = ssu.Typology\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              yrd.Day\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         hld.Date AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         SUM(RequiredHours) AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM [User] ssu,\\r\\n                          UserTypology typ,\\r\\n                          Holiday hld\\r\\n                     WHERE DATEPART(dw, hld.Date) NOT IN (1, 7)\\r\\n                     AND typ.oid = ssu.Typology\\r\\n                     AND ssu.Company = hld.Company\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR hld.Date >= @FromDate AND hld.Date <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              hld.Date\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         uv.Day AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         SUM(RequiredHours) AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM [User] ssu,\\r\\n                          UserVacation uv,\\r\\n                          UserTypology typ\\r\\n                     WHERE DATEPART(dw, uv.Day) NOT IN (1, 7)\\r\\n                     AND uv.[User] = ssu.Oid\\r\\n                     AND typ.oid = ssu.Typology\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR uv.Day >= @FromDate AND uv.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              uv.Day\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         TypologyGroupOid,\\r\\n                         UserOid,\\r\\n                         [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         SUM(ContractedTime) AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM (SELECT\\r\\n                         edt.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         edt.[User] AS UserOid,\\r\\n                         yrd.Day AS [Date],\\r\\n                         SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime\\r\\n                     FROM Estimate est,\\r\\n                          EstimateItem eit,\\r\\n                          EstimateItemDetail edt,\\r\\n                          YearDay yrd\\r\\n                     WHERE eit.Estimate = est.Oid\\r\\n                     AND edt.EstimateItem = eit.Oid\\r\\n                     AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date)\\r\\n                     AND edt.Type = 2\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY est.Oid,\\r\\n                              edt.UserTypologyGroup,\\r\\n                              edt.[User],\\r\\n                              yrd.Day) t\\r\\n                     GROUP BY TypologyGroupOid,\\r\\n                              UserOid,\\r\\n                              [Date]\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         SUM(DurationHours + DurationMinutes / 60) AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM Timesheet tim,\\r\\n                          [User] ssu,\\r\\n                          UserTypology typ\\r\\n                     WHERE typ.Oid = ssu.Typology\\r\\n                     AND tim.CreatedBy = ssu.Oid\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              CAST(tim.CreatedOn AS date)\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         SUM(DurationHours + DurationMinutes / 60) AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM Timesheet tim,\\r\\n                          [User] ssu,\\r\\n                          UserTypology typ\\r\\n                     WHERE typ.Oid = ssu.Typology\\r\\n                     AND tim.CreatedBy = ssu.Oid\\r\\n                     AND tim.Client IS NOT NULL\\r\\n                     AND (tim.Billable = 1\\r\\n                     OR tim.Billable IS NULL)\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              CAST(tim.CreatedOn AS date)\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime,\\r\\n                         0 AS AdministrativeTime\\r\\n                     FROM Timesheet tim,\\r\\n                          [User] ssu,\\r\\n                          UserTypology typ\\r\\n                     WHERE typ.Oid = ssu.Typology\\r\\n                     AND tim.CreatedBy = ssu.Oid\\r\\n                     AND tim.Client IS NOT NULL\\r\\n                     AND NOT (tim.Billable = 1\\r\\n                     OR tim.Billable IS NULL)\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              CAST(tim.CreatedOn AS date)\\r\\n                     UNION ALL\\r\\n                     SELECT\\r\\n                         typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                         ssu.Oid AS UserOid,\\r\\n                         CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                         0 AS WorkingTime,\\r\\n                         0 AS Holidays,\\r\\n                         0 AS Leaves,\\r\\n                         0 AS ContractedTime,\\r\\n                         0 AS ActualTime,\\r\\n                         0 AS BillableTime,\\r\\n                         0 AS NewBusinessTime,\\r\\n                         SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime\\r\\n                     FROM Timesheet tim,\\r\\n                          [User] ssu,\\r\\n                          UserTypology typ\\r\\n                     WHERE typ.Oid = ssu.Typology\\r\\n                     AND tim.CreatedBy = ssu.Oid\\r\\n                     AND tim.Client IS NULL\\r\\n                     AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                     GROUP BY typ.UserTypologyGroup,\\r\\n                              ssu.Oid,\\r\\n                              CAST(tim.CreatedOn AS date)) t\\r\\n                WHERE utg.Oid = t.TypologyGroupOid\\r\\n                AND tuc.TypologyGroupOid = utg.Oid\\r\\n                GROUP BY utg.Name\\r\\n                ORDER BY ContractedTime DESC\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "319d5cdf-9bca-4fec-b03f-d18df1d207ba",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/FTE - Timesheet Capacity/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 370\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"TypologyGroup\"\n  },\n  \"panes\": [{\n                \"name\": \"Timesheet\"\n            }, {\n                \"name\": \"Capacity\"\n            }],\n  \"series\": [\n    {\n      \"pane\":\"Timesheet\",\r\n\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Timesheet\"\n    },\n    {\n      \"pane\":\"Timesheet\",\n      \"type\": \"stagger\",\n      \"valueField\": \"BillableTime\",\n      \"name\": \"Billable\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Timesheet\",\n      \"type\": \"stagger\",\n      \"valueField\": \"NewBusinessTime\",\n      \"name\": \"New Business\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"bar\",\n      \"valueField\": \"Capacity\",\n      \"name\": \"Capacity\"\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"line\",\n      \"valueField\": \"ContractedTime\",\n      \"name\": \"Contracted\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"stagger\",\n      \"valueField\": \"AdministrativeTime\",\n      \"name\": \"Administrative\",\n      \"point\":{\"size\":6 }\n    }\n  ],\n  \"legend\": {\n    \"rowCount\":1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  }\n}",
            "DashboardDefinitionId": "9e8c27c3-9a83-4fbd-bd4e-f9f856d32178"
        },
        {
            "Id": "267114e7-d0c2-4cef-b14a-d8a6bf4f66b2",
            "Name": "Overtime View",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 3,
            "Parameters": "[\n    {\n        \"WidgetSubTitle\": \"Capacity, Contracted Time & Weeks with not Enough Capacity\",\n        \"WidgetType\": \"rangeselector\",\n        \"WidgetFilterField\": \"\",\n        \"WidgetColor\": \"#e0e0e0\",\n        \"WidgetHeight\": \"100\",\n        \"WidgetHeader\": {\n            \"showContextInfo\": false,\n            \"WidgetPeriodChooser\": {\n                \"startDate\": \"2019/01/1\",\n                \"endDate\": \"2019/12/30\",\n                \"type\": \"year\",\n                \"visible\": false\n            },\n            \"showSubTitle\": true,\n            \"showTitle\": true\n        },\n        \"WidgetDataSources\": {\n            \"main\": {\n                \"type\": \"querytext\",\n                \"value\": \"\\r\\n                SELECT\\r\\n                    [Date] - DATEPART(dw, [Date]) + 1 AS Week,\\r\\n                    SUM(WorkingTime - Holidays - Leaves) AS Capacity,\\r\\n                    SUM(ContractedTime) AS ContractedTime,\\r\\n                    iif(SUM(WorkingTime - Holidays - Leaves - ContractedTime) < 0, SUM(WorkingTime - Holidays - Leaves), NULL) AS NotEnoughCapacity\\r\\n                FROM (SELECT\\r\\n                    typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                    ssu.Oid AS UserOid,\\r\\n                    yrd.Day AS [Date],\\r\\n                    SUM(RequiredHours) AS WorkingTime,\\r\\n                    0 AS Holidays,\\r\\n                    0 AS Leaves,\\r\\n                    0 AS ContractedTime,\\r\\n                    0 AS ActualTime,\\r\\n                    0 AS BillableTime,\\r\\n                    0 AS NewBusinessTime,\\r\\n                    0 AS AdministrativeTime\\r\\n                FROM [User] ssu,\\r\\n                     Yearday yrd,\\r\\n                     UserTypology typ\\r\\n                WHERE DATEPART(dw, yrd.day) NOT IN (1, 7)\\r\\n                AND typ.oid = ssu.Typology\\r\\n                AND yrd.day >= @FromDate\\r\\n                AND yrd.day <= @ToDate\\r\\n                GROUP BY typ.UserTypologyGroup,\\r\\n                         ssu.Oid,\\r\\n                         yrd.Day\\r\\n                UNION ALL\\r\\n                SELECT\\r\\n                    typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                    ssu.Oid AS UserOid,\\r\\n                    hld.Date AS [Date],\\r\\n                    0 AS WorkingTime,\\r\\n                    SUM(RequiredHours) AS Holidays,\\r\\n                    0 AS Leaves,\\r\\n                    0 AS ContractedTime,\\r\\n                    0 AS ActualTime,\\r\\n                    0 AS BillableTime,\\r\\n                    0 AS NewBusinessTime,\\r\\n                    0 AS AdministrativeTime\\r\\n                FROM [User] ssu,\\r\\n                     UserTypology typ,\\r\\n                     Holiday hld\\r\\n                WHERE DATEPART(dw, hld.Date) NOT IN (1, 7)\\r\\n                AND typ.oid = ssu.Typology\\r\\n                AND ssu.Company = hld.Company\\r\\n                AND hld.Date >= @FromDate\\r\\n                AND hld.Date <= @ToDate\\r\\n                GROUP BY typ.UserTypologyGroup,\\r\\n                         ssu.Oid,\\r\\n                         hld.Date\\r\\n                UNION ALL\\r\\n                SELECT\\r\\n                    typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                    ssu.Oid AS UserOid,\\r\\n                    uv.Day AS [Date],\\r\\n                    0 AS WorkingTime,\\r\\n                    0 AS Holidays,\\r\\n                    SUM(RequiredHours) AS Leaves,\\r\\n                    0 AS ContractedTime,\\r\\n                    0 AS ActualTime,\\r\\n                    0 AS BillableTime,\\r\\n                    0 AS NewBusinessTime,\\r\\n                    0 AS AdministrativeTime\\r\\n                FROM [User] ssu,\\r\\n                     UserVacation uv,\\r\\n                     UserTypology typ\\r\\n                WHERE DATEPART(dw, uv.Day) NOT IN (1, 7)\\r\\n                AND uv.[User] = ssu.Oid\\r\\n                AND typ.oid = ssu.Typology\\r\\n                AND uv.Day >= @FromDate\\r\\n                AND uv.Day <= @ToDate\\r\\n                GROUP BY typ.UserTypologyGroup,\\r\\n                         ssu.Oid,\\r\\n                         uv.Day\\r\\n                UNION ALL\\r\\n                SELECT\\r\\n                    TypologyGroupOid,\\r\\n                    UserOid,\\r\\n                    [Date],\\r\\n                    0 AS WorkingTime,\\r\\n                    0 AS Holidays,\\r\\n                    0 AS Leaves,\\r\\n                    SUM(ContractedTime) AS ContractedTime,\\r\\n                    0 AS ActualTime,\\r\\n                    0 AS BillableTime,\\r\\n                    0 AS NewBusinessTime,\\r\\n                    0 AS AdministrativeTime\\r\\n                FROM (SELECT\\r\\n                    edt.UserTypologyGroup AS TypologyGroupOid,\\r\\n                    edt.[User] AS UserOid,\\r\\n                    yrd.Day AS [Date],\\r\\n                    SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime\\r\\n                FROM Estimate est,\\r\\n                     EstimateItem eit,\\r\\n                     EstimateItemDetail edt,\\r\\n                     YearDay yrd\\r\\n                WHERE eit.Estimate = est.Oid\\r\\n                AND edt.EstimateItem = eit.Oid\\r\\n                AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date)\\r\\n                AND edt.Type = 2\\r\\n                AND [Date] >= @FromDate\\r\\n                AND [Date] <= @ToDate\\r\\n                GROUP BY est.Oid,\\r\\n                         edt.UserTypologyGroup,\\r\\n                         edt.[User],\\r\\n                         yrd.Day) t\\r\\n                GROUP BY TypologyGroupOid,\\r\\n                         UserOid,\\r\\n                         [Date]) t\\r\\n                WHERE [Date] >= @FromDate\\r\\n                AND [Date] <= @ToDate\\r\\n                GROUP BY [Date] - DATEPART(dw, [Date]) + 1\"\n            }\n        },\n        \"Filters\": {},\n        \"QueryConfiguration\": {\n            \"PreviousPeriod\": {\n                \"Show\": false,\n                \"KeyFieldName\": \"\",\n                \"Type\": 0\n            },\n            \"RequiredFilters\": []\n        }\n    }\n]",
            "DashboardComponentType": {
                "Id": "319d5cdf-9bca-4fec-b03f-d18df1d207ba",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/FTE - Overtime View/execute",
            "Configuration": "{\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"Week\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Capacity\"\n},\n        {\n         \"valueField\": \"ContractedTime\"\n      },\n      {\n         \"valueField\": \"NotEnoughCapacity\",\n         \"type\":\"scatter\",\n         \"ignoreEmptyPoints\":true,\n        \"color\": \"#da5859\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"week\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": {\n    \"length\": {\n      \"months\": 1\n    }\n  }\n}",
            "DashboardDefinitionId": "9e8c27c3-9a83-4fbd-bd4e-f9f856d32178"
        },
        {
            "Id": "37b2b93f-086e-4301-9ff3-fad274beced3",
            "Name": "Typology Groups",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 8,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"Staff, Proposals & Timesheet\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":0,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Delayed To Do\",\"metricFieldValue\":\"DelayedToDoJobsGrandTotal\"},{\"visible\":true,\"metricName\":\"?  Delayed Work in Progress\",\"metricFieldValue\":\"DelayedWorkInProgressJobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\r\\n                        SELECT\\r\\n                            utg.Name AS TypologyGroup,\\r\\n                            MAX(UserCount) AS UserCount,\\r\\n                            SUM(WorkingTime - Holidays - Leaves) AS Capacity,\\r\\n                            SUM(Holidays) AS Holidays,\\r\\n                            SUM(Leaves) AS Leaves,\\r\\n                            SUM(ContractedTime) AS ContractedTime,\\r\\n                            SUM(PlannedTime) AS PlannedTime,\\r\\n                            SUM(ActualTime) AS ActualTime,\\r\\n                            SUM(BillableTime) AS BillableTime,\\r\\n                            SUM(NewBusinessTime) AS NewBusinessTime,\\r\\n                            SUM(AdministrativeTime) AS AdministrativeTime,\\r\\n                            SUM(BillableTime + NewBusinessTime) AS ClientTime,\\r\\n                            SUM(WorkingTime - Holidays - Leaves - BillableTime - NewBusinessTime) AS CapacityClientTimeVariation,\\r\\n                            IIF(SUM(WorkingTime - Holidays - Leaves) = 0, 0, SUM(BillableTime - NewBusinessTime) / SUM(WorkingTime - Holidays - Leaves)) AS CapacityClientTimeVariationPercentage,\\r\\n                            SUM(WorkingTime - Holidays - Leaves - ContractedTime) AS CapacityContractedTimeVariation,\\r\\n                            IIF(SUM(WorkingTime - Holidays - Leaves) = 0, 0, SUM(ContractedTime) / SUM(WorkingTime - Holidays - Leaves)) AS CapacityContractedTimeVariationPercentage,\\r\\n                            IIF(SUM(WorkingTime - Holidays - Leaves) = 0, 0, SUM(BillableTime) / SUM(WorkingTime - Holidays - Leaves)) AS CapacityBillableVariationPercentage\\r\\n                        FROM UserTypologyGroup utg,\\r\\n                             (SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 COUNT(*) AS UserCount\\r\\n                             FROM [User] ssu,\\r\\n                                  UserTypology typ\\r\\n                             WHERE typ.oid = ssu.Typology\\r\\n                             GROUP BY typ.UserTypologyGroup) tuc,\\r\\n                             (SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 yrd.Day AS [Date],\\r\\n                                 SUM(RequiredHours) AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM [User] ssu,\\r\\n                                  Yearday yrd,\\r\\n                                  UserTypology typ\\r\\n                             WHERE DATEPART(dw, yrd.day) NOT IN (1, 7)\\r\\n                             AND typ.oid = ssu.Typology\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      yrd.Day\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 hld.Date AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 SUM(RequiredHours) AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM [User] ssu,\\r\\n                                  UserTypology typ,\\r\\n                                  Holiday hld\\r\\n                             WHERE DATEPART(dw, hld.Date) NOT IN (1, 7)\\r\\n                             AND typ.oid = ssu.Typology\\r\\n                             AND ssu.Company = hld.Company\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR hld.Date >= @FromDate AND hld.Date <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      hld.Date\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 uv.Day AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 SUM(RequiredHours) AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM [User] ssu,\\r\\n                                  UserVacation uv,\\r\\n                                  UserTypology typ\\r\\n                             WHERE DATEPART(dw, uv.Day) NOT IN (1, 7)\\r\\n                             AND uv.[User] = ssu.Oid\\r\\n                             AND typ.oid = ssu.Typology\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR uv.Day >= @FromDate AND uv.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      uv.Day\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 TypologyGroupOid,\\r\\n                                 UserOid,\\r\\n                                 [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 SUM(ContractedTime) AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM (SELECT\\r\\n                                 edt.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 edt.[User] AS UserOid,\\r\\n                                 yrd.Day AS [Date],\\r\\n                                 SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime\\r\\n                             FROM Estimate est,\\r\\n                                  EstimateItem eit,\\r\\n                                  EstimateItemDetail edt,\\r\\n                                  YearDay yrd\\r\\n                             WHERE eit.Estimate = est.Oid\\r\\n                             AND edt.EstimateItem = eit.Oid\\r\\n                             AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date)\\r\\n                             AND edt.Type = 2\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY est.Oid,\\r\\n                                      edt.UserTypologyGroup,\\r\\n                                      edt.[User],\\r\\n                                      yrd.Day) t\\r\\n                             GROUP BY TypologyGroupOid,\\r\\n                                      UserOid,\\r\\n                                      [Date]\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 pht.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 pht.[User] AS UserOid,\\r\\n                                 yrd.Day AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 SUM((pht.PlannedMinutes / 60) / (DATEDIFF(dd, prj.BeginDate, prj.EndDate + 1))) AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM PlannedHoursTotal pht,\\r\\n                                  Project prj,\\r\\n                                  YearDay yrd\\r\\n                             WHERE prj.Oid = pht.Project\\r\\n                             AND yrd.Day BETWEEN CAST(prj.BeginDate AS date) AND CAST(prj.EndDate AS date)\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY pht.UserTypologyGroup,\\r\\n                                      pht.[User],\\r\\n                                      yrd.Day\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 SUM(DurationHours + DurationMinutes / 60) AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM Timesheet tim,\\r\\n                                  [User] ssu,\\r\\n                                  UserTypology typ\\r\\n                             WHERE typ.Oid = ssu.Typology\\r\\n                             AND tim.CreatedBy = ssu.Oid\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      CAST(tim.CreatedOn AS date)\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 SUM(DurationHours + DurationMinutes / 60) AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM Timesheet tim,\\r\\n                                  [User] ssu,\\r\\n                                  UserTypology typ\\r\\n                             WHERE typ.Oid = ssu.Typology\\r\\n                             AND tim.CreatedBy = ssu.Oid\\r\\n                             AND tim.Client IS NOT NULL\\r\\n                             AND (tim.Billable = 1\\r\\n                             OR tim.Billable IS NULL)\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      CAST(tim.CreatedOn AS date)\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime,\\r\\n                                 0 AS AdministrativeTime\\r\\n                             FROM Timesheet tim,\\r\\n                                  [User] ssu,\\r\\n                                  UserTypology typ\\r\\n                             WHERE typ.Oid = ssu.Typology\\r\\n                             AND tim.CreatedBy = ssu.Oid\\r\\n                             AND tim.Client IS NOT NULL\\r\\n                             AND NOT (tim.Billable = 1\\r\\n                             OR tim.Billable IS NULL)\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      CAST(tim.CreatedOn AS date)\\r\\n                             UNION ALL\\r\\n                             SELECT\\r\\n                                 typ.UserTypologyGroup AS TypologyGroupOid,\\r\\n                                 ssu.Oid AS UserOid,\\r\\n                                 CAST(tim.CreatedOn AS date) AS [Date],\\r\\n                                 0 AS WorkingTime,\\r\\n                                 0 AS Holidays,\\r\\n                                 0 AS Leaves,\\r\\n                                 0 AS ContractedTime,\\r\\n                                 0 AS PlannedTime,\\r\\n                                 0 AS ActualTime,\\r\\n                                 0 AS BillableTime,\\r\\n                                 0 AS NewBusinessTime,\\r\\n                                 SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime\\r\\n                             FROM Timesheet tim,\\r\\n                                  [User] ssu,\\r\\n                                  UserTypology typ\\r\\n                             WHERE typ.Oid = ssu.Typology\\r\\n                             AND tim.CreatedBy = ssu.Oid\\r\\n                             AND tim.Client IS NULL\\r\\n                             AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/)\\r\\n                             GROUP BY typ.UserTypologyGroup,\\r\\n                                      ssu.Oid,\\r\\n                                      CAST(tim.CreatedOn AS date)) t\\r\\n                        WHERE utg.Oid = t.TypologyGroupOid\\r\\n                        AND tuc.TypologyGroupOid = utg.Oid\\r\\n                        GROUP BY utg.Name\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "319d5cdf-9bca-4fec-b03f-d18df1d207ba",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/FTE - Typology Groups/execute",
            "Configuration": "{\n  \"headerFilter\":{\n  \"visible\":true\n},\n\"selection\": {\n  \"mode\": \"none\"\n},\n\"columnResizingMode\":\"widget\",\n\"allowColumnResizing\":true,\n\"allowFiltering\":true,\n\"columnAutoWidth\":true,\n  \"searchPanel\": {\n            \"visible\": true\n  },\n  \"height\": 450,\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"columnMinWidth\": 80,\n  \"columns\": [\n    {\n      \"dataField\": \"TypologyGroup\",\n      \"name\": \"Typology Group\",\n      \"caption\": \"Typology\",\n      \"width\": 300\n    },\n    {\n      \"caption\":\"Staff\",\n      \"columns\":[\n        {\n          \"dataField\": \"UserCount\",\n          \"caption\": \"# Heads\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cssClass\":\"dataCell actualHours\"\n        },\n        {\n          \"dataField\": \"Capacity\",\n          \"caption\": \"Capacity\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Proposals & Projects\",\n      \"columns\":[\n        {\n          \"dataField\": \"ContractedTime\",\n          \"caption\": \"Contracted\",\n          \"name\": \"Contracted\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"CapacityContractedTimeVariationPercentage\",\n          \"caption\": \"Contracted %\",\n          \"name\": \"Contracted %\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cellTemplate\": \"function(e, i) { SkillsWorkflow.setRAG(e, (i.value * 100).toFixed(1), i.value < 0.5, i.value < 0.8, i.value >= 0.8, true);}\"\n        },\n        {\n          \"dataField\": \"PlannedTime\",\n          \"caption\": \"Planned\",\n          \"name\": \"Planned\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Timesheet\",\n      \"columns\":[\n        {\n          \"dataField\": \"CapacityBillableVariationPercentage\",\n          \"caption\": \"Utilization %\",\n          \"name\": \"Utilization %\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cellTemplate\": \"function(e, i) { SkillsWorkflow.setRAG(e, (i.value * 100).toFixed(1), i.value < 0.5, i.value < 0.8, i.value >= 0.8, true);}\"\n        },\n        {\n          \"dataField\": \"ActualTime\",\n          \"caption\": \"Actual\",\n          \"name\": \"Actual\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"BillableTime\",\n          \"caption\": \"Billable\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"NewBusinessTime\",\n          \"caption\": \"New Business\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"AdministrativeTime\",\n          \"caption\": \"Administrative\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    }\n],\n  \"sortByGroupSummaryInfo\": [\n    {\n      \"summaryItem\": \"count\"\n    }\n  ],\n  \"summary\": {\n    \"totalItems\": [\n      {\n        \"column\": \"Typology Group\",\n        \"summaryType\": \"count\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"Total: {0}\",\n        \"alignment\": \"left\"\n      },\n      {\n        \"column\": \"Capacity\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"{0}\",\n        \"alignment\": \"right\"\n      }\n    ]\n  }\n}",
            "DashboardDefinitionId": "9e8c27c3-9a83-4fbd-bd4e-f9f856d32178"
        }
    ]
}