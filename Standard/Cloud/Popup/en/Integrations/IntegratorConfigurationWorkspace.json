{
  "DashboardDefinitionRoles": [],
  "Id": "5f54482d-789a-4eca-b349-126e2a5dfa49",
  "Name": "IntegratorConfigurationWorkspace",
  "Active": true,
  "Location": 1,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"workspaces\":false},\"fields\":[]}]",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "fa70ac7d-d4ea-4fdc-98ee-75e8f8df87e0",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"button\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":18,\"WidgetYPosition\":38,\"WidgetRows\":4,\"WidgetColumns\":11,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"onClick\":\"function(e){\\r\\n    \\r\\n    var integratorsGrid = SW.getComponent('data');\\r\\n    var integrator = integratorsGrid.getSelectedRowsData()[0];\\r\\n\\r\\n    var form = SW.getComponent('formIntegrator');\\r\\n    form.option('disabled', true);\\r\\n    e.component.option('disabled', true);\\r\\n\\r\\n    var object = form.getEditor('CompanySelectBox').option('value');\\r\\n    var companyId = object[\\\"CompanyId\\\"];\\r\\n    var externalTableModel = {\\r\\n        KeyValue: companyId,\\r\\n        KeyColumnName: integrator.KeyColumnName,\\r\\n        Columns: GetColumns(object, integrator)\\r\\n    };\\r\\n    SW.executeAPI(\\r\\n        'PUT',\\r\\n         'externalTables/'+integrator.TableName+'/rows',\\r\\n         null,\\r\\n         JSON.stringify(externalTableModel)\\r\\n    ).then(\\r\\n        x => {\\r\\n            form.option('disabled', false);\\r\\n            e.component.option('disabled', false);\\r\\n            SW.Toastr.toastr_Success('Saved');\\r\\n        }\\r\\n    ).catch(\\r\\n        x => {\\r\\n            form.option('disabled', false);\\r\\n            e.component.option('disabled', false);\\r\\n            SW.Toastr.toastr_Error(x);\\r\\n        }\\r\\n    )\\r\\n\\r\\n    function GetColumns(object, integrator){\\r\\n        var columns = [];\\r\\n        var config = JSON.parse(integrator.ConfigurationMetadata);\\r\\n        config.columns.forEach(column => {\\r\\n            var column = {\\r\\n                ColumnName: column.dataField,\\r\\n                Value: GetValue(object, column.dataField)\\r\\n            }\\r\\n            columns.push(column);\\r\\n        });\\r\\n        return columns;\\r\\n    }\\r\\n\\r\\n    function GetValue(p, key){\\r\\n        if(p[key] != null){\\r\\n            return p[key];\\r\\n        }\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n}\",\"text\":\"SAVE\",\"icon\":\"save\"}",
      "DashboardDefinitionId": "5f54482d-789a-4eca-b349-126e2a5dfa49"
    },
    {
      "Id": "9faed045-3b16-44d1-a324-c2288e7f26b4",
      "Name": "Attendance",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Settings\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":36,\"WidgetColumns\":45,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"select c1.Name as CompanyName, ac.FtpHostIp, ac.FtpPassword, ac.FtpUsername, ac.FilePath, ac.AdministratorMail, ac.LeaveTypeName, ac.IgnoreUserList \\r\\nfrom AttendanceCompany ac, Company c1\\r\\nwhere c1.Oid = ac.Company\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"colCount\":\"1\",\"labelLocation\":\"left\",\"scrollingEnabled\":true,\"width\":\"100%\",\"height\":\"100%\",\"onInitialized\":\"function(e){\\r\\n    var button = SW.getComponent('saveButton');\\r\\n    var integratorsGrid = SW.getComponent('data');\\r\\n    var integrator = integratorsGrid.getSelectedRowsData()[0];\\r\\n\\r\\n    SW.saveComponent(e.component, 'formIntegrator');\\r\\n    debugger;\\r\\n    SW.executeAPI('GET', 'integrators/'+integrator.Id)\\r\\n        .then(x => {\\r\\n            if(x.ConfigurationMetadata){\\r\\n                var config = JSON.parse(unescape(x.ConfigurationMetadata));\\r\\n                SetCompanyColumn(config);\\r\\n                SetItems(config);\\r\\n                button.option('visible', true);\\r\\n                button.option('disabled', false);\\r\\n            } else {\\r\\n                SW.Toastr.toastr_Error(\\\"Configuration Metadata not defined\\\");\\r\\n            }\\r\\n        });\\r\\n\\r\\n    function SetItems(config) {\\r\\n        var items = [];\\r\\n        config.columns.forEach(column => {\\r\\n            if(!column.isConfigurable){\\r\\n                return;\\r\\n            }\\r\\n            var item = {\\r\\n                dataField: column.dataField,\\r\\n                editorType: GetItemType(column.dataType),\\r\\n                label: null\\r\\n            }\\r\\n\\r\\n            if(column.label != null && column.label != \\\"\\\"){\\r\\n                item.label = {\\r\\n                    text: column.label\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if(column.dataSource){\\r\\n                item.editorType = 'dxSelectBox';\\r\\n\\r\\n                var dataSources = config.dataSources.filter(function (bla) {\\r\\n                    return bla.name == column.dataSource;\\r\\n                });\\r\\n\\r\\n                var dataSourceObject = dataSources[0].values;\\r\\n\\r\\n                item.editorOptions = {\\r\\n                    dataSource: dataSourceObject,\\r\\n                    displayExpr: \\\"Name\\\",\\r\\n                    value: dataSourceObject[0],\\r\\n                    valueExpr: \\\"Id\\\"\\r\\n                };\\r\\n            }\\r\\n            \\r\\n            items.push(item);\\r\\n        });\\r\\n        var currentItems = e.component.option('items');\\r\\n        var bla = currentItems.concat(items);\\r\\n        e.component.option('items', bla);\\r\\n    }\\r\\n\\r\\n    function SetCompanyColumn(config){\\r\\n        var item = {\\r\\n            label: {\\r\\n                text: \\\"Company\\\"\\r\\n            },\\r\\n            editorType: \\\"dxSelectBox\\\",\\r\\n            name: \\\"CompanySelectBox\\\",\\r\\n            editorOptions: {\\r\\n                dataSource: {\\r\\n                    load: function (e) { \\r\\n                        return SW.executeAPI('GET', 'skillviews/' + config.skillViewName).then(x => {\\r\\n                            return x;\\r\\n                        });\\r\\n                    }\\r\\n                },\\r\\n                displayExpr: \\\"Name\\\",\\r\\n                onValueChanged: function(e){\\r\\n                    SW.getComponent('formIntegrator').option('formData', e.value)\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        var items = [item];\\r\\n        e.component.option('items', items);\\r\\n    }\\r\\n\\r\\n    function GetItemType(x){\\r\\n        switch (x) {\\r\\n            case 0:\\r\\n            case \\\"Boolean\\\":\\r\\n                return 'dxCheckBox'\\r\\n            case 1:\\r\\n            case \\\"Date\\\":\\r\\n                return 'dxDateBox'\\r\\n            case 2:\\r\\n            case \\\"Float\\\":\\r\\n                return 'dxNumberBox'\\r\\n            case 3:\\r\\n            case 'Integer':\\r\\n                return 'dxNumberBox'\\r\\n            case 4:\\r\\n            case \\\"Money\\\":\\r\\n            case 5:\\r\\n            case \\\"Varchar50\\\":\\r\\n            case 6:\\r\\n            case \\\"Varchar100\\\":\\r\\n            case 7: \\r\\n            case \\\"VarcharMax\\\":\\r\\n            case 8:\\r\\n            case \\\"Text\\\":\\r\\n            case 9: \\r\\n            case \\\"UniqueIdentifier\\\":\\r\\n                return 'dxTextBox'\\r\\n\\r\\n            default:\\r\\n                return 'dxTextBox'\\r\\n        }\\r\\n    }\\r\\n}\"}",
      "DashboardDefinitionId": "5f54482d-789a-4eca-b349-126e2a5dfa49"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 5,
  "Default": true
}