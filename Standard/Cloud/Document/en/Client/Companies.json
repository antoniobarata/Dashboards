{
  "DashboardDefinitionRoles": [],
  "Id": "c76418ba-2c62-4d42-9cda-fb03176ca266",
  "Name": "Companies",
  "Active": true,
  "Location": 1,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "commercialclient",
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "66a1bd0a-a50e-4376-8ff3-1f35af39c49c",
      "Name": "Creation",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"documentcreation\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":29,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"entity\":\"commercialclient\",\"entityToCreate\":\"commercialclientcompany\",\"get\":{\"call\":\"function getCall(data, entityId){\\n    return 'v3/commercial-clients/' + entityId +  '/commercial-client-companies';\\n}\"},\"insert\":{\"call\":\"function postCall(data, entityId){\\n    return 'v3/commercial-client-companies'; \\n}\",\"model\":\"function postModel(data, entityId){\\n    return {\\n        CommercialClientId: entityId,\\n        CompanyId: data.CompanyId,\\n        BillingClientId: data.BillingClientId,\\n        VatId: data.VatId,\\n        OwnerId: data.OwnerId,\\n        ExternalId: data.ExternalId\\n    }\\n}\"},\"update\":{\"call\":\"function putCall(data, newData, entityId){\\n    return 'v3/commercial-client-companies/' + data.Id; \\n}\",\"model\":\"function putModel(data, newData, entityId) {\\n    const model = { ...data, ...newData };\\n    return {\\n        CommercialClientId: model.CommercialClientId,\\n        CompanyId: model.CompanyId,\\n        BillingClientId: model.BillingClientId,\\n        VatId: model.VatId,\\n        OwnerId: model.OwnerId,\\n        ExternalId: model.ExternalId\\n    }\\n}\"},\"remove\":{\"call\":\"function removeCall(data, entityId){\\n    return 'v3/commercial-client-companies/' + data.Id \\n}\"},\"grid\":{\"properties\":{\"height\":\"100%\",\"onEditorPreparing\":\"function(e){   \\r\\n\\r\\n    if(e.parentType === 'dataRow' && e.dataField === 'BillingClientId') {\\r\\n            e.editorOptions.disabled = (typeof e.row.data.CompanyId !== 'string');\\r\\n            if(!e.editorOptions.disabled){\\r\\n                SW.saveComponent(e.row.data.CompanyId, 'CompanyId');\\r\\n            }\\r\\n            var onValueChanged = e.editorOptions.onValueChanged;\\r\\n            var context = e;\\r\\n            e.editorOptions.onValueChanged = function(e){\\r\\n                onValueChanged.apply(this, arguments);\\r\\n                var externalId = '';\\r\\n                if (e.component.option('selectedItem').ExternalId !== undefined){\\r\\n                    externalId = e.component.option('selectedItem').ExternalId;\\r\\n                }\\r\\n                context.row.data.ExternalId = externalId;\\r\\n                context.component.cellValue(context.row.rowIndex, 'ExternalId', externalId);\\r\\n            }\\r\\n    }\\r\\n    if (e.parentType === 'dataRow' && e.dataField === 'VatId') {\\r\\n        e.editorOptions.disabled = (typeof e.row.data.CompanyId !== 'string');\\r\\n        if (!e.editorOptions.disabled) {\\r\\n            SW.saveComponent(e.row.data.CompanyId, 'CompanyId');\\r\\n        }\\r\\n    }\\r\\n    if (e.parentType === 'dataRow' && e.dataField === 'OwnerId') {\\r\\n        e.editorOptions.disabled = (typeof e.row.data.CompanyId !== 'string');\\r\\n        if (!e.editorOptions.disabled) {\\r\\n            SW.saveComponent(e.row.data.CompanyId, 'CompanyId');\\r\\n        }\\r\\n    }\\r\\n}\",\"onInitialized\":\"function(e){\\r\\n    \\r\\n}\"}},\"columns\":\"function(e){\\r\\n    return[{\\r\\n        dataField: \\\"CompanyId\\\",\\r\\n        caption: \\\"Company\\\",\\r\\n        setCellValue: function (rowData, value) {\\r\\n            rowData.CompanyId = value;\\r\\n            rowData.BillingClientId = null;\\r\\n            rowData.VatId = null;\\r\\n        },\\r\\n        lookup: {\\r\\n            searchEnabled: true,\\r\\n            dataSource: {\\r\\n                load: function (loadOptions) {\\r\\n                    var component = window[\\\"SW\\\"].getComponent('data');\\r\\n                    var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\\r\\n                    var skip = loadOptions.skip || 0;\\r\\n                    var take = loadOptions.take || 20;\\r\\n                    var param = { name: searchValue, skip: skip, take: take };\\r\\n                    return window[\\\"SW\\\"].executeAPI('GET', 'companies/lookup', param, {}).then(result => { return Promise.resolve(result); })\\r\\n                },\\r\\n                byKey: function (key) {\\r\\n                    if (key !== \\\"00000000-0000-0000-0000-000000000000\\\") {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'companies/' + key + '/lookup', null, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            displayExpr: \\\"Name\\\",\\r\\n            valueExpr: \\\"Id\\\"\\r\\n        },\\r\\n        validationRules: [{ type: \\\"required\\\" }]\\r\\n    },\\r\\n    {\\r\\n        dataField: \\\"BillingClientId\\\",\\r\\n        caption: \\\"BillingClient\\\",\\r\\n        calculateDisplayValue: function (rowData) {\\r\\n            if (!rowData.BillingClientId || rowData.BillingClientId === '00000000-0000-0000-0000-000000000000') {\\r\\n                return \\\"\\\";\\r\\n            }\\r\\n            return rowData.BillingClientName;\\r\\n        },\\r\\n        lookup: {\\r\\n            searchEnabled: true,\\r\\n            dataSource: {\\r\\n                load: function (loadOptions, e) {\\r\\n                    var companyId = SW.getComponent('CompanyId');\\r\\n                    var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\\r\\n                    var skip = loadOptions.skip || 0;\\r\\n                    var take = loadOptions.take || 20;\\r\\n                    \\r\\n                    var param = { name: searchValue, skip: skip, take: take };\\r\\n                    if(typeof companyId !== 'undefined'){\\r\\n                    return window[\\\"SW\\\"].executeAPI('GET', 'v3/companies/' + companyId + '/billing-clients', param, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                },\\r\\n                byKey: function (key) {\\r\\n                    if (key !== \\\"00000000-0000-0000-0000-000000000000\\\") {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'v3/billing-clients/' + key, null, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            displayExpr: \\\"Name\\\",\\r\\n            valueExpr: \\\"Id\\\"\\r\\n        },\\r\\n        validationRules: [{ type: \\\"required\\\" }]\\r\\n    },\\r\\n    {\\r\\n        dataField: \\\"VatId\\\",\\r\\n        caption: \\\"Vat\\\",\\r\\n        calculateDisplayValue: function (rowData) {\\r\\n            if (!rowData.VatId || rowData.VatId === '00000000-0000-0000-0000-000000000000') {\\r\\n                return \\\"\\\";\\r\\n            }\\r\\n            \\r\\n            return rowData.VatName;\\r\\n        },\\r\\n        lookup: {\\r\\n            dataSource: {\\r\\n                load: function (loadOptions) {\\r\\n                    var companyId = SW.getComponent('CompanyId');\\r\\n                    var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\\r\\n                    var skip = loadOptions.skip || 0;\\r\\n                    var take = loadOptions.take || 20;\\r\\n                    var param = { name: searchValue, skip: skip, take: take };\\r\\n                    if (companyId != null) {\\r\\n                        param[\\\"companyId\\\"] = companyId;\\r\\n                    }\\r\\n                    if (typeof companyId !== 'undefined') {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'companies/' + companyId + '/vats', param, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                },\\r\\n                byKey: function (key) {\\r\\n                    if (key !== \\\"00000000-0000-0000-0000-000000000000\\\") {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'vats/' + key, null, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            displayExpr: \\\"Name\\\",\\r\\n            valueExpr: \\\"Id\\\"\\r\\n        }\\r\\n    },\\r\\n    {\\r\\n        dataField: \\\"OwnerId\\\",\\r\\n        caption: \\\"Owner\\\",\\r\\n        calculateDisplayValue: function (rowData) {\\r\\n            if (!rowData.OwnerId || rowData.OwnerId === '00000000-0000-0000-0000-000000000000') {\\r\\n                return \\\"\\\";\\r\\n            }\\r\\n            \\r\\n            return rowData.OwnerName;\\r\\n        },\\r\\n        lookup: {\\r\\n            dataSource: {\\r\\n                load: function (loadOptions) {\\r\\n                    var companyId = SW.getComponent('CompanyId');\\r\\n                    var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\\r\\n                    var skip = loadOptions.skip || 0;\\r\\n                    var take = loadOptions.take || 20;\\r\\n                    var param = { name: searchValue, skip: skip, take: take };\\r\\n                    if (companyId != null) {\\r\\n                        param[\\\"companyId\\\"] = companyId;\\r\\n                    }\\r\\n                    if (typeof companyId !== 'undefined') {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'companies/' + companyId + '/users', param, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                },\\r\\n                byKey: function (key) {\\r\\n                    if (key !== \\\"00000000-0000-0000-0000-000000000000\\\") {\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'users/' + key, null, {}).then(result => { return Promise.resolve(result); })\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            displayExpr: \\\"Name\\\",\\r\\n            valueExpr: \\\"Id\\\"\\r\\n        }\\r\\n    },\\r\\n    {\\r\\n        dataField: \\\"ExternalId\\\",\\r\\n        caption: \\\"ExternalId\\\",\\r\\n        editorType: \\\"dxTextBox\\\"\\r\\n    }\\r\\n    ]\\r\\n}\"}",
      "DashboardDefinitionId": "c76418ba-2c62-4d42-9cda-fb03176ca266"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 2,
  "Default": true
}
