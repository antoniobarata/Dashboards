{
  "DashboardDefinitionRoles": [],
  "Id": "e95c429a-ded6-4b57-acf7-4849f81cb2b9",
  "Name": "Resources",
  "Active": true,
  "Location": 1,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "company",
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "67d4c836-24b5-4a81-affd-7ddd4494fc2f",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"documentcreation\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":50,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"entity\":\"company\",\"entityToCreate\":\"employee\",\"get\":{\"call\":\"function getCall(data, entityId){\\n    return 'v3/companies/' + entityId + '/employees'; \\n}\"},\"insert\":{\"call\":\"function postCall(data, entityId){\\n    return 'v3/employees'; \\n}\",\"model\":\"function postModel(data, entityId){\\n    return {\\n        CompanyId: entityId,\\n        Name: data.Name,\\n        ExternalId: data.ExternalId,\\n        Active: data.Active,\\n        MaxValue: data.MaxValue,\\n        UserId: data.UserId\\n    }\\n}\"},\"update\":{\"call\":\"function putCall(data, newData, entityId){\\n    return 'v3/employees/' + data.Id \\n}\",\"model\":\"function putModel(data, newData, entityId){\\n    const model = { ...data, ...newData };\\n    return {\\n        CompanyId: entityId,\\n        Name: model.Name,\\n        ExternalId: model.ExternalId,\\n        Active: model.Active,\\n        MaxValue: model.MaxValue,\\n        UserId: model.UserId\\n    }\\n}\"},\"remove\":{\"call\":\"function removeCall(data, entityId){\\n    return 'v3/employees'/ data.Id ;\\n}\"},\"columns\":\"function column(e){\\r\\n    return[\\r\\n        {\\r\\n            dataField: \\\"Name\\\",\\r\\n            editorType: \\\"dxTextBox\\\",\\r\\n            validationRules:[{ type: \\\"required\\\" }]\\r\\n        },\\r\\n        {\\r\\n            dataField: \\\"ExternalId\\\",\\r\\n            caption: \\\"ExternalId\\\",\\r\\n            editorType: \\\"dxTextBox\\\"\\r\\n        },\\r\\n        {\\r\\n            dataField: \\\"UserId\\\",\\r\\n            caption: \\\"User\\\",\\r\\n            calculateDisplayValue: function (rowData) {\\r\\n                debugger;\\r\\n                if (!rowData.UserId || rowData.UserId === '00000000-0000-0000-0000-000000000000') {\\r\\n                    return \\\"\\\";\\r\\n                }\\r\\n                return rowData.UserName;\\r\\n            },\\r\\n            lookup:{\\r\\n                searchEnabled: true,\\r\\n                dataSource: {\\r\\n                    load: function (loadOptions) {\\r\\n                        var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\\r\\n                        var skip = loadOptions.skip || 0;\\r\\n                        var take = loadOptions.take || 20;\\r\\n                        var param = { userName: searchValue, skip: skip, take: take };\\r\\n                        return window[\\\"SW\\\"].executeAPI('GET', 'users/all/lookup', param, {}).then(result => { return Promise.resolve(result); })\\r\\n                    },\\r\\n                    byKey: function (key) {\\r\\n                        if (key !== \\\"00000000-0000-0000-0000-000000000000\\\") {\\r\\n                            return window[\\\"SW\\\"].executeAPI('GET', 'users/' + key + '/lookup', null, {}).then(result => { return Promise.resolve(result); })\\r\\n                        }\\r\\n                    }\\r\\n                },\\r\\n                displayExpr: \\\"Name\\\",\\r\\n                valueExpr: \\\"Id\\\"\\r\\n            }\\r\\n        },\\r\\n        {\\r\\n            dataField: \\\"Active\\\",\\r\\n            editorType: \\\"dxCheckBox\\\"\\r\\n        },\\r\\n        {\\r\\n            dataField: \\\"MaxValue\\\",\\r\\n            editorType: \\\"dxNumberBox\\\",\\r\\n            editorOptions:{\\r\\n                format: \\\"#0.00\\\"\\r\\n            }\\r\\n        }\\r\\n    ]\\r\\n}\"}",
      "DashboardDefinitionId": "e95c429a-ded6-4b57-acf7-4849f81cb2b9"
    }
  ],
  "DataSourceConfiguration": "{}",
  "Version": 2,
  "Default": true
}
