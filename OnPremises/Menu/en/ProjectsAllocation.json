{"DashboardDefinitionRoles":[],"Id":"2ceec908-657a-4558-9a39-585e98c8498d","Name":"Projects Allocation Dashboard","Active":true,"Location":0,"DocumentId":"00000000-0000-0000-0000-000000000000","DocumentName":"","DocumentsConfiguration":null,"Templates":[],"DashboardDefinitionComponents":[{"Id":"73ee78e9-c780-4757-b3a8-24ecebc557f1","Name":"Overtime View","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":2,"Parameters":"[\r\n    {\r\n        \"WidgetSubTitle\": \"Capacity, Contracted Time & Weeks with not Enough Capacity\",\r\n        \"WidgetType\": \"rangeSelector\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#e0e0e0\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"startDate\": \"2018/01/01\",\r\n                \"endDate\": \"2019/12/31\",\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"queryText\",\r\n                \"value\": \"SELECT [Date] - DATEPART(dw, [Date]) + 1 AS Week, SUM(PlannedTime) AS PlannedTime, SUM(BillableTime) AS BillableTime FROM (SELECT pht.UserTypologyGroup AS TypologyGroupOid, pht.[User] AS UserOid, yrd.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, SUM((pht.PlannedMinutes / 60) / (DATEDIFF(dd, prj.BeginDate, prj.EndDate + 1))) AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM PlannedHoursTotal pht, Project prj, YearDay yrd, [User] u WHERE prj.Oid = pht.Project AND yrd.Day BETWEEN CAST(prj.BeginDate AS date) AND CAST(prj.EndDate AS date) AND yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[ClientFilter]*/ AND prj.Client = @ClientId /*[/ClientFilter]*/ and prj.Company in (select Companies from UserUsers_CompanyCompanies uucc where Users = @CurrentUserId) and u.Oid = pht.[User] and u.Company in (select Companies from UserUsers_CompanyCompanies uucc where Users = @CurrentUserId) GROUP BY pht.UserTypologyGroup, pht.[User], yrd.Day UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, SUM(DurationHours + DurationMinutes / 60) AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, SUM(DurationHours + DurationMinutes / 60) AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND (tim.Billable = 1 OR tim.Billable IS NULL) AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND NOT (tim.Billable = 1 OR tim.Billable IS NULL) AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NULL AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date)) t WHERE [Date] >= @FromDate AND [Date] <= @ToDate AND UserOid IS NOT NULL GROUP BY [Date] - DATEPART(dw, [Date]) + 1\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"QueryConfiguration\": null\r\n    }\r\n]","DashboardComponentType":{"Id":"6f649e62-be82-4af7-8d64-06b32cf6c0ea","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Utilization - Overtime View/execute","Configuration":"{\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"Week\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"PlannedTime\"\n},\n        {\n         \"valueField\": \"BillableTime\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"week\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  }\n}","DashboardDefinitionId":"2ceec908-657a-4558-9a39-585e98c8498d"},{"Id":"779c43a6-c3ad-44e5-8fd7-91a4946759b9","Name":"Allocation per User","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":1,"Parameters":"[\r\n    {\r\n        \"WidgetSubTitle\": \"Client, Admin and Internal Time spent per User\",\r\n        \"WidgetType\": \"pivotGrid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"? Forecast\",\r\n                        \"metricFieldValue\": \"TimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"? Actual\",\r\n                        \"metricFieldValue\": \"UtilizationPercentGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"queryText\",\r\n                \"value\": \"SELECT MAX(utg.Name) AS TypologyGroup, MAX(usr.Name) AS [User], MAX(cli.Name) AS Client, MAX(prj.Name) AS Project, MAX(Capacity) AS Capacity, SUM(PlannedTime) AS PlannedTime, SUM(ActualTime) AS ActualTime, SUM(BillableTime) AS BillableTime, SUM(NewBusinessTime) AS NewBusinessTime, iif(MAX(Capacity) = 0, 0, SUM(PlannedTime) / MAX(Capacity)) AS Utilization FROM UserTypologyGroup utg, [User] usr, CommercialClient cli, Project prj, UserTypology ust, (SELECT UserOid, SUM(WorkingTime - Holidays - Leaves) AS Capacity FROM (SELECT ssu.Oid AS UserOid, yrd.Day AS [Date], SUM(RequiredHours) AS WorkingTime, 0 AS Holidays, 0 AS Leaves FROM [User] ssu, Yearday yrd, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, yrd.day) NOT IN (1, 7) /*[DateFilter]*/ AND yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY ssu.Oid, yrd.Day UNION ALL SELECT ssu.Oid AS UserOid, hld.Date AS [Date], 0 AS WorkingTime, SUM(RequiredHours) AS Holidays, 0 AS Leaves FROM [User] ssu, Holiday hld, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, hld.Date) NOT IN (1, 7) AND ssu.Company = hld.Company /*[DateFilter]*/ AND hld.Date >= @FromDate AND hld.Date <= @ToDate /*[/DateFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY ssu.Oid, hld.Date UNION ALL SELECT ssu.Oid AS UserOid, uv.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, SUM(RequiredHours) AS Leaves FROM [User] ssu, UserVacation uv, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, uv.Day) NOT IN (1, 7) AND uv.[User] = ssu.Oid /*[DateFilter]*/ AND uv.Day >= @FromDate AND uv.Day <= @ToDate /*[/DateFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY ssu.Oid, uv.Day) t GROUP BY UserOid) usv, (SELECT prj.Oid AS ProjectOid, pht.[User] AS UserOid, yrd.Day AS [Date], SUM((pht.PlannedMinutes / 60.0) / (DATEDIFF(dd, prj.BeginDate, prj.EndDate + 1))) AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime FROM PlannedHoursTotal pht, Project prj, YearDay yrd, UserUsers_CompanyCompanies uucc WHERE prj.Oid = pht.Project AND yrd.Day BETWEEN CAST(prj.BeginDate AS date) AND CAST(prj.EndDate AS date) /*[DateFilter]*/ AND yrd.Day >= @FromDate AND yrd.Day <= @ToDate /*[/DateFilter]*/ /*[ClientFilter]*/ AND prj.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = prj.Company GROUP BY prj.Oid, pht.[User], yrd.Day UNION ALL SELECT tim.Project AS ProjectOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS PlannedTime, SUM(DurationHours + DurationMinutes / 60.0) AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime FROM Timesheet tim, [User] ssu, UserUsers_CompanyCompanies uucc WHERE tim.CreatedBy = ssu.Oid AND tim.Project IS NOT NULL /*[DateFilter]*/ AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/ /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY tim.Project, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT tim.Project AS ProjectOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS PlannedTime, 0 AS ActualTime, SUM(DurationHours + DurationMinutes / 60.0) AS BillableTime, 0 AS NewBusinessTime FROM Timesheet tim, [User] ssu, UserUsers_CompanyCompanies uucc WHERE tim.CreatedBy = ssu.Oid AND tim.Project IS NOT NULL AND (tim.Billable = 1 OR tim.Billable IS NULL) /*[DateFilter]*/ AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/ /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY tim.Project, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT tim.Project AS ProjectOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, SUM(DurationHours + DurationMinutes / 60.0) AS NewBusinessTime FROM Timesheet tim, [User] ssu, UserUsers_CompanyCompanies uucc WHERE tim.CreatedBy = ssu.Oid AND tim.Project IS NOT NULL AND NOT (tim.Billable = 1 OR tim.Billable IS NULL) /*[DateFilter]*/ AND tim.CreatedOn >= @FromDate AND tim.CreatedOn <= @ToDate /*[/DateFilter]*/ /*[ClientFilter]*/ AND tim.Client = @ClientId /*[/ClientFilter]*/ and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY tim.Project, ssu.Oid, CAST(tim.CreatedOn AS date)) t WHERE usr.Oid = t.UserOid AND ust.Oid = usr.Typology AND utg.Oid = ust.UserTypologyGroup AND prj.Oid = t.ProjectOid AND cli.Oid = prj.Client AND usv.UserOid = t.UserOid and prj.Company in (select Companies from UserUsers_CompanyCompanies uucc where Users = @CurrentUserId) and usr.Company in (select Companies from UserUsers_CompanyCompanies uucc where Users = @CurrentUserId) GROUP BY usr.Oid, prj.Oid\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\"\r\n            ]\r\n        }\r\n    }\r\n]","DashboardComponentType":{"Id":"6f649e62-be82-4af7-8d64-06b32cf6c0ea","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Utilization - Projects per User/execute","Configuration":"{\n \"height\":370,\n  \"allowSortingBySummary\": true,\n  \"allowSorting\": true,\n  \"allowFiltering\": true,\n  \"allowExpandAll\":true,\n  \"showBorders\": true,\n  \"fieldPanel\": {\n      \"showColumnFields\": true,\n      \"showDataFields\": true,\n      \"showFilterFields\": true,\n      \"showRowFields\": true,\n      \"allowFieldDragging\": true,\n      \"visible\": true\n  },\n  \"wordWrapEnabled\":false,\n  \"dataSource\": {\n    \"fields\": [\n      {\n        \"caption\": \"Typology Group\",\n        \"width\": 120,\n        \"dataField\": \"TypologyGroup\",\n        \"area\": \"row\",\n        \"expanded\":true\n      },\n      {\n        \"dataField\": \"Company\",\n        \"dataType\": \"string\",\n        \"area\": \"filter\",\n        \"expanded\":true\n      },\n      {\n        \"dataField\": \"Client\",\n        \"dataType\": \"string\",\n        \"area\": \"filter\",\n        \"expanded\":true\n      },\n      {\n        \"dataField\": \"User\",\n        \"dataType\": \"string\",\n        \"area\": \"row\",\n        \"expanded\":true\n      },\n      {\n        \"dataField\": \"Project\",\n        \"dataType\": \"string\",\n        \"area\": \"column\",\n        \"expanded\":true\n      },\n       {\n        \"caption\": \"Capacity\",\n        \"dataField\": \"Capacity\",\n        \"area\": \"row\",\n        \"dataType\": \"number\",\n        \"summaryType\": \"sum\",\n        \"format\":\"#,###.#\"\n      },\n      {\n        \"caption\": \"Planned\",\n        \"dataField\": \"PlannedTime\",\n        \"dataType\": \"number\",\n        \"area\": \"data\",\n        \"summaryType\": \"sum\",\n        \"format\":\"#,###.#\"\n              },\n      {\n        \"caption\": \"Billable\",\n        \"dataField\": \"BillableTime\",\n        \"dataType\": \"number\",\n        \"area\": \"data\",\n        \"summaryType\": \"sum\",\n        \"format\":\"#,###.#\"\n      },\n      {\n        \"caption\": \"Allocation %\",\n        \"dataField\": \"Utilization\",\n\"dataType\": \"number\",\n        \"area\": \"data\",\n        \"format\":{\"type\":\"percent\", \"precision\":1},\n        \"summaryType\": \"sum\"\n      }\n    ],\n    \"store\": null\n  },\n   \"onCellPrepared\": \"function(e) {var dataField = e.component.getDataSource().getAreaFields('data')[e.cell.dataIndex];if(e.area=='data' && dataField.caption=='Allocation %'){if(e.cell.value>0.0){e.cellElement.css('background-color','#F57E4A').css('color','#ffffff');}if(e.cell.value>0.5){e.cellElement.css('background-color','#EB3573').css('color','#ffffff');}}}\"\n}","DashboardDefinitionId":"2ceec908-657a-4558-9a39-585e98c8498d"}]}