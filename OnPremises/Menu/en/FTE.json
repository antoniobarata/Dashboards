{
  "DashboardDefinitionRoles": [],
  "Id": "d1e37a64-c2d0-4789-9dac-2c4f7a0fb7c0",
  "Name": "FTE Dashboard",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentsConfiguration": null,
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "281388d3-3ab7-402f-8340-5a5f7ad79491",
      "Name": "Typology Groups",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Staff, Proposals \u0026 Timesheet\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed To Do\",\"metricFieldValue\":\"DelayedToDoJobsGrandTotal\"},{\"visible\":true,\"metricName\":\"# Delayed Work in Progress\",\"metricFieldValue\":\"DelayedWorkInProgressJobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\" SELECT utg.Name AS TypologyGroup, MAX(UserCount) AS UserCount, SUM(WorkingTime - Holidays - Leaves) AS Capacity, SUM(Holidays) AS Holidays, SUM(Leaves) AS Leaves, SUM(ContractedTime) AS ContractedTime, SUM(PlannedTime) AS PlannedTime, SUM(ActualTime) AS ActualTime, SUM(BillableTime) AS BillableTime, SUM(NewBusinessTime) AS NewBusinessTime, SUM(AdministrativeTime) AS AdministrativeTime, SUM(BillableTime + NewBusinessTime) AS ClientTime, SUM(WorkingTime - Holidays - Leaves - BillableTime - NewBusinessTime) AS CapacityClientTimeVariation, SUM(WorkingTime - Holidays - Leaves - ContractedTime) AS CapacityContractedTimeVariation FROM UserTypologyGroup utg, (SELECT typ.UserTypologyGroup AS TypologyGroupOid, COUNT(*) AS UserCount FROM [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.oid = ssu.Typology and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup) tuc, (SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, yrd.Day AS [Date], SUM(RequiredHours) AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, Yearday yrd, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, yrd.day) NOT IN (1, 7) AND typ.oid = ssu.Typology AND (1 != 1 /*[DateFilter]*/ OR yrd.Day \u003e= @FromDate AND yrd.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, yrd.Day UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, hld.Date AS [Date], 0 AS WorkingTime, SUM(RequiredHours) AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserTypology typ, Holiday hld, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, hld.Date) NOT IN (1, 7) AND typ.oid = ssu.Typology AND ssu.Company = hld.Company AND (1 != 1 /*[DateFilter]*/ OR hld.Date \u003e= @FromDate AND hld.Date \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, hld.Date UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, uv.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, SUM(RequiredHours) AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserVacation uv, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, uv.Day) NOT IN (1, 7) AND uv.[User] = ssu.Oid AND typ.oid = ssu.Typology AND (1 != 1 /*[DateFilter]*/ OR uv.Day \u003e= @FromDate AND uv.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, uv.Day UNION ALL SELECT TypologyGroupOid, UserOid, [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, SUM(ContractedTime) AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM (SELECT edt.UserTypologyGroup AS TypologyGroupOid, edt.[User] AS UserOid, yrd.Day AS [Date], SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime FROM Estimate est, EstimateItem eit, EstimateItemDetail edt, YearDay yrd, UserUsers_CompanyCompanies uucc WHERE eit.Estimate = est.Oid AND edt.EstimateItem = eit.Oid AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date) AND edt.Type = 2 AND (1 != 1 /*[DateFilter]*/ OR yrd.Day \u003e= @FromDate AND yrd.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = est.Company GROUP BY est.Oid, edt.UserTypologyGroup, edt.[User], yrd.Day) t GROUP BY TypologyGroupOid, UserOid, [Date] UNION ALL SELECT pht.UserTypologyGroup AS TypologyGroupOid, pht.[User] AS UserOid, yrd.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, SUM((pht.PlannedMinutes / 60) / (DATEDIFF(dd, prj.BeginDate, prj.EndDate + 1))) AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM PlannedHoursTotal pht, Project prj, YearDay yrd, UserUsers_CompanyCompanies uucc WHERE prj.Oid = pht.Project AND yrd.Day BETWEEN CAST(prj.BeginDate AS date) AND CAST(prj.EndDate AS date) AND (1 != 1 /*[DateFilter]*/ OR yrd.Day \u003e= @FromDate AND yrd.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = prj.Company GROUP BY pht.UserTypologyGroup, pht.[User], yrd.Day UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, SUM(DurationHours + DurationMinutes / 60) AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, SUM(DurationHours + DurationMinutes / 60) AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND (tim.Billable = 1 OR tim.Billable IS NULL) AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND NOT (tim.Billable = 1 OR tim.Billable IS NULL) AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS PlannedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NULL AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date)) t WHERE utg.Oid = t.TypologyGroupOid AND tuc.TypologyGroupOid = utg.Oid GROUP BY utg.Name\",\"mapping\":\"\"}},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "6f649e62-be82-4af7-8d64-06b32cf6c0ea",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/FTE - Typology Groups/execute",
      "Configuration": "{\n  \"headerFilter\":{\n  \"visible\":true\n},\n\"columnResizingMode\":\"widget\",\n\"allowColumnResizing\":true,\n\"allowFiltering\":true,\n\"columnAutoWidth\":true,\n  \"searchPanel\": {\n            \"visible\": true\n  },\n  \"height\": 370,\n  \"scrolling\": {\n    \"mode\": \"virtual\"\n  },\n  \"columnMinWidth\": 80,\n  \"columns\": [\n    {\n      \"dataField\": \"TypologyGroup\",\n      \"name\": \"Typology Group\",\n      \"caption\": \"Typology\",\n      \"width\": 300\n    },\n    {\n      \"caption\":\"Staff\",\n      \"columns\":[\n        {\n          \"dataField\": \"UserCount\",\n          \"caption\": \"# Heads\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cssClass\":\"dataCell actualHours\"\n        },\n        {\n          \"dataField\": \"Capacity\",\n          \"caption\": \"Capacity\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Proposals \u0026 Projects\",\n      \"columns\":[\n        {\n          \"dataField\": \"CapacityContractedTimeVariation\",\n          \"caption\": \"Variation\",\n          \"name\": \"Variation\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\",\n          \"cellTemplate\": \"function(e, i) {\n            var h = document.createElement(\u0027DIV\u0027); h.innerHTML = i.text;\n            if(i.value \u003c 0) {\n              h.style.backgroundColor = \u0027#f5564a\u0027; h.style.color = \u0027#ffffff\u0027;\n            }\n          }\"\n        },\n        {\n          \"dataField\": \"ContractedTime\",\n          \"caption\": \"Contracted\",\n          \"name\": \"Contracted\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"PlannedTime\",\n          \"caption\": \"Planned\",\n          \"name\": \"Planned\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    },\n    {\n      \"caption\":\"Timesheet\",\n      \"columns\":[\n        {\n          \"dataField\": \"ActualTime\",\n          \"caption\": \"Actual\",\n          \"name\": \"Actual\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"BillableTime\",\n          \"caption\": \"Billable\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"NewBusinessTime\",\n          \"caption\": \"New Business\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        },\n        {\n          \"dataField\": \"AdministrativeTime\",\n          \"caption\": \"Administrative\",\n          \"alignment\": \"right\",\n          \"format\": \"#,##0\"\n        }\n      ]\n    }\n],\n  \"sortByGroupSummaryInfo\": [\n    {\n      \"summaryItem\": \"count\"\n    }\n  ],\n  \"summary\": {\n    \"totalItems\": [\n      {\n        \"column\": \"Typology Group\",\n        \"summaryType\": \"count\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"Total: {0}\",\n        \"alignment\": \"left\"\n      },\n      {\n        \"column\": \"Capacity\",\n        \"summaryType\": \"sum\",\n        \"valueFormat\": \"#,##0\",\n        \"displayFormat\": \"{0}\",\n        \"alignment\": \"right\"\n      }\n    ]\n  }\n}",
      "DashboardDefinitionId": "d1e37a64-c2d0-4789-9dac-2c4f7a0fb7c0"
    },
    {
      "Id": "11a4f37b-1d2c-4c14-898b-64d67f3aa6a8",
      "Name": "Overtime View",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 3,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Capacity, Contracted Time \u0026 Weeks with not Enough Capacity\",\r\n        \"WidgetType\": \"rangeSelector\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#e0e0e0\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"startDate\": \"2018/06/01\",\r\n                \"endDate\": \"2019/12/31\",\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"queryText\",\r\n                \"value\": \"SELECT [Date] - DATEPART(dw, [Date]) + 1 AS Week, SUM(WorkingTime - Holidays - Leaves) AS Capacity, SUM(ContractedTime) AS ContractedTime, iif(SUM(WorkingTime - Holidays - Leaves - ContractedTime) \u003c 0, SUM(WorkingTime - Holidays - Leaves), NULL) AS NotEnoughCapacity FROM (SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, yrd.Day AS [Date], SUM(RequiredHours) AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, Yearday yrd, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, yrd.day) NOT IN (1, 7) AND typ.oid = ssu.Typology AND yrd.day \u003e= @FromDate AND yrd.day \u003c= @ToDate and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, yrd.Day UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, hld.Date AS [Date], 0 AS WorkingTime, SUM(RequiredHours) AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserTypology typ, Holiday hld, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, hld.Date) NOT IN (1, 7) AND typ.oid = ssu.Typology AND ssu.Company = hld.Company AND hld.Date \u003e= @FromDate AND hld.Date \u003c= @ToDate and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, hld.Date UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, uv.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, SUM(RequiredHours) AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserVacation uv, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, uv.Day) NOT IN (1, 7) AND uv.[User] = ssu.Oid AND typ.oid = ssu.Typology AND uv.Day \u003e= @FromDate AND uv.Day \u003c= @ToDate and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, uv.Day UNION ALL SELECT TypologyGroupOid, UserOid, [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, SUM(ContractedTime) AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM ( SELECT edt.UserTypologyGroup AS TypologyGroupOid, edt.[User] AS UserOid, yrd.Day AS [Date], SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime FROM Estimate est, EstimateItem eit, EstimateItemDetail edt, YearDay yrd, UserUsers_CompanyCompanies uucc WHERE eit.Estimate = est.Oid AND edt.EstimateItem = eit.Oid AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date) AND edt.Type = 2 AND [Date] \u003e= @FromDate AND [Date] \u003c= @ToDate and uucc.Users = @CurrentUserId and uucc.Companies = est.Company GROUP BY est.Oid, edt.UserTypologyGroup, edt.[User], yrd.Day) t GROUP BY TypologyGroupOid, UserOid, [Date]) t WHERE [Date] \u003e= @FromDate AND [Date] \u003c= @ToDate GROUP BY [Date] - DATEPART(dw, [Date]) + 1\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"QueryConfiguration\": {}\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "6f649e62-be82-4af7-8d64-06b32cf6c0ea",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/FTE - Overtime View/execute",
      "Configuration": "{\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"Week\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Capacity\"\n},\n        {\n         \"valueField\": \"ContractedTime\"\n      },\n      {\n         \"valueField\": \"NotEnoughCapacity\",\n         \"type\":\"scatter\",\n         \"ignoreEmptyPoints\":true,\n        \"color\": \"#da5859\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"week\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  }\n}",
      "DashboardDefinitionId": "d1e37a64-c2d0-4789-9dac-2c4f7a0fb7c0"
    },
    {
      "Id": "dda69858-3d5e-452d-9f87-bb1698150ac9",
      "Name": "Overview",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 2,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Timesheet \u0026 Capacity\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total\",\r\n                        \"metricFieldValue\": \"PendingGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"queryText\",\r\n                \"value\": \" SELECT TOP 20 utg.Name AS TypologyGroup, MAX(UserCount) AS UserCount, SUM(WorkingTime - Holidays - Leaves) AS Capacity, SUM(Holidays) AS Holidays, SUM(Leaves) AS Leaves, SUM(ContractedTime) AS ContractedTime, SUM(ActualTime) AS ActualTime, SUM(BillableTime) AS BillableTime, SUM(NewBusinessTime) AS NewBusinessTime, SUM(AdministrativeTime) AS AdministrativeTime, SUM(BillableTime + NewBusinessTime) AS ClientTime, SUM(WorkingTime - Holidays - Leaves - BillableTime - NewBusinessTime) AS CapacityClientTimeVariation, SUM(WorkingTime - Holidays - Leaves - ContractedTime) AS CapacityContractedTimeVariation FROM UserTypologyGroup utg, (SELECT typ.UserTypologyGroup AS TypologyGroupOid, COUNT(*) AS UserCount FROM [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.oid = ssu.Typology and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup) tuc, (SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, yrd.Day AS [Date], SUM(RequiredHours) AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, Yearday yrd, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, yrd.day) NOT IN (1, 7) AND typ.oid = ssu.Typology AND (1 != 1 /*[DateFilter]*/ OR yrd.Day \u003e= @FromDate AND yrd.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, yrd.Day UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, hld.Date AS [Date], 0 AS WorkingTime, SUM(RequiredHours) AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserTypology typ, Holiday hld, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, hld.Date) NOT IN (1, 7) AND typ.oid = ssu.Typology AND ssu.Company = hld.Company AND (1 != 1 /*[DateFilter]*/ OR hld.Date \u003e= @FromDate AND hld.Date \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, hld.Date UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, uv.Day AS [Date], 0 AS WorkingTime, 0 AS Holidays, SUM(RequiredHours) AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM [User] ssu, UserVacation uv, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE DATEPART(dw, uv.Day) NOT IN (1, 7) AND uv.[User] = ssu.Oid AND typ.oid = ssu.Typology AND (1 != 1 /*[DateFilter]*/ OR uv.Day \u003e= @FromDate AND uv.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, uv.Day UNION ALL SELECT TypologyGroupOid, UserOid, [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, SUM(ContractedTime) AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM (SELECT edt.UserTypologyGroup AS TypologyGroupOid, edt.[User] AS UserOid, yrd.Day AS [Date], SUM(edt.Hours / (DATEDIFF(dd, est.[Date], est.Expiration) + 1)) AS ContractedTime FROM Estimate est, EstimateItem eit, EstimateItemDetail edt, YearDay yrd, UserUsers_CompanyCompanies uucc WHERE eit.Estimate = est.Oid AND edt.EstimateItem = eit.Oid AND yrd.Day BETWEEN CAST(est.[Date] AS date) AND CAST(est.Expiration AS date) AND edt.Type = 2 AND (1 != 1 /*[DateFilter]*/ OR yrd.Day \u003e= @FromDate AND yrd.Day \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = est.Company GROUP BY est.Oid, edt.UserTypologyGroup, edt.[User], yrd.Day) t GROUP BY TypologyGroupOid, UserOid, [Date] UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, SUM(DurationHours + DurationMinutes / 60) AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, SUM(DurationHours + DurationMinutes / 60) AS BillableTime, 0 AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND (tim.Billable = 1 OR tim.Billable IS NULL) AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, SUM(DurationHours + DurationMinutes / 60) AS NewBusinessTime, 0 AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NOT NULL AND NOT (tim.Billable = 1 OR tim.Billable IS NULL) AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date) UNION ALL SELECT typ.UserTypologyGroup AS TypologyGroupOid, ssu.Oid AS UserOid, CAST(tim.CreatedOn AS date) AS [Date], 0 AS WorkingTime, 0 AS Holidays, 0 AS Leaves, 0 AS ContractedTime, 0 AS ActualTime, 0 AS BillableTime, 0 AS NewBusinessTime, SUM(DurationHours + DurationMinutes / 60) AS AdministrativeTime FROM Timesheet tim, [User] ssu, UserTypology typ, UserUsers_CompanyCompanies uucc WHERE typ.Oid = ssu.Typology AND tim.CreatedBy = ssu.Oid AND tim.Client IS NULL AND (1 != 1 /*[DateFilter]*/ OR tim.CreatedOn \u003e= @FromDate AND tim.CreatedOn \u003c= @ToDate /*[/DateFilter]*/) and uucc.Users = @CurrentUserId and uucc.Companies = ssu.Company GROUP BY typ.UserTypologyGroup, ssu.Oid, CAST(tim.CreatedOn AS date)) t WHERE utg.Oid = t.TypologyGroupOid AND tuc.TypologyGroupOid = utg.Oid GROUP BY utg.Name\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "6f649e62-be82-4af7-8d64-06b32cf6c0ea",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/FTE - Timesheet Capacity/execute",
      "Configuration": "{\n  \"size\": {\n    \"height\": 370\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"TypologyGroup\"\n  },\n  \"panes\": [{\n                \"name\": \"Timesheet\"\n            }, {\n                \"name\": \"Capacity\"\n            }],\n  \"series\": [\n    {\n      \"pane\":\"Timesheet\",\r\n\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Timesheet\"\n    },\n    {\n      \"pane\":\"Timesheet\",\n      \"type\": \"stagger\",\n      \"valueField\": \"BillableTime\",\n      \"name\": \"Billable\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Timesheet\",\n      \"type\": \"stagger\",\n      \"valueField\": \"NewBusinessTime\",\n      \"name\": \"New Business\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"bar\",\n      \"valueField\": \"Capacity\",\n      \"name\": \"Capacity\"\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"line\",\n      \"valueField\": \"ContractedTime\",\n      \"name\": \"Contracted\",\n      \"point\":{\"size\":6 }\n    },\n    {\n      \"pane\":\"Capacity\",\n      \"type\": \"stagger\",\n      \"valueField\": \"AdministrativeTime\",\n      \"name\": \"Administrative\",\n      \"point\":{\"size\":6 }\n    }\n  ],\n  \"legend\": {\n    \"rowCount\":1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  }\n}",
      "DashboardDefinitionId": "d1e37a64-c2d0-4789-9dac-2c4f7a0fb7c0"
    }
  ],
  "Version": 3,
  "Default": true,
  "Dependencies": {
    "DashboardSdk": "1.0.0",
    "Analytics": "1.0.0",
    "SkillsWorkflow": "1.0.0"
  }
}