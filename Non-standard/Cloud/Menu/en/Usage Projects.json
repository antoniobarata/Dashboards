{
  "DashboardDefinitionRoles": [],
  "Id": "b0391277-5227-4260-89ca-1065f17e420a",
  "Name": "Usage Projects",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"patchModel\":[{\"model\":\"\",\"translation\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "cbe641db-1c38-45de-aaea-1e031f011c63",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 3,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":81,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with cntAssign as\\r\\n(\\r\\n\\tselect convert(date, a.[AssignDate]) as date, \\r\\n\\t\\tcount(1) as countAssign\\r\\n\\tfrom [Assignment] a\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = a.[User]\\r\\n\\tand YEAR(a.AssignDate) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by convert(date, a.AssignDate)\\r\\n),\\r\\ngetDat as\\r\\n(\\r\\n\\tselect ca.[date]\\r\\n\\tfrom [cntAssign] ca\\r\\n),\\r\\nmaintable as\\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(ca.countAssign, 0) as countAssign\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join [cntAssign] ca\\r\\n\\ton ca.date = gd.[date]\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countAssign]) as totalAssign,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverage as\\r\\n(\\r\\n\\tselect (t.[totalAssign]/22) as averageAssign,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalAssign]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countAssign] as countAssign,\\r\\n\\t\\ta.[averageAssign] as averageAssign,\\r\\n\\t\\tt.[totalAssign] as totalAssign\\r\\nfrom [maintable] m\\r\\nfull join [average] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 175\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\"\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countAssign\",\r\n            \"name\": \"Assigns\"\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageAssign\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalAssign\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"autoBreaksEnabled\": true,\r\n            \"axisDivisionFactor\": 15,\r\n            \"breakStyle\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Assignments\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\",\r\n        \"columnCount\": 3\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "986a205e-bc67-4edd-9284-20e660d0f96c",
      "Name": "Top 10 creators",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 8,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 aux.name as Name, count(aux.Name) as count\\r\\nfrom (\\r\\n\\tselect u.[Name] as name\\r\\n\\tfrom [User] u\\r\\n\\tinner join [Deliverable] d\\r\\n\\ton u.[Oid] = d.[CreatedBy] and Year(d.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tunion all\\r\\n\\tselect u.[Name] as name\\r\\n\\tfrom [User] u\\r\\n\\tinner join [Project] p\\r\\n\\ton u.[Oid] = p.[CreatedBy] and Year(p.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tunion all\\r\\n\\tselect u.[Name] as name\\r\\n\\tfrom [User] u\\r\\n\\tinner join [Estimate] es\\r\\n\\ton u.[Oid] = es.[CreatedBy] and Year(es.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                           and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                           and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tunion all\\r\\n\\tselect u.[Name] as name\\r\\n\\tfrom [User] u\\r\\n\\tinner join [Expense] ex\\r\\n\\ton u.[Oid] = ex.[CreatedBy] and Year(ex.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                           and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                           and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tunion all\\r\\n\\tselect u.[Name] as name\\r\\n\\tfrom [User] u\\r\\n\\tinner join [CommercialClient] c\\r\\n\\ton u.[Oid] = c.[CreatedBy] and Year(c.[CreatedOn]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t) aux\\r\\ngroup by aux.Name\\r\\norder by count(aux.Name) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
      "Configuration": "{\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"Name\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"visible\": true,\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": false,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n    \"enabled\": true,\n    \"customizeText\": \"function (e) {return e.argumentText;}\"\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "6d659e37-542c-468b-aebb-277d734b6535",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 3,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":81,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with cntAssign as \\r\\n(\\r\\n\\tselect convert(date, d.AgreedDateUtc) as date, \\r\\n\\t\\tcount(1) as countAssign\\r\\n\\tfrom Deliverable d\\r\\n\\twhere YEAR(d.AgreedDateUtc) = @year and (d.Department = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (d.Company = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (d.JobType = @JobType or @JobType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by convert(date, d.AgreedDateUtc)\\r\\n),\\r\\ngetDat as \\r\\n(\\r\\n\\tselect ca.date\\r\\n\\tfrom cntAssign ca\\r\\n),\\r\\nmaintable as \\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(ca.countAssign, 0) as countAssign\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join cntAssign ca\\r\\n\\ton ca.date = gd.[date]\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countAssign]) as totalAssign,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverages as\\r\\n(\\r\\n\\tselect (t.[totalAssign]/22) as averageAssign,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalAssign]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countAssign] as countJob,\\r\\n\\t\\ta.[averageAssign] as averageJob,\\r\\n\\t\\tt.[totalAssign] as totalJob\\r\\nfrom [maintable] m\\r\\nfull join [averages] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\",\"JobType\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 175\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\"\r\n    },\r\n    \"defaultPane\": \"paneJobs\",\r\n    \"series\": [\r\n        {\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countJob\",\r\n            \"name\": \"Jobs\"\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageJob\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalJob\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"autoBreaksEnabled\": true,\r\n            \"axisDivisionFactor\": 15,\r\n            \"breakStyle\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Jobs\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\",\r\n        \"columnCount\": 3\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "d9cc7d44-f17c-4fcd-8e16-3044d6dbde67",
      "Name": "Top 10 assignees",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 9,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 u.[Name], count(u.[Name]) as count\\r\\nfrom [User] u, [Assignment] a\\r\\nwhere u.[Oid] = a.[User] and Year(a.[AssignDate]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                         and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by u.[Name]\\r\\norder by count(u.[Name]) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
      "Configuration": "{\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"Name\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"position\": \"columns\",\n        \"visible\": true,\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": true,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"position\": \"columns\",\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"tooltip\": {\n    \"enabled\": true,\n    \"customizeText\": \"function (e) {return e.argumentText;}\"\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "ab79f877-248a-4227-91b4-4fa5d89517ea",
      "Name": "Filters",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"form\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#e0e0e0\",\r\n        \"WidgetHeight\": 30,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": 5,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2019,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                        var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);\r\n                        var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100);\r\n                        return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,\r\n                    null,\r\n                    {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All companies\u0027\r\n                        });return res;\r\n                    })\r\n                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                    if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                    SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 200,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                        let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);\r\n                        let skip = loadOptions.skip || 0;\r\n                        let take = loadOptions.take || 20;\r\n                        var param = {name: searchValue,skip: skip,take: take\r\n            };\r\n                        var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027);\r\n                        if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            } else if (companyId != null) {\r\n                            param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027, param,\r\n                {}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All divisions\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                    if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                    SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ \r\n                        let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                        let skip = loadOptions.skip || 0; \r\n                        let take = loadOptions.take || 20;\r\n                        var param = { name: searchValue, skip: skip, take: take\r\n    }; \r\n                        var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                        var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                        if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                            param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n                            param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    } else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                            param[\u0027divisionId\u0027\r\n        ] = divisionId;\r\n    } else if (companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (divisionId == null || divisionId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n\t\t\t                param[\u0027companyId\u0027\r\n        ] = companyId;\r\n    }\r\n                        return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027\r\n        });return res;\r\n    });\r\n}\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                                if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n                                    SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\nSW.setComponentByValue(e.previousValue, e.value, \u0027JobTypeId\u0027);\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"JobTypeId\",\r\n\"label\": {\r\n\"text\": \"JobType\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 200,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"paginate\": true,\r\n\"load\": \"function(loadOptions){ \r\n                        let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);\r\n                        let skip = loadOptions.skip || 0;\r\n                        let take = loadOptions.take || 20;\r\n                        var param = {name: searchValue,skip: skip,take: take\r\n};\r\n                        var departmentId = SW.getValueFromComponent(\u0027DepartmentId\u0027);\r\n                        if (departmentId != null \u0026\u0026 departmentId != \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                param[\u0027departmentId\u0027\r\n] = departmentId;\r\n}\r\n                            return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027jobTypes/lookup\u0027, param,\r\n{}).then(function(res) {res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027,Name: \u0027All job types\u0027\r\n});return res;\r\n})\r\n}\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027jobTypes/lookup/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All job types\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027JobType\u0027, e.value);\r\n} else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027JobType\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027JobTypeId\u0027); }\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "1eb782ff-2319-4ac1-b8a1-7908ed8dc984",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 3,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":81,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with cntComment as\\r\\n(\\r\\n\\tselect convert(Date, p.[CreatedOnUtc]) as date,\\r\\n\\t\\t\\tcount(1) as countComent\\r\\n\\tfrom [Post] p\\r\\n\\tinner join [User] u on u.[Oid] = p.[CreatedBy]\\r\\n\\tleft outer join JobType jt on jt.[Name] = p.DocumentTypeName\\r\\n\\twhere Year(p.[CreatedOnUtc]) = @year and p.DocumentTypeName = \u0027deliverable\u0027\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tand (jt.Oid = @JobType or @JobType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by convert(Date, p.[CreatedOnUtc])\\r\\n),\\r\\ngetDat as\\r\\n(\\r\\n\\tselect cc.[date]\\r\\n\\tfrom [cntComment] cc\\r\\n),\\r\\nmaintable as\\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(cc.countComent, 0) as countComment\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join [cntComment] cc\\r\\n\\ton cc.date = gd.[date]\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countComment]) as totalComment,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverage as\\r\\n(\\r\\n\\tselect (t.[totalComment]/22) as averageComment,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalComment]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countComment] as countComment,\\r\\n\\t\\ta.[averageComment] as averageComment,\\r\\n\\t\\tt.[totalComment] as totalComment\\r\\nfrom [maintable] m\\r\\nfull join [average] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Company\",\"Division\",\"JobType\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 175\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\"\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countComment\",\r\n            \"name\": \"Comments\"\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageComment\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalComment\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"autoBreaksEnabled\": true,\r\n            \"axisDivisionFactor\": 15,\r\n            \"breakStyle\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Comments\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\",\r\n        \"columnCount\": 3\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "9586fac0-4d78-4525-a7be-8b011af3a8e2",
      "Name": "Job types usage",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 10,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetXPosition\":0,\"WidgetYPosition\":36,\"WidgetRows\":10,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\t\\tdj.JobType,\\r\\n\\t\\tcount(1) as Count\\r\\nfrom \\r\\n\\t\\tAnalytics.DatamartJob dj\\r\\nwhere \\r\\n        Year(dj.[Date]) = @year and\\r\\n\\t\\t(dj.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by \\r\\n\\t\\tdj.JobType\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"size\": {\r\n        \"height\": 150\r\n    },\r\n    \"palette\": \"Material\",\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"JobType\",\r\n        \"type\": \"bar\",\r\n        \"ignoreEmptyPoints\": true,\r\n        \"valueField\": \"Count\"\r\n    },\r\n    \"seriesTemplate\": {\r\n        \"nameField\": \"JobType\"\r\n    },\r\n    \"argumentAxis\": {\r\n        \"label\": {\r\n            \"overlappingBehavior\": \"stagger\",\r\n            \"customizeText\": \"function(t){return t.valueText.split(\u0027 - \u0027)[0].substring(0,20)}\",\r\n            \"font\": {\r\n                \"size\": 9,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 500\r\n            }\r\n        }\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "22da5160-7b40-473e-a87e-912532b72a69",
      "Name": "Top 10 posters",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 10 u.[Name] as userName, count(u.[Name]) as count, u.[Oid] as userId, u.[HasImage] as hasImage\\r\\nfrom [User] u, [Post] p\\r\\nwhere p.[CreatedBy] = u.[Oid] and Year(p.[CreatedOnUtc]) = @year and (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                                                and (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by u.[Name], u.[Oid], u.[HasImage]\\r\\norder by count(u.[Name]) desc\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_ExecutionStatus_Per_Client/execute",
      "Configuration": "{\n  \"type\": \"doughnut\",\n  \"series\": [\n    {\n      \"argumentField\": \"userName\",\n      \"valueField\": \"count\",\n      \"label\": {\n        \"visible\": true,\n        \"format\": \"fixedPoint\",\n        \"font\": {\n          \"family\": \"Varela Round\",\n          \"weight\": 800\n        },\n        \"connector\": {\n          \"visible\": true,\n          \"width\": 1\n        },\n        \"customizeText\": \"function(arg) { return arg.percentText; }\"\n      }\n    }\n  ],\n  \"commonSeriesSettings\": {\n   \"smallValuesGrouping\": {\n      \"mode\": \"topN\",\n      \"topCount\": 10,\n      \"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 10,\n      \"family\": \"Varela Round\",\n      \"weight\": 800\n    }\n  },\n  \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "e50faa79-efab-46d3-b7e4-a987e99573c9",
      "Name": "Selected user profile",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 4,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":225,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":true,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tmetricType, userId, sum([Count]) as count\\r\\nfrom\\t(\\r\\nselect\\r\\n\\t\u0027Projects\u0027 as metricType,\\r\\n\\tv.[userId] as userId,\\r\\n\\t(v.total * 1.0) / (v.maxTotal * 1.0) as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tp.[CreatedBy] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom [Project] p\\r\\n\\twhere Year(p.[CreatedOn]) = @year\\r\\n\\tgroup by p.[CreatedBy]\\r\\n) v\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Jobs\u0027 as metricType,\\r\\n\\tz.[userId] as userId,\\r\\n\\t(z.total * 1.0) / (z.maxTotal * 1.0) as [Count]\\r\\nfrom(\\r\\n\\tselect \\r\\n\\t\\td.CreatedBy as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom Deliverable d\\r\\n\\twhere Year(d.AgreedDateUtc) = @year\\r\\n\\t\\t\\tand (d.JobType = @JobType or @JobType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by d.CreatedBy\\r\\n) z\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Comments\u0027 as metricType,\\r\\n\\tx.[userId] as userId,\\r\\n\\t(x.total * 1.0) / (x.maxTotal * 1.0) as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tu.[Oid] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom Post p\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = p.CreatedBy\\r\\n\\twhere Year(p.CreatedOnUtc) = @year and p.DocumentTypeName = \u0027deliverable\u0027\\r\\n\\tgroup by u.[Oid]\\r\\n\\t) x\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\r\\n\\t\u0027Executor\u0027 as metricType,\\r\\n\\tc.[userId] as userId,\\r\\n\\t(c.total * 1.0) / (c.maxTotal * 1.0) as [Count]\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tass.[User] as userId,\\r\\n\\t\\tcount(*) as total,\\r\\n\\t\\tMax(count(*)) over () as maxTotal \\r\\n\\tfrom Assignment ass, \\r\\n\\t\\tAssignmentType ast\\r\\n\\twhere Year(ass.[AssignDate]) = @year and\\r\\n\\t\\tast.Name = \u0027Executor\u0027 \\r\\n\\t\\tand ass.AssignmentType = ast.Oid \\r\\n\\tgroup by ass.[User]\\r\\n\\t) c\\r\\nwhere userId = @userId\\r\\nunion all\\r\\nselect\\t\u0027Executor\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Comments\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Jobs\u0027 as metricType, @userId as userId, 0 as count\\r\\nunion all\\r\\nselect \u0027Projects\u0027 as metricType, @userId as userId, 0 as count\\r\\n)t\\r\\ngroup by metricType, userId\\r\\norder by metricType desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"userId\",\"JobType\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 250\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"metricType\",\r\n        \"type\": \"bar\"\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"type\": \"bar\",\r\n            \"valueField\": \"count\",\r\n            \"name\": \"Type\"\r\n        }\r\n    ],\r\n    \"tooltip\": {\r\n        \"format\": \"#%\"\r\n    },\r\n    \"valueAxis\": [\r\n        {\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Percentage\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"label\": {\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        }\r\n    },\r\n    \"customizePoint\": \"function(pointInfo) {\r\n        if(pointInfo.argument === \u0027Executor\u0027) {\r\n            return { color: \u0027#97c95c\u0027, hoverStyle: { color: \u0027#97c95c\u0027\r\n            }\r\n        }\r\n    } else if(pointInfo.argument === \u0027Comments\u0027) {\r\n            return { color: \u0027#f5564a\u0027, hoverStyle: { color: \u0027#f5564a\u0027\r\n            }\r\n        }\r\n    } else if(pointInfo.argument === \u0027Jobs\u0027) {\r\n            return { color: \u0027#1db2f5\u0027, hoverStyle: { color: \u0027#1db2f5\u0027\r\n            }\r\n        }\r\n    } else if(pointInfo.argument === \u0027Projects\u0027) {\r\n                return { color: \u0027#ffc720\u0027, hoverStyle: { color: \u0027#ffc720\u0027\r\n            }\r\n        }\r\n    }\r\n}\",\r\n    \"legend\": {\r\n    \"visible\": false,\r\n    \"verticalAlignment\": \"bottom\",\r\n    \"horizontalAlignment\": \"center\"\r\n}\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "73fb3091-66a6-46b6-aa35-b0b430dfd5bd",
      "Name": "Department stats",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 8,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":225,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with projects as \\r\\n(\\r\\n\\tselect\\tu.[Oid] as idU,\\r\\n\\t\\t\\tcount(1) as countProj\\r\\n\\tfrom\\t[Project] p\\r\\n\\tinner join [User] u\\r\\n\\ton p.[CreatedBy] = u.[Oid]\\r\\n\\twhere Year(p.[CreatedOn]) = @year\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\njobs as\\r\\n(\\r\\n\\tselect\\tu.[Oid] as idU,\\r\\n\\t\\t\\tcount(1) as countJobs\\r\\n\\tfrom\\tDeliverable d\\r\\n\\tinner join [User] u\\r\\n\\ton d.CreatedBy = u.[Oid]\\r\\n\\twhere Year(d.AgreedDateUtc) = @year \\r\\n\\t\\t\\tand (d.JobType = @JobType or @JobType = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\ncomments as\\r\\n(\\r\\n\\tselect u.[Oid] as idU,\\r\\n\\t\\tcount(1) as countComments\\r\\n\\tfrom [Post] p\\r\\n\\tinner join [User] u\\r\\n\\ton u.[Oid] = p.CreatedBy\\r\\n\\twhere Year(p.CreatedOnUtc) = @year and p.DocumentTypeName = \u0027deliverable\u0027\\r\\n\\tgroup by u.[Oid], u.[Name]\\r\\n),\\r\\nassignments as\\r\\n(\\r\\n\\tselect u.[Oid] as idU,\\r\\n\\t\\tcount(1) as countAssignment\\r\\n    from Assignment ass, \\r\\n\\t\\tAssignmentType ast, \\r\\n\\t\\t[User] u, \\r\\n\\t\\tSecuritySystemUser ssu \\r\\n    where Year(ass.[AssignDate]) = @year and\\r\\n\\t\\tast.Name = \u0027Executor\u0027 \\r\\n\\t\\tand ass.AssignmentType = ast.Oid \\r\\n\\t\\tand ass.[User] = u.Oid and\\r\\n\\t\\tu.Oid = ssu.Oid\\r\\ngroup by \\r\\n\\t\\tu.[Oid]\\r\\n)\\r\\nselect c.[Name] as companyName, c.[Oid] as companyId, c.[HasImage] as cHasImage, di.[Name] as division, de.[Name] as department, u.[Name] as userName, u.[Oid] as userId, u.[HasImage] as uHasImage, utg.[Name] as typology,\\r\\n\\t\\tIsNull(p.countProj,0) as Projects, \\r\\n\\t\\tIsNull(j.countJobs,0) as Jobs, \\r\\n\\t\\tIsNull(co.countComments,0) as Comments,\\r\\n\\t\\tIsNull(a.countAssignment,0) as Assignments\\r\\nfrom [Company] c, [Division] di, [Department] de, [UserTypologyGroup] utg, [UserTypology] t, [User] u\\r\\nfull join projects p \\r\\non (p.idU = u.[Oid])\\r\\nfull join jobs j\\r\\non (j.idU = u.[Oid])\\r\\nfull join comments co\\r\\non (co.[idU] = u.[Oid])\\r\\nfull join assignments a\\r\\non (a.idU = u.[Oid])\\r\\nwhere u.[Company] = c.[Oid] and u.[Division] = di.[Oid] and u.[Department] = de.[Oid] and u.[Typology] = t.[Oid] and t.UserTypologyGroup = utg.Oid\\r\\nand (u.[Department] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nand (u.[Division] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\nand (u.[Company] = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Department\",\"Division\",\"Company\",\"JobType\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"onContentReady\": \"function(e){                if (e.component.instance().getDataSource() != null \u0026\u0026 e.component.instance().getDataSource().items().length \u003e 0){                        var teste =  e.component.instance().getDataSource().items()[0].items[0].userId;                        SkillsWorkflow.setDashboardFilter(\u0027userId\u0027, teste);                }        }\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": \"300\",\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": \"true\"\r\n    },\r\n    \"export\": {\r\n        \"enabled\": true\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"onRowClick\": \"function(e){ if(e.data.userId != null) { SkillsWorkflow.setDashboardFilter(\u0027userId\u0027, e.data.userId); } }\",\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": \"true\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"department\",\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"userId\",\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) {SK.showImage(e, \u0027user\u0027, \u0027small\u0027,i.data[\u0027uHasImage\u0027], i.data[\u0027userName\u0027], i.data[\u0027userId\u0027])}\",\r\n            \"width\": 30\r\n        },\r\n        {\r\n            \"dataField\": \"userName\",\r\n            \"name\": \"Name\",\r\n            \"caption\": \"Name\"\r\n        },\r\n        {\r\n            \"dataField\": \"companyId\",\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SK.showImage(e, \u0027company\u0027, \u0027small\u0027, i.data[\u0027cHasImage\u0027], i.data[\u0027companyName\u0027], i.data[\u0027companyId\u0027])}\",\r\n            \"width\": 30\r\n        },\r\n        {\r\n            \"dataField\": \"companyName\",\r\n            \"name\": \"Company\",\r\n            \"caption\": \"Company\"\r\n        },\r\n        {\r\n            \"dataField\": \"division\",\r\n            \"name\": \"Division\",\r\n            \"caption\": \"Division\"\r\n        },\r\n        {\r\n            \"dataField\": \"typology\",\r\n            \"name\": \"Typology\",\r\n            \"caption\": \"Typology\"\r\n        },\r\n        {\r\n            \"dataField\": \"Projects\",\r\n            \"name\": \"Projects\",\r\n            \"caption\": \"Projects\",\r\n            \"alignment\": \"center\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\",\r\n            \"headerCellTemplate\": \"function(e, i) {                var final = SW.setAttribute(e.parentElement, \u0027Projects\u0027, \u0027title\u0027, \u0027Number of projects created by\u0027, false);                }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Jobs\",\r\n            \"name\": \"Jobs\",\r\n            \"caption\": \"Jobs\",\r\n            \"alignment\": \"center\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\",\r\n            \"headerCellTemplate\": \"function(e, i) {                var final = SW.setAttribute(e.parentElement, \u0027Jobs\u0027, \u0027title\u0027, \u0027Number of jobs created by\u0027, false);                }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Assignments\",\r\n            \"name\": \"Assignments\",\r\n            \"caption\": \"Executor\",\r\n            \"alignment\": \"center\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\",\r\n            \"headerCellTemplate\": \"function(e, i) {                var final = SW.setAttribute(e.parentElement, \u0027Executor\u0027, \u0027title\u0027, \u0027Number of assignments as executor\u0027, false);                }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Comments\",\r\n            \"name\": \"Comments\",\r\n            \"caption\": \"Comments\",\r\n            \"alignment\": \"center\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, i.value, i.value \u003c= 0, i.value \u003e 0 \u0026\u0026 i.value \u003c= 50, i.value \u003e 50); }\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"userName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Projects\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Jobs\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Comments\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            },\r\n            {\r\n                \"column\": \"Executor\",\r\n                \"summaryType\": \"sum\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": \"#,##0\"\r\n            }\r\n        ]\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    },
    {
      "Id": "f49cc445-6d8b-4ccb-b89d-cffcbf4a0d10",
      "Name": "Activity over the year",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 3,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":75,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with cntProj as \\r\\n(\\r\\n\\tselect Convert(Date, p.[CreatedOn]) as date, \\r\\n\\t\\t\\tcount(1) as countProj\\r\\n\\tfrom [Project] p\\r\\n\\twhere Year(p.[CreatedOn]) = @year and (p.Company = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\tgroup by Convert(Date, p.[CreatedOn])\\r\\n),\\r\\ngetDat as \\r\\n(\\r\\n\\tselect cp.date\\r\\n\\tfrom cntProj cp\\r\\n),\\r\\nmaintable as \\r\\n(\\r\\n\\tselect gd.[date] as date,\\r\\n\\t\\tIsNull(cp.countProj, 0) as countProj\\r\\n\\tfrom [getDat] gd\\r\\n\\tfull join cntProj cp\\r\\n\\ton cp.date = gd.[date]\\r\\n),\\r\\ntotal as\\r\\n(\\r\\n\\tselect sum(m.[countProj]) as totalProj,\\r\\n\\t\\t\\tMonth(m.[date]) as month\\r\\n\\tfrom [maintable] m\\r\\n\\tgroup by Month(m.[date])\\r\\n),\\r\\naverages as\\r\\n(\\r\\n\\tselect (t.[totalProj]/22) as averageProj,\\r\\n\\t\\t\\tt.[month] as month\\r\\n\\tfrom [total] t\\r\\n\\tgroup by t.[month], (t.[totalProj]/22)\\r\\n)\\r\\nselect m.[date] as date, m.[countProj] as countProj,\\r\\n\\t\\ta.[averageProj] as averageProj, \\r\\n\\t\\tt.[totalProj] as totalProj\\r\\nfrom [maintable] m\\r\\nfull join [averages] a\\r\\non Month(m.[date]) = a.[month]\\r\\nfull join [total] t\\r\\non Month(m.[date]) = t.[month]\\r\\norder by m.[date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"year\",\"Company\"]}}]",
      "DashboardComponentType": {
        "Id": "87b5ea62-53a3-478d-84d7-989716aee552",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"palette\": \"Material\",\r\n    \"size\": {\r\n        \"height\": 175\r\n    },\r\n    \"commonSeriesSettings\": {\r\n        \"argumentField\": \"date\",\r\n        \"type\": \"splinearea\"\r\n    },\r\n    \"defaultPane\": \"paneJobs\",\r\n    \"series\": [\r\n        {\r\n            \"type\": \"splinearea\",\r\n            \"valueField\": \"countProj\",\r\n            \"name\": \"Projects\"\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"averageProj\",\r\n            \"name\": \"Average\",\r\n            \"width\": 1.5\r\n        },\r\n        {\r\n            \"type\": \"spline\",\r\n            \"valueField\": \"totalProj\",\r\n            \"name\": \"Total\",\r\n            \"width\": 1.5\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"autoBreaksEnabled\": true,\r\n            \"axisDivisionFactor\": 15,\r\n            \"breakStyle\": {\r\n                \"color\": \"#ababab\",\r\n                \"line\": \"straight\",\r\n                \"width\": 2\r\n            },\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Projects\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"argumentAxis\": {\r\n        \"argumentType\": \"datetime\",\r\n        \"label\": {\r\n            \"format\": \"function (value) {return value.getMonth();}\",\r\n            \"font\": {\r\n                \"size\": 10,\r\n                \"family\": \"Varela Round\",\r\n                \"weight\": 800\r\n            }\r\n        },\r\n        \"tickInterval\": {\r\n            \"months\": 1\r\n        },\r\n        \"grid\": {\r\n            \"visible\": false\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"verticalAlignment\": \"bottom\",\r\n        \"horizontalAlignment\": \"center\",\r\n        \"columnCount\": 3\r\n    }\r\n}",
      "DashboardDefinitionId": "b0391277-5227-4260-89ca-1065f17e420a"
    }
  ],
  "Version": 9,
  "Default": false
}
