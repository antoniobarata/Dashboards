{
    "DashboardDefinitionRoles":[],
    "Id":"8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9",
    "Name":"Users Count",
    "Active":true,
    "Location":0,
    "DocumentId":"00000000-0000-0000-0000-000000000000",
    "DocumentName":"",
    "DocumentTypeName":null,
    "DocumentsConfiguration":"{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
    "Templates":[
 
    ],
    "DashboardDefinitionComponents":[
       {
          "Id":"ea4b178d-6e0d-4e51-a382-0e8633beec23",
          "Name":"Total Users per Tenant",
          "Active":true,
          "UseQuery":false,
          "Query":"",
          "Size":8,
          "Order":2,
          "Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#ffffff\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":10,\"WidgetRows\":14,\"WidgetColumns\":14,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  u.[Name] as UserName, \\n        c.[Name] as Company\\nfrom    [User] u, \\n        Company c,\\n        SecuritySystemUser ssu\\nwhere   u.[Company] = c.[Oid] and\\n        u.Oid = ssu.Oid and\\n        ssu.UserName not in ('ines.sousa', 'support', 'suporte', 'internal process', 'skilio') and\\n        ssu.[isActive] = 1\\nOrder by  u.[Name] Asc\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Companies123\"]}}]",
          "DashboardComponentType":{
             "Id":"84ee5399-f21a-42eb-9c52-810ca7ac1e22",
             "Name":"Generic Dashboard",
             "ComponentTypeNumber":42
          },
          "AnalyticsApiUrl":"",
          "Configuration":"{\"disabled\":false,\"dataSource\":{\"load\":\"function getDataSource(loadOptions) {\\n    return SW.executeAPI('GET', 'integration-workflows/ae9f0053-9c15-49ad-bc9b-bc58af138d1d/execute')\\n        .then(jsonUserCount => {\\n            var data = GroupByTenant(jsonUserCount.data);\\n            AddGroup(data);\\n            return data\\n        });\\n\\n    function AddGroup(data) {\\n        var tenantDictionary = {\\n            'mb': 'IPG',\\n            'fcb': 'IPG',\\n            'mwg': 'IPG',\\n            'mullenlowemishra': 'IPG',\\n            'webershandwick': 'IPG',\\n            'dyu': 'IPG',\\n            'wmwg': 'IPG',\\n            'ml': 'IPG',\\n            'wunderman': 'WPP',\\n            'vml': 'WPP',\\n            'pace': 'WPP',\\n            'fbiz': 'WPP',\\n            'grey': 'WPP',\\n            'young': 'WPP',\\n            'bcw': 'WPP',\\n            'ogilvy': 'WPP',\\n            'pmweb': 'WPP',\\n            'sapientag2': 'Publicis',\\n            'publicis': 'Publicis',\\n            'dpz': 'Publicis',\\n            'talent': 'Publicis',\\n            'prodigius': 'Publicis',\\n            'gsdm': 'Ominicom',\\n            'gsp': 'Ominicom',\\n            'bbdo': 'Ominicom',\\n            'grupohavas': 'Havas',\\n            'bigfish': 'Independent',\\n            'celfinet': 'Independent',\\n            'eurom': 'Independent',\\n            'fcrlaw': 'Independent',\\n            'grupozwela': 'Independent',\\n            'hood': 'Independent',\\n            'plug': 'Independent',\\n            'rtand': 'Independent',\\n            'vitrio': 'Independent',\\n            'blendevents': 'Independent'\\n        };\\n\\n        data.forEach(row => {\\n            var group = tenantDictionary[row.Tenant.split('-')[0]];\\n            row.Group = group;\\n        });\\n    };\\n\\n    function GroupByTenant(data) {\\n        var objectResult = {};\\n        data.forEach(row => {\\n            var tenant = row.tenant;\\n            if (!objectResult[tenant]) {\\n                objectResult[tenant] = {\\n                    Tenant: tenant,\\n                    Count: row.count\\n                };\\n            } else {\\n                var count = objectResult[tenant].Count + row.count;\\n                objectResult[tenant] = {\\n                    ...objectResult[tenant],\\n                    Count: count\\n                };\\n            }\\n        });\\n        var arrayResult = [];\\n        Object.values(objectResult).forEach((value) => {\\n            if (value.Tenant.split('-')[0] != 'demo' && value.Tenant.split('-')[0] != 'playground') {\\n                arrayResult.push(value)\\n            }\\n        });\\n        return arrayResult;\\n    }\\n}\"},\"selection\":{\"mode\":\"single\"},\"allowFiltering\":false,\"searchPanel\":{\"visible\":true},\"scrolling\":{\"mode\":\"virtual\"},\"columnMinWidth\":\"50\",\"stateStoring\":{\"enabled\":false},\"grouping1\":{\"autoExpandAll\":true},\"onToolbarPreparing1\":\"function(e) {   SW.saveComponent(e.component, 'tenantsGrid');}\",\"height\":\"350\",\"columns\":[{\"dataField\":\"Tenant\",\"dataType\":\"string\"},{\"dataField\":\"Group\",\"groupIndex\":0,\"groupCellTemplate\":\"function(e, i) { h=document.createElement('span'); var ht=' ' + i.text + ' ('+i.data.aggregates[0]+')'; h.innerHTML = ht;e.append(h);}\"},{\"dataField\":\"Count\",\"caption\":\"Count\",\"dataType\":\"number\",\"alignment\":\"right\",\"width\":150}],\"summary\":{\"groupItems\":[{\"column\":\"holding\",\"summaryType\":\"count\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true}]},\"onContentReady\":\"function saveTenant(e) {\\n    SW.saveComponent(e.component, 'Tenant');\\n}\",\"onRowClick\":\"function saveValue(e) {\\n    \\n    if (e.values[1] != null) { \\n        var usersGrid = SW.getComponent('usersGrid');\\n        SW.saveComponent(e.values[1], 'TenantName');\\n        if (usersGrid)\\n            usersGrid.refresh();\\n        var grid2 = SW.getComponent('grid2');\\n        if (grid2)\\n            grid2.refresh();\\n    }\\n}\",\"onDrawn\":\"function(e) {        var tenantDictionary = {             'mb': 'IPG'    }   }\",\"masterDetail\":{\"template\":\"function template(detailElement, detailInfo){\\n    \\n}\"}}",
          "DashboardDefinitionId":"8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
       },
       {
          "Id":"8ca3ed54-840c-4c38-94c2-a5d77b8ec84a",
          "Name":"Region",
          "Active":true,
          "UseQuery":false,
          "Query":"",
          "Size":12,
          "Order":0,
          "Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":13,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":20,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"select 1;\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
          "DashboardComponentType":{
             "Id":"84ee5399-f21a-42eb-9c52-810ca7ac1e22",
             "Name":"Generic Dashboard",
             "ComponentTypeNumber":42
          },
          "AnalyticsApiUrl":"",
          "Configuration":"{\n    \"dataSource\": {\n        \"load\": \"function getDataSource(loadOptions) {\n  \n      return SW.executeAPI('GET', 'integration-workflows/ae9f0053-9c15-49ad-bc9b-bc58af138d1d/execute')\n            .then(jsonUserCount => {\n                return groupByR = GroupByRegion(jsonUserCount.data);\n        });\n\n    function GroupByRegion(data) {\n        var objectResult = {};\n        data.forEach(row => {\n            var region = row.region.toUpperCase();\n            if (!objectResult[region\n                ]) {\n                objectResult[region\n                    ] = {\n                        region: region,\n                        Count: row.count\n                    };\n                } else {\n                var count = objectResult[region\n                    ].Count + row.count;\n                objectResult[region\n                    ] = {\n                        ...objectResult[region\n                        ],\n                        Count: count\n                    };\n                }\n            });\n        var arrayResult = [];\n        Object.values(objectResult).forEach((value) => {\n\n            arrayResult.push(value)\n            });\n        return arrayResult;\n        }\n    }\"\n},\n\"commonSeriesSettings\": {\n    \"argumentField\": \"region\",\n    \"ignoreEmptyPoints\": false,\n    \"type\": \"Bar\",\n    \"label\": {\n        \"visible\": true\n    }\n},\n\"series\": [\n    {\n        \"label\": {\n            \"format\": \"#,##0\"\n        },\n        \"valueField\": \"Count\",\n        \"name\": \"Count\"\n    }\n],\n\"tooltip\": {\n    \"enabled\": false\n},\n\"size\": {\n    \"height\": 200\n},\n\"padding\": {\n    \"top\": 80\n}\n}",
          "DashboardDefinitionId":"8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
       },
       {
          "Id":"2cc527b4-394a-41c3-9ba9-b6d7bce4b623",
          "Name":"Users per Tenants",
          "Active":true,
          "UseQuery":false,
          "Query":"",
          "Size":8,
          "Order":2,
          "Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#ffffff\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":14,\"WidgetYPosition\":10,\"WidgetRows\":16,\"WidgetColumns\":33,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  u.[Name] as UserName, \\n        c.[Name] as Company\\nfrom    [User] u, \\n        Company c,\\n        SecuritySystemUser ssu\\nwhere   u.[Company] = c.[Oid] and\\n        u.Oid = ssu.Oid and\\n        ssu.UserName not in ('ines.sousa', 'support', 'suporte', 'internal process', 'skilio') and\\n        ssu.[isActive] = 1\\nOrder by  u.[Name] Asc\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Companies123\"]}}]",
          "DashboardComponentType":{
             "Id":"84ee5399-f21a-42eb-9c52-810ca7ac1e22",
             "Name":"Generic Dashboard",
             "ComponentTypeNumber":42
          },
          "AnalyticsApiUrl":"",
          "Configuration":"{\"disabled\":false,\"dataSource\":{\"load\":\"function getDataSource(loadOptions) {\\n    var tenant = SW.getComponent('TenantName');\\n    if (!tenant) return;\\n    \\n    return SW.executeAPI('GET','integration-workflows/0ccc15a8-a1da-4e15-9e35-86a439a87c7d/execute?tenant='+tenant)\\n    .then(result => {console.log(result); return result})\\n}\"},\"selection\":{\"mode\":\"single\"},\"allowFiltering\":false,\"searchPanel\":{\"visible\":true},\"scrolling\":{\"mode\":\"virtual\"},\"columnMinWidth\":\"50\",\"stateStoring\":{\"enabled\":false},\"onToolbarPreparing\":\"function(e) {   SW.saveComponent(e.component, 'usersGrid');}\",\"height\":\"400\",\"columns\":[{\"cellTemplate\":\"function(e, i) {                SW.showImage(e, 'company', 'small', i.data.HasImage, i.data.companyName, i.data.companyId);            }\",\"width\":38,\"visibleIndex\":1},{\"dataField\":\"companyName\",\"visibleIndex\":2},{\"dataField\":\"departmentName\",\"visibleIndex\":3},{\"dataField\":\"typologyGroupName\",\"visibleIndex\":4},{\"dataField\":\"typologyName\",\"visibleIndex\":5},{\"dataField\":\"mail\",\"visibleIndex\":6},{\"dataField\":\"userName\",\"caption\":\"User Name\",\"visibleIndex\":7}],\"summary\":{\"totalItems\":[{\"showInColumn\":\"User Name\",\"displayFormat\":\"Total: {0}\",\"summaryType\":\"count\"}]},\"masterDetail\":{\"template\":\"function template(detailElement, detailInfo){\\n    \\n}\"}}",
          "DashboardDefinitionId":"8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
       },
       {
          "Id":"b8b7b3b6-e6d8-4539-ab09-d80f39747fb2",
          "Name":"Groups",
          "Active":true,
          "UseQuery":false,
          "Query":"",
          "Size":12,
          "Order":0,
          "Parameters":"[{\"WidgetSubTitle\":\"Holdings\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":33,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":15,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
          "DashboardComponentType":{
             "Id":"84ee5399-f21a-42eb-9c52-810ca7ac1e22",
             "Name":"Generic Dashboard",
             "ComponentTypeNumber":42
          },
          "AnalyticsApiUrl":"",
          "Configuration":"{\n    \"dataSource\": {\n        \"load\": \"function getDataSource(loadOptions) {\n\n    return SW.executeAPI('GET', 'integration-workflows/ae9f0053-9c15-49ad-bc9b-bc58af138d1d/execute')\n        .then(jsonUserCount => {return jsonUserCount\n        })\n    }\"\n    },\n    \"palette\": \"Material\",\n    \"type\": \"doughnut\",\n    \"series\": [\n        {\n            \"argumentField\": \"Holding\",\n            \"valueField\": \"Count\",\n            \"label\": {\n                \"position\": \"columns\",\n                \"visible\": true,\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"weight\": 600\n                },\n                \"customizeText\": \"function(arg) { return arg.argumentText + ' ' + arg.percentText; }\"\n            }\n        }\n    ],\n    \"startAngle\": 50,\n    \"tooltip\": {\n        \"enabled\": true\n    },\n    \"commonSeriesSettings\": {\n        \"label\": {\n            \"visible\": true,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"position\": \"columns\",\n                \"visible\": true,\n                \"width\": 0.5\n            },\n            \"font\": {\n                \"size\": 10\n            }\n        }\n    },\n    \"size\": {\n        \"height\": 470\n    },\n    \"margin\": {\n        \"bottom\": 210\n    },\n    \"resolveLabelOverlapping\": \"shift\",\n    \"onDrawn\": \"function(e) {\n        var tenantDictionary = { \n            'mb': 'IPG',\n            'fcb': 'IPG',\n            'mwg': 'IPG',\n            'mullenlowemishra': 'IPG',\n            'webershandwick': 'IPG',\n            'dyu': 'IPG',\n            'wmwg':'IPG',\n            'ml':'IPG',\n           'wunderman':'WPP',\n            'vml':'WPP',\n            'pace':'WPP',\n            'fbiz':'WPP',\n            'grey':'WPP',\n            'young':'WPP',\n            'bcw':'WPP',\n            'ogilvy': 'WPP',\n            'pmweb': 'WPP',\n           'sapientag2':'Publicis',\n           'publicis': 'Publicis',\n           'dpz':'Publicis',\n           'talent':'Publicis',\n           'prodigius': 'Publicis',\n           'gsdm':'Ominicom',\n            'gsp':'Ominicom',\n            'bbdo': 'Ominicom', \n            'grupohavas': 'Havas',\n           'bigfish':'Independent',\n            'celfinet':'Independent',\n            'eurom':'Independent',\n            'fcrlaw':'Independent',\n            'grupozwela':'Independent',\n            'hood':'Independent',\n            'plug':'Independent',\n            'rtand':'Independent',\n            'vitrio':'Independent'\n    };\n\n\n    var queryResult = e.component.getDataSource(); \n        if(queryResult._items.length > 0) {\n            if(!queryResult._items[\n            0\n        ].tenant) return;\n            var objectResult = {};\n            queryResult._items.forEach( row => { \n                    var holding = tenantDictionary[row.tenant.split('-')[\n                    0\n                ]\n            ];\n                    if(holding) {\n                        if(!objectResult[holding\n                ]) {\n                            objectResult[holding\n                    ] = {\n                                Holding: holding,\n                                Count: row.count\n                    };\n                } else {\n                            var count = objectResult[holding\n                    ].Count + row.count;\n                            objectResult[holding\n                    ] = {\n                                ...objectResult[holding\n                        ],\n                                Count: count\n                    };\n                }\n            }\n        });\n            var arrayResult = [];\n            Object.values(objectResult).forEach((value) => arrayResult.push(value));\n            e.component.instance().beginUpdate();\n            e.component.option('dataSource', arrayResult);\n            e.component.instance().endUpdate();\n    }\n}\"\n}",
          "DashboardDefinitionId":"d8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
       },
       {
          "Id":"61b9072f-8bb7-4fd5-a8bf-df0e19e7fb8f",
          "Name":"",
          "Active":true,
          "UseQuery":false,
          "Query":"",
          "Size":12,
          "Order":0,
          "Parameters":"[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":13,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
          "DashboardComponentType":{
             "Id":"84ee5399-f21a-42eb-9c52-810ca7ac1e22",
             "Name":"Generic Dashboard",
             "ComponentTypeNumber":42
          },
          "AnalyticsApiUrl":"",
          "Configuration":"{\"size\":\"50px\",\"items\":[{\"format\":\"currency\",\"dataField\":\"\",\"template\":\"function(data, itemElement){  SW.executeAPI('GET', 'integration-workflows/ae9f0053-9c15-49ad-bc9b-bc58af138d1d/execute').then(jsonUserCount => {    var totalUsers = 0;        jsonUserCount.data.forEach(row => { totalUsers = totalUsers + row.count});                                 var titleUsers = SW.setAttribute (itemElement, ' ', 'style', 'font-size: 17px; margin-top: 17px' );             titleUsers.textContent = 'Total Users';                  var totalUsersElement = SW.setAttribute (itemElement, ' ', 'style', ' font-size: 80px; text-align: center; padding-top: 80px; color: #1aa3ff' );                                                                               totalUsersElement.textContent = totalUsers;                           });                               }\"}]}",
          "DashboardDefinitionId":"8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
       }
    ],
    "QueryText":"",
    "UseStore":false,
    "StoreEntity":null,
    "Version":2,
    "Default":false
 }
