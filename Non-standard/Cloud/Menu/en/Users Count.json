{
  "DashboardDefinitionRoles": [],
  "Id": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9",
  "Name": "Users Count",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "17e1426a-15c9-4e1b-b6f3-063316b64764",
      "Name": "Total Users per Tenant",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#ffffff\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":10,\"WidgetRows\":14,\"WidgetColumns\":14,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  u.[Name] as UserName, \\n        c.[Name] as Company\\nfrom    [User] u, \\n        Company c,\\n        SecuritySystemUser ssu\\nwhere   u.[Company] = c.[Oid] and\\n        u.Oid = ssu.Oid and\\n        ssu.UserName not in ('ines.sousa', 'support', 'suporte', 'internal process', 'skilio') and\\n        ssu.[isActive] = 1\\nOrder by  u.[Name] Asc\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Companies123\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"disabled\":false,\"dataSource\":{\"load\":\"function getDataSource(loadOptions) {\\n    async function GetTenant() {\\n        var auth = SW.getComponent('auth');\\n        if (!auth) {\\n            const formData = new FormData();\\n            formData.append('grant_type', 'client_credentials');\\n            formData.append('client_id', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n            formData.append('resource', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n            formData.append('client_secret', '2Si5cdC102lH3+ZvAtVRpeKbpC2kM+CcGYVVAKSY7Ps=');\\n            let response = await fetch(\\\"https://cors-anywhere.herokuapp.com/https://login.microsoftonline.com/nextwaycapital.onmicrosoft.com/oauth2/token?api-version=1.6\\\", {\\n                method: 'POST',\\n                body: formData\\n            });\\n            if (response.ok) {\\n                let json = await response.json();\\n                var auth = 'Bearer ' + json.access_token;\\n                SW.saveComponent(auth, 'auth');\\n            }\\n        }\\n        if (auth) {\\n            var responseUserCount = await fetch(\\\"https://devops.skillsworkflow.com/api/metrics/users\\\", {\\n                method: 'GET',\\n                headers: {\\n                    'Accept': 'application/json',\\n                    'Authorization': auth\\n                }\\n            });\\n            let jsonUserCount = await responseUserCount.json();\\n            var data = GroupByTenant(jsonUserCount.data);\\n            AddGroup (data);\\n            return data;\\n        }\\n        return {};\\n    }\\n    return GetTenant();\\n\\n    function AddGroup (data){\\n        var tenantDictionary = {\\n            'mb': 'IPG',\\n            'fcb': 'IPG',\\n            'mwg': 'IPG',\\n            'mullenlowemishra': 'IPG',\\n            'webershandwick': 'IPG',\\n            'dyu': 'IPG',\\n            'wmwg': 'IPG',\\n            'ml': 'IPG',\\n            'wunderman': 'WPP',\\n            'vml': 'WPP',\\n            'pace': 'WPP',\\n            'fbiz': 'WPP',\\n            'grey': 'WPP',\\n            'young': 'WPP',\\n            'bcw': 'WPP',\\n            'ogilvy': 'WPP',\\n            'pmweb': 'WPP',\\n            'sapientag2': 'Publicis',\\n            'publicis': 'Publicis',\\n            'dpz': 'Publicis',\\n            'talent': 'Publicis',\\n            'prodigius': 'Publicis',\\n            'gsdm': 'Ominicom',\\n            'gsp': 'Ominicom',\\n            'bbdo': 'Ominicom',\\n            'grupohavas': 'Havas',\\n            'bigfish': 'Independent',\\n            'celfinet': 'Independent',\\n            'eurom': 'Independent',\\n            'fcrlaw': 'Independent',\\n            'grupozwela': 'Independent',\\n            'hood': 'Independent',\\n            'plug': 'Independent',\\n            'rtand': 'Independent',\\n            'vitrio': 'Independent',\\n            'blendevents': 'Independent'\\n        };\\n\\n        data.forEach(row => {\\n            var group = tenantDictionary[row.Tenant.split('-')[0]];\\n            row.Group = group;\\n        });\\n    };\\n\\n    function GroupByTenant (data) {\\n        var objectResult = {};\\n        data.forEach( row => {\\n            var tenant = row.tenant;\\n            if(!objectResult[tenant]) {\\n                objectResult[tenant] = {\\n                    Tenant: tenant,\\n                    Count: row.count\\n                };\\n            } else {\\n                var count = objectResult[tenant].Count + row.count;\\n                objectResult[tenant] = {\\n                        ...objectResult[tenant],\\n                        Count: count\\n                    };\\n            }\\n        });\\n        var arrayResult = [];\\n        Object.values(objectResult).forEach((value) => {\\n            if(value.Tenant.split('-')[0] != 'demo' && value.Tenant.split('-')[0] != 'playground') {\\n                arrayResult.push(value)\\n            }\\n        });\\n        return arrayResult;\\n    }\\n}\"},\"selection\":{\"mode\":\"single\"},\"allowFiltering\":false,\"searchPanel\":{\"visible\":true},\"scrolling\":{\"mode\":\"virtual\"},\"columnMinWidth\":\"50\",\"stateStoring\":{\"enabled\":false},\"grouping1\":{\"autoExpandAll\":true},\"onToolbarPreparing1\":\"function(e) {   console.log(\\\"gravei usersGrid\\\");    SW.saveComponent(e.component, 'tenantsGrid');}\",\"height\":\"350\",\"columns\":[{\"dataField\":\"Tenant\",\"dataType\":\"string\"},{\"dataField\":\"Group\",\"groupIndex\":0,\"groupCellTemplate\":\"function(e, i) { h=document.createElement('span'); var ht=' ' + i.text + ' ('+i.data.aggregates[0]+')'; h.innerHTML = ht;e.append(h);}\"},{\"dataField\":\"Count\",\"caption\":\"Count\",\"dataType\":\"number\",\"alignment\":\"right\",\"width\":150}],\"summary\":{\"groupItems\":[{\"column\":\"holding\",\"summaryType\":\"count\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true}]},\"onContentReady\":\"function saveTenant(e) {\\n    SW.saveComponent(e.component, 'Tenant');\\n}\",\"onRowClick\":\"function saveValue(e) {\\n    \\n    if (e.values[1] != null) { \\n        var usersGrid = SW.getComponent('usersGrid');\\n        SW.saveComponent(e.values[1], 'TenantName');\\n        if (usersGrid)\\n            usersGrid.refresh();\\n        var grid2 = SW.getComponent('grid2');\\n        if (grid2)\\n            grid2.refresh();\\n    }\\n}\",\"onDrawn\":\"function(e) {        var tenantDictionary = {             'mb': 'IPG'    }   }\",\"masterDetail\":{\"template\":\"function template(detailElement, detailInfo){\\n    \\n}\"}}",
      "DashboardDefinitionId": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
    },
    {
      "Id": "d58cd49d-fa9a-47f2-9056-0649c55a78d8",
      "Name": "Tenants per Users",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#ffffff\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":14,\"WidgetYPosition\":10,\"WidgetRows\":16,\"WidgetColumns\":33,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  u.[Name] as UserName, \\n        c.[Name] as Company\\nfrom    [User] u, \\n        Company c,\\n        SecuritySystemUser ssu\\nwhere   u.[Company] = c.[Oid] and\\n        u.Oid = ssu.Oid and\\n        ssu.UserName not in ('ines.sousa', 'support', 'suporte', 'internal process', 'skilio') and\\n        ssu.[isActive] = 1\\nOrder by  u.[Name] Asc\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Companies123\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"disabled\": false,\r\n    \"dataSource\": {\r\n        \"load\": \"function getDataSource(loadOptions) {\\n    async function GetTenant() {\\n        var auth = SW.getComponent('auth');\\n        var tenant = SW.getComponent('TenantName');\\n        if(!tenant) return;\\n            if (!auth) {\\n                const formData = new FormData();\\n                formData.append('grant_type', 'client_credentials');\\n                formData.append('client_id', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n                formData.append('resource', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n                formData.append('client_secret', '2Si5cdC102lH3+ZvAtVRpeKbpC2kM+CcGYVVAKSY7Ps=');\\n                let response = await fetch(\\\"https://cors-anywhere.herokuapp.com/https://login.microsoftonline.com/nextwaycapital.onmicrosoft.com/oauth2/token?api-version=1.6\\\", {\\n                    method: 'POST',\\n                    body: formData\\n                });\\n                if (response.ok) {\\n                    let json = await response.json();\\n                    var auth = 'Bearer ' + json.access_token;\\n                    SW.saveComponent(auth, 'auth');\\n                }\\n            }\\n            if (auth) {\\n                var responseUserList = await fetch(\\\"https://devops.skillsworkflow.com/api/workspaces/\\\" + tenant + \\\"/Users\\\", {\\n                    method: 'GET',\\n                    headers: {\\n                        'Accept': 'application/json',\\n                        'Authorization': auth\\n                    }\\n                });\\n                let jsonUserList = await responseUserList.json();\\n                console.log(jsonUserList);\\n                return jsonUserList;\\n            }\\n            return {};\\n        }\\n        return GetTenant();\\n}\"\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"allowFiltering\": false,\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columnMinWidth\": \"50\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"function(e) {   console.log(\\\"gravei usersGrid\\\");    SW.saveComponent(e.component, 'usersGrid');}\",\r\n    \"height\": \"400\",\r\n    \"columns\": [\r\n        {\r\n            \"cellTemplate\": \"function(e, i) {\r\n                SW.showImage(e, 'company', 'small', i.data.HasImage, i.data.companyName, i.data.companyId);\r\n            }\",\r\n            \"width\": 38,\r\n            \"visibleIndex\": 1\r\n        },\r\n        {\r\n            \"dataField\": \"companyName\",\r\n            \"visibleIndex\": 2\r\n        },\r\n        {\r\n            \"dataField\": \"departmentName\",\r\n            \"visibleIndex\": 3\r\n        },\r\n        {\r\n            \"dataField\": \"typologyGroupName\",\r\n            \"visibleIndex\": 4\r\n        },\r\n        {\r\n            \"dataField\": \"typologyName\",\r\n            \"visibleIndex\": 5\r\n        },\r\n        {\r\n            \"dataField\": \"mail\",\r\n            \"visibleIndex\": 6\r\n        },\r\n        {\r\n            \"dataField\": \"userName\",\r\n            \"caption\": \"User Name\",\r\n            \"visibleIndex\": 7\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"showInColumn\": \"User Name\",\r\n                \"displayFormat\": \"Total: {0}\",\r\n                \"summaryType\": \"count\"\r\n            }\r\n        ]\r\n    },\r\n    \"masterDetail\": {\r\n        \"template\": \"function template(detailElement, detailInfo){\\n    \\n}\"\r\n    }\r\n}",
      "DashboardDefinitionId": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
    },
    {
      "Id": "759764b3-4498-41d1-9523-0ba073dce29c",
      "Name": "Region",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":13,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":20,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"select 1;\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\n    \"dataSource\": {\n        \"load\": \"function getDataSource(loadOptions) {\n            async function GetTenant() {\n                var auth = SW.getComponent('auth');\n                if (!auth) {\n                    const formData = new FormData();\n                    formData.append('grant_type', 'client_credentials');\n                    formData.append('client_id', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\n                    formData.append('resource', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\n                    formData.append('client_secret', '2Si5cdC102lH3+ZvAtVRpeKbpC2kM+CcGYVVAKSY7Ps=');\n                    let response = await fetch(\\\"https://cors-anywhere.herokuapp.com/https://login.microsoftonline.com/nextwaycapital.onmicrosoft.com/oauth2/token?api-version=1.6\\\", {\n                        method: 'POST',\n                        body: formData\n            });\n                    if (response.ok) {\n                        let json = await response.json();\n                        var auth = 'Bearer ' + json.access_token;\n                        SW.saveComponent(auth, 'auth');\n            }\n        }\n                if (auth) {\n                    var responseUserCount = await fetch(\\\"https://devops.skillsworkflow.com/api/metrics/users\\\", {\n                        method: 'GET',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Authorization': auth\n            }\n        });\n                    let jsonUserCount = await responseUserCount.json();\n                    let groupByR = GroupByRegion(jsonUserCount.data);\n                    return groupByR;\n    }\n                return {};\n}\n\nfunction GroupByRegion (data) {\n        var objectResult = {};\n        data.forEach( row => {\n            var region = row.region.toUpperCase();\n            if(!objectResult[region\n        ]) {\n                objectResult[region\n            ] = {\n                    region: region,\n                    Count: row.count\n            };\n        } else {\n                var count = objectResult[region\n            ].Count + row.count;\n                objectResult[region\n            ] = {\n                        ...objectResult[region\n                ],\n                        Count: count\n            };\n        }\n    });\n        var arrayResult = [];\n        Object.values(objectResult).forEach((value) => {\n            \n                arrayResult.push(value)\n    });\n        return arrayResult;\n}\n            return GetTenant();\n}\"\n},\n\"commonSeriesSettings\": {\n\"argumentField\": \"region\",\n\"ignoreEmptyPoints\": false,\n\"type\": \"Bar\",\n\"label\": {\n\"visible\": true\n}\n},\n\"series\": [\n{\n\"label\": {\n    \"format\": \"#,##0\"\n},\n\"valueField\": \"Count\",\n\"name\": \"Count\"\n}\n],\n\"tooltip\": {\n\"enabled\": false\n},\n\"size\": {\n\"height\": 200\n},\n\"padding\": {\n\"top\": 80\n}\n}",
      "DashboardDefinitionId": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
    },
    {
      "Id": "e10124fe-4859-46d7-aa03-11e6d60b0df6",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[\n    {\n        \"WidgetSubTitle\": \"\",\n        \"WidgetType\": \"form\",\n        \"WidgetFilterField\": \"\",\n        \"WidgetColor\": \"#f0f0f0\",\n        \"WidgetFrameStyle\": {},\n        \"WidgetXPosition\": 0,\n        \"WidgetYPosition\": 0,\n        \"WidgetRows\": 10,\n        \"WidgetColumns\": 13,\n        \"WidgetHeader\": {\n            \"showTitle\": false,\n            \"showSubTitle\": false,\n            \"WidgetMetrics\": {\n                \"visible\": false,\n                \"Metrics\": []\n            },\n            \"WidgetPeriodChooser\": {\n                \"visible\": false,\n                \"type\": \"\",\n                \"startDate\": null,\n                \"endDate\": null\n            }\n        },\n        \"WidgetDataSources\": {\n            \"main\": {\n                \"type\": \"queryempty\",\n                \"value\": \"{\\\"entities\\\":[],\\\"fields\\\":[]}\",\n                \"mapping\": \"\"\n            }\n        },\n        \"Filters\": {},\n        \"QueryConfiguration\": {\n            \"PreviousPeriod\": {\n                \"Show\": false,\n                \"KeyFieldName\": \"\",\n                \"Type\": 0\n            },\n            \"RequiredFilters\": []\n        }\n    }\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\n    \"onContentReady\": \"function getDataSource(loadOptions) {\\r\\n    async function GetTenant() {\\r\\n        var auth = SW.getComponent('auth');\\r\\n        if (!auth) {\\r\\n            const formData = new FormData();\\r\\n            formData.append('grant_type', 'client_credentials');\\r\\n            formData.append('client_id', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\r\\n            formData.append('resource', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\r\\n            formData.append('client_secret', '2Si5cdC102lH3+ZvAtVRpeKbpC2kM+CcGYVVAKSY7Ps=');\\r\\n            let response = await fetch(\\\"https://cors-anywhere.herokuapp.com/https://login.microsoftonline.com/nextwaycapital.onmicrosoft.com/oauth2/token?api-version=1.6\\\", {\\r\\n                method: 'POST',\\r\\n                body: formData\\r\\n            });\\r\\n            if (response.ok) {\\r\\n                let json = await response.json();\\r\\n                var auth = 'Bearer ' + json.access_token;\\r\\n                SW.saveComponent(auth, 'auth');\\r\\n            }\\r\\n        }\\r\\n        if (auth) {\\r\\n            var responseUserCount = await fetch(\\\"https://devops.skillsworkflow.com/api/metrics/users\\\", {\\r\\n                method: 'GET',\\r\\n                headers: {\\r\\n                    'Accept': 'application/json',\\r\\n                    'Authorization': auth\\r\\n                }\\r\\n            });\\r\\n            let jsonUserCount = await responseUserCount.json();\\r\\n            var totalUsers = 0;\\r\\n            jsonUserCount.data.forEach( row => { totalUsers = totalUsers + row.count });\\r\\n            SW.saveComponent(totalUsers, 'totalUsers');\\r\\n          \\r\\n            return totalUsers;\\r\\n        }\\r\\n        return {};\\r\\n    }\\r\\n    return GetTenant();\\r\\n}\",\n    \"size\": \"50px\",\n    \"items\": [\n        {\n            \"format\": \"currency\",\n            \"dataField\": \"\",\n            \"template\": \"function(data, itemElement){                                                                    var titleUsers = SW.setAttribute (itemElement, ' ', 'style', 'font-size: 17px; margin-top: 17px' );             titleUsers.textContent = 'Total Users';                  var tUsers = SW.setAttribute (itemElement, ' ', 'style', ' font-size: 80px; text-align: center; padding-top: 80px; color: #1aa3ff' );                                                                              tUsers.textContent = SW.getComponent('totalUsers');                       ; }\"\n        }\n    ]\n}",
      "DashboardDefinitionId": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
    },
    {
      "Id": "e2bd3c51-36ac-4c7b-be1c-a92800331c04",
      "Name": "Groups",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Holdings\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":33,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":15,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\n    \"dataSource\": {\n        \"load\": \"function getDataSource(loadOptions) {\\n    async function GetTenant() {\\n        var auth = SW.getComponent('auth');\\n        if (!auth) {\\n            const formData = new FormData();\\n            formData.append('grant_type', 'client_credentials');\\n            formData.append('client_id', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n            formData.append('resource', '0a4f3e54-bfbc-4203-ba7a-c1894fe7711d');\\n            formData.append('client_secret', '2Si5cdC102lH3+ZvAtVRpeKbpC2kM+CcGYVVAKSY7Ps=');\\n            let response = await fetch(\\\"https://cors-anywhere.herokuapp.com/https://login.microsoftonline.com/nextwaycapital.onmicrosoft.com/oauth2/token?api-version=1.6\\\", {\\n                method: 'POST',\\n                body: formData\\n            });\\n            if (response.ok) {\\n                let json = await response.json();\\n                var auth = 'Bearer ' + json.access_token;\\n                SW.saveComponent(auth, 'auth');\\n            }\\n        }\\n        if (auth) {\\n            var responseUserCount = await fetch(\\\"https://devops.skillsworkflow.com/api/metrics/users\\\", {\\n                method: 'GET',\\n                headers: {\\n                    'Accept': 'application/json',\\n                    'Authorization': auth\\n                }\\n            });\\n            let jsonUserCount = await responseUserCount.json();\\n            return jsonUserCount;\\n        }\\n        return {};\\n    }\\n    return GetTenant();\\n}\"\n    },\n    \"palette\": \"Material\",\n    \"type\": \"doughnut\",\n    \"series\": [\n        {\n            \"argumentField\": \"Holding\",\n            \"valueField\": \"Count\",\n            \"label\": {\n                \"position\": \"columns\",\n                \"visible\": true,\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"weight\": 600\n                },\n                \"customizeText\": \"function(arg) { return arg.argumentText + ' ' + arg.percentText; }\"\n            }\n        }\n    ],\n    \"startAngle\": 50,\n    \"tooltip\": {\n        \"enabled\": true\n    },\n    \"commonSeriesSettings\": {\n        \"label\": {\n            \"visible\": true,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"position\": \"columns\",\n                \"visible\": true,\n                \"width\": 0.5\n            },\n            \"font\": {\n                \"size\": 10\n            }\n        }\n    },\n    \"size\": {\n        \"height\": 470\n    },\n    \"margin\": {\n        \"bottom\": 210\n    },\n    \"resolveLabelOverlapping\": \"shift\",\n    \"onDrawn\": \"function(e) {\n        var tenantDictionary = { \n            'mb': 'IPG',\n            'fcb': 'IPG',\n            'mwg': 'IPG',\n            'mullenlowemishra': 'IPG',\n            'webershandwick': 'IPG',\n            'dyu': 'IPG',\n            'wmwg':'IPG',\n            'ml':'IPG',\n           'wunderman':'WPP',\n            'vml':'WPP',\n            'pace':'WPP',\n            'fbiz':'WPP',\n            'grey':'WPP',\n            'young':'WPP',\n            'bcw':'WPP',\n            'ogilvy': 'WPP',\n            'pmweb': 'WPP',\n           'sapientag2':'Publicis',\n           'publicis': 'Publicis',\n           'dpz':'Publicis',\n           'talent':'Publicis',\n           'prodigius': 'Publicis',\n           'gsdm':'Ominicom',\n            'gsp':'Ominicom',\n            'bbdo': 'Ominicom', \n            'grupohavas': 'Havas',\n           'bigfish':'Independent',\n            'celfinet':'Independent',\n            'eurom':'Independent',\n            'fcrlaw':'Independent',\n            'grupozwela':'Independent',\n            'hood':'Independent',\n            'plug':'Independent',\n            'rtand':'Independent',\n            'vitrio':'Independent'\n    };\n\n\n    var queryResult = e.component.getDataSource(); \n        if(queryResult._items.length > 0) {\n            var objectResult = {};\n            queryResult._items.forEach( row => {\n                    var holding = tenantDictionary[row.tenant.split('-')[\n                    0\n                ]\n            ];\n                    if(holding) {\n                        if(!objectResult[holding\n                ]) {\n                            objectResult[holding\n                    ] = {\n                                Holding: holding,\n                                Count: row.count\n                    };\n                } else {\n                            var count = objectResult[holding\n                    ].Count + row.count;\n                            objectResult[holding\n                    ] = {\n                                ...objectResult[holding\n                        ],\n                                Count: count\n                    };\n                }\n            }\n        });\n            var arrayResult = [];\n            Object.values(objectResult).forEach((value) => arrayResult.push(value));\n            e.component.instance().beginUpdate();\n            e.component.option('dataSource', arrayResult);\n            e.component.instance().endUpdate();\n    }\n}\"\n}",
      "DashboardDefinitionId": "8ff89e4d-aaf0-4bed-a5eb-681dfc7b1af9"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 1,
  "Default": false
}
