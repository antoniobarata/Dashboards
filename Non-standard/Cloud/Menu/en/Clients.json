{
  "DashboardDefinitionRoles": [],
  "Id": "32a7de19-0196-4867-8781-1f22d219c967",
  "Name": "Clients Dashboard",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "c6bb13ec-1e89-4580-a325-0fb4bfc7b093",
      "Name": "Time by Project for selected client",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Planned x Actual\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":17,\"WidgetRows\":16,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT v.ProjectId, \\r\\n       v.Project, \\r\\n       Sum(v.actualtime)  AS ActualTime, \\r\\n       Sum(v.plannedtime) AS PlannedTime, \\r\\n       Sum(Sum(v.actualtime)) \\r\\n         OVER ()          AS ActualTimeGrandTotal, \\r\\n       Sum(Sum(v.plannedtime)) \\r\\n         OVER ()          AS PlannedTimeGrandTotal \\r\\nFROM   (SELECT t.projectid, \\r\\n               t.project, \\r\\n               Sum(t.actualtime) AS ActualTime, \\r\\n               0                 AS PlannedTime \\r\\n        FROM   analytics.Timesheet(@CurrentUserId) t \\r\\n        WHERE  1 = 1 \\r\\n        /*[DateFilter]*/ AND ( Datefromparts(t.[year], t.[month], 1) BETWEEN @FromDate AND @ToDate ) /*[/DateFilter]*/ \\r\\n        /*[ClientFilter]*/ AND t.clientid = @ClientId /*[/ClientFilter]*/ \\r\\n        GROUP  BY t.projectid, \\r\\n                  t.project \\r\\n        UNION \\r\\n        SELECT pht.projectid, \\r\\n               pht.project, \\r\\n               0                AS ActualTime, \\r\\n               Sum(pht.[hours]) AS PlannedTime \\r\\n        FROM   analytics.Plannedhourstotal(@CurrentUserId) pht \\r\\n        WHERE  1 = 1 \\r\\n              /*[ClientFilter]*/ AND pht.clientid = @ClientId /*[/ClientFilter]*/ \\r\\n        GROUP  BY pht.projectid, \\r\\n                  pht.project) v \\r\\nGROUP  BY v.projectid, \\r\\n          v.project \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"clientId\",\"startDate\",\"endDate\"],\"Sort\":{\"FieldName\":\"ActualTime\",\"Type\":2}}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_Project/execute",
      "Configuration": "{\n \"size\": {\n    \"height\": 250\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Project\",\n    \"ignoreEmptyPoints\": false\n  },\n  \"series\": [\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"PlannedTime\",\n      \"name\": \"Planned\"\n    },\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual\"\n    }\n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(' - ')[0].substring(0,10)}\",\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  }\n}",
      "DashboardDefinitionId": "f164428d-0110-4c28-91d3-f1e3ab8fd41e"
    },
    {
      "Id": "58debf59-d85f-455a-b91a-4eea88b0c8e1",
      "Name": "Plan vs. Actual",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"All Clients\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"ClientId\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":15,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"showPeriodChooser\":false,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Revenue\",\"metricFieldValue\":\"PlannedSellGrandTotal\"},{\"visible\":true,\"metricName\":\"# Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT\\tv.ActualCost,\\n\\t\\tv.ActualCostGrandTotal,\\n\\t\\tv.ActualTime,\\n\\t\\tv.ActualTimeGrandTotal,\\n\\t\\tv.Client,\\n\\t\\tv.ClientId,\\n\\t\\tv.ContractedRate,\\n\\t\\tv.ContractedTime,\\n\\t\\tv.PlannedSell,\\n\\t\\tv.PlannedSellGrandTotal,\\n\\t\\tv.PlannedTime,\\n\\t\\tv.PlannedTimeGrandTotal,\\n\\t\\tIif(( v.plannedsellgrandtotal - v.actualcostgrandtotal ) > 0, ( \\n\\t\\t( v.plannedsell - v.actualcost ) / \\n\\t\\t( v.plannedsellgrandtotal - v.actualcostgrandtotal ) ), 0) * 100.0 AS \\n\\t\\tPlannedProfitPercentage \\nFROM   (SELECT v.clientId, \\n               v.client, \\n               Sum(v.actualtime)     AS ActualTime, \\n               Sum(v.plannedtime)    AS PlannedTime, \\n               Sum(v.contractedtime) AS ContractedTime, \\n               Sum(v.actualcost)     AS ActualCost, \\n               Sum(v.plannedsell)    AS PlannedSell, \\n               Max(v.contractedrate) AS ContractedRate, \\n               Sum(Sum(v.actualtime)) \\n                 OVER ()             AS ActualTimeGrandTotal, \\n               Sum(Sum(v.plannedtime)) \\n                 OVER ()             AS PlannedTimeGrandTotal, \\n               Sum(Sum(v.actualcost)) \\n                 OVER ()             AS ActualCostGrandTotal, \\n               Sum(Sum(v.plannedsell)) \\n                 OVER ()             AS PlannedSellGrandTotal \\n        FROM   (SELECT t.clientid, \\n                       cc.[name] AS Client, \\n                       t.actualtime, \\n                       0         AS PlannedTime, \\n                       0         AS ContractedTime, \\n                       t.actualcost, \\n                       0         AS PlannedSell, \\n                       0         AS ContractedRate \\n                FROM   (SELECT t.clientid, \\n                               Sum(t.actualtime) AS ActualTime, \\n                               0                 AS PlannedTime, \\n                               0                 AS ContractedTime, \\n                               Sum(t.hourscost)  AS ActualCost \\n                        FROM   analytics.Timesheet(@CurrentUserId) t \\n                        where  (date between @FromDate and @ToDate)  and (t.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\n                                                                    and (t.[CompanyId] = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\n                        GROUP  BY t.clientid) t, \\n                       commercialclient cc \\n                WHERE  cc.oid = t.clientid \\n                UNION \\n                SELECT pht.clientid, \\n                       pht.client, \\n                       0                                            AS \\n                       ActualTime, \\n                       Sum(pht.[hours])                             AS \\n                       PlannedTime, \\n                       Sum(Isnull(pht.contractedhours, 0.0))        AS \\n                       ContractedTime, \\n                       0                                            AS \\n                       ActualCost, \\n                       Sum(( pht.[hours] * Isnull(pht.[rate], 0) )) AS \\n                       PlannedSell, \\n                       Max(pht.rate)                                AS \\n                       ContractedRate \\n                FROM   analytics.Plannedhourstotal(@CurrentUserId) pht \\n                WHERE (pht.[DivisionId] = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\n                      and (pht.[CompanyId] = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\n                GROUP  BY pht.clientid, \\n                          pht.client) v \\n        GROUP  BY v.clientid, \\n                  v.client) v \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\"],\"Sort\":{\"Type\":1,\"FieldName\":\"MonthYearNumber\"}}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_Client/execute",
      "Configuration": "{\r\n    \"palette\": \"material\",\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"height\": \"250\",\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": \"true\",\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"columnMinWidth\": \"50\",\r\n    \"filterPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"onRowClick\": \"function(e){ if(e.data.clientId != null) { SkillsWorkflow.setDashboardFilter('clientId', e.data.clientId); } }\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"caption\": \"Client\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualTime\",\r\n            \"caption\": \"Actual\",\r\n            \"format\": \"#,##0.00\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualCost\",\r\n            \"caption\": \"Cost\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedTime\",\r\n            \"caption\": \"Planned\",\r\n            \"format\": \"#,##0.00\"\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedSell\",\r\n            \"caption\": \"Planned Revenue\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedProfitPercentage\",\r\n            \"caption\": \"Profit %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\"\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedTime\",\r\n            \"caption\": \"Contracted\",\r\n            \"format\": \"#,##0.00\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"Project\",\r\n                \"summaryType\": \"count\"\r\n            },\r\n            {\r\n                \"column\": \"ActualTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedSell\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            }\r\n        ]\r\n    }\r\n}",
      "DashboardDefinitionId": "f164428d-0110-4c28-91d3-f1e3ab8fd41e"
    },
    {
      "Id": "4480d0d4-d243-44fb-9e27-91a944d61374",
      "Name": "Burn by Business Titles for selected client",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":17,\"WidgetRows\":16,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\" SELECT v.UserTypologyGroupId as TypologyGroupId, v.UserTypologyGroup as TypologyGroup, sum(v.ActualTime) as ActualTime, sum(v.PlannedTime) as PlannedTime, sum(v.ContractedTime) as PlannedTime, sum(sum(v.ActualTime)) over () as ActualTimeGrandTotal, sum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal, sum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal FROM ( SELECT t.UserTypologyGroupId, t.UserTypologyGroup, sum(t.ActualTime) as ActualTime, 0 as PlannedTime, 0 as ContractedTime FROM Analytics.Timesheet(@CurrentUserId) t WHERE 1 = 1 /*[DateFilter]*/ and (DATEFROMPARTS(t.[Year], t.[Month], 1) between @FromDate and @ToDate) /*[/DateFilter]*/ /*[ClientFilter]*/ and t.ClientId = @ClientId /*[/ClientFilter]*/ GROUP BY t.UserTypologyGroupId, t.UserTypologyGroup UNION SELECT pht.UserTypologyGroupId, pht.UserTypologyGroup, 0 as ActualTime, sum(pht.[Hours]) as PlannedTime, sum(pht.ContractedHours) as ContractedTime FROM Analytics.PlannedHoursTotal(@CurrentUserId) pht WHERE 1 = 1 /*[ClientFilter]*/ and pht.ClientId = @ClientId /*[/ClientFilter]*/ GROUP BY pht.UserTypologyGroupId, pht.UserTypologyGroup ) v GROUP BY v.UserTypologyGroupId, v.UserTypologyGroup\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"clientId\",\"startDate\",\"endDate\"],\"Sort\":{\"FieldName\":\"ActualTime\",\"Type\":2}}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"palette\": \"material\",\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"TypologyGroup\"\n    },\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"PlannedTime\",\n            \"name\": \"Planned Time\"\n        },\n        {\n            \"type\": \"scatter\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"point\": {\n                \"symbol\": \"triangleDown\",\n                \"color\": \"#a5bdd7\"\n            }\n        }\n    ],\n    \"size\": {\n        \"height\": 250\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"orientation\": \"horizontal\",\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"customizeText\": \"function(t){return t.valueText.split(' - ')[0].substring(0,10)}\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    }\n}",
      "DashboardDefinitionId": "f164428d-0110-4c28-91d3-f1e3ab8fd41e"
    },
    {
      "Id": "008da85d-40c4-4e1e-bc51-bf05d709b947",
      "Name": "Filters",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetHeight\":30,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n\"colCount\": 3,\r\n\"items\": [\r\n    {\r\n        \"name\": \"Year\",\r\n        \"dataField\": \"Year\",\r\n        \"editorType\": \"dxNumberBox\",\r\n        \"editorOptions\": {\r\n            \"showSpinButtons\": true,\r\n            \"value\": 2019,\r\n            \"width\": 65,\r\n            \"placeholder\": \"year\",\r\n            \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2019); SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');}, 1000) }\",\r\n            \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n        },\r\n        \"noDataText\": \"Please wait...\"\r\n    },\r\n    {\r\n        \"dataField\": \"CompanyId\",\r\n        \"label\": {\r\n            \"text\": \"Company\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                            return SkillsWorkflow.executeAPI('GET', 'companies/lookup',null,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'});return res;})\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('Company', e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');\r\n                }\r\n                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n        }\r\n    },\r\n    {\r\n        \"dataField\": \"DivisionId\",\r\n        \"label\": {\r\n            \"text\": \"Division\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"width\": 250,\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take}; \r\n                            var companyId = SW.getValueFromComponent('CompanyId'); \r\n                            if (companyId == '00000000-0000-0000-0000-000000000000') {\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',null,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'});return res;})\r\n                            } else if (companyId != null) { \r\n                                param['companyId'] = companyId;\r\n                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'});return res;})\r\n                            }\r\n                        }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n            },\r\n            \"placeholder\": \"All divisions\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if (e.value != null && e.value != '') {\r\n                    SkillsWorkflow.setDashboardFilter('Division', e.value);\r\n                } else {\r\n                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');\r\n                }\r\n            }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"disabled\": true\r\n        }\r\n    }]\r\n}\r\n\r\n",
      "DashboardDefinitionId": "f164428d-0110-4c28-91d3-f1e3ab8fd41e"
    },
    {
      "Id": "af2e9acc-7cba-43fa-ab55-cfaffe424e14",
      "Name": "Period",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time - Select Months\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":33,\"WidgetRows\":8,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2018-06-01\",\"endDate\":\"2019-12-31\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT Dateadd(dd, -( Datepart(dw, t.[date]) - 2 ), t.[date]) AS WeekStart, \\r\\n       t.[year], \\r\\n       t.[month], \\r\\n       CONVERT(INT, Concat(t.[year], Datepart(wk, t.[date]))) AS YearWeek, \\r\\n       Sum(t.actualtime)                                      AS [Hours] \\r\\nFROM   analytics.Timesheet(@CurrentUserId) t \\r\\nWHERE  [year] = @year\\r\\nGROUP  BY Dateadd(dd, -( Datepart(dw, t.[date]) - 2 ), t.[date]), \\r\\n          t.[year], \\r\\n          t.[month], \\r\\n          CONVERT(INT, Concat(t.[year], Datepart(wk, t.[date]))) \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Hours_Per_YearWeek/execute",
      "Configuration": "{\"margin\":{\"top\":0},\"size\":{\"height\":150},\"containerBackgroundColor\":\"#e0e0e0\",\"selectedRangeColor\":\"#f5564a\",\"chart\":{\"commonSeriesSettings\":{\"type\":\"line\",\"argumentField\":\"WeekStart\"},\"series\":[{\"valueField\":\"Hours\"}]},\"scale\":{\"minorTickInterval\":\"month\",\"tickInterval\":\"month\",\"valueType\":\"datetime\"},\"sliderMarker\":{\"format\":\"month\",\"color\":\"#da5859\"},\"value\":[]}",
      "DashboardDefinitionId": "f164428d-0110-4c28-91d3-f1e3ab8fd41e"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 7,
  "Default": false
}
