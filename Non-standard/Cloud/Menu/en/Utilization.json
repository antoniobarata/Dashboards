{
  "DashboardDefinitionRoles": [],
  "Id": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14",
  "Name": "Utilization",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "48940bf1-c43b-451c-9ade-093296721a32",
      "Name": "Period Selector",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Closed and In Progress Tickets\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":5,\"WidgetColumns\":48,\"WidgetHeader\":{\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tsum(v.Capacity) as [Hours],\\r\\n\\t\\tv.[Date] as [Date]\\r\\nfrom\\tAnalytics.DatamartUser v\\r\\nwhere\\t(Year(v.[Date]) = @year) and \\r\\n\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\ngroup by v.[Date]\\r\\norder by v.[Date]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Range_Selector/execute",
      "Configuration": "{\n    \"containerBackgroundColor\": \"#e0e0e0\",\n    \"selectedRangeColor\": \"#f5564a\",\n    \"size\": {\n        \"height\": 70\n    },\n    \"chart\": {\n        \"commonSeriesSettings\": {\n            \"type\": \"steparea\",\n            \"argumentField\": \"Date\"\n        },\n        \"series\": [\n            {\n                \"valueField\": \"Hours\"\n            }\n        ]\n    },\n    \"scale\": {\n        \"minorTickInterval\": \"day\",\n        \"tickInterval\": \"month\",\n        \"valueType\": \"datetime\",\n        \"marker\": {\n            \"separatorHeight\": 10,\n            \"textTopIndent\": 0,\n            \"topIndent\": 0\n        }\n    },\n    \"sliderMarker\": {\n        \"format\": \"monthAndDay\",\n        \"color\": \"#da5859\"\n    },\n    \"value\": {\n        \"length\": {\n            \"years\": 1\n        }\n    },\n    \"disabled\": false,\n    \"onDrawn\": \"function bla(e) {\\r\\n  ;\\r\\n    SW.saveComponent(e.component, 'rangeSelector');\\r\\n}\"\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "b966d1c3-787d-4241-853f-0954935d4706",
      "Name": "Utilization per Department",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Department in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":7,\"WidgetRows\":9,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\ttop 10\\r\\n\\t\\tv.Department,\\r\\n\\t\\t(v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nfrom (\\r\\n\\tselect\\tv.Department,\\t\\r\\n\\t\\t\\tsum(v.BillableTime) as [Hours],\\r\\n\\t\\t\\tsum(sum(v.BillableTime)) over () as [TotalHours]\\r\\n\\tfrom\\tAnalytics.DatamartTimesheet v\\r\\n\\twhere\\tv.[Date] between @FromDate and @ToDate and\\r\\n\\t\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and \\r\\n\\t\\t\\t(v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and \\r\\n\\t\\t\\t(v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\tgroup by v.Department\\r\\n) v\\r\\norder by (v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"Department\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"none\",\n            \"wordWrap\": \"none\",\n            \"textOverflow\": \"ellipsis\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Department\",\n            \"argumentField\": \"Department\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "29fce0c6-b3ec-415d-839b-15f9ab337106",
      "Name": "Utilization per Client  ",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Client in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":7,\"WidgetRows\":9,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\ttop 10\\r\\n\\t\\tv.Client,\\r\\n\\t\\t(v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nfrom (\\r\\n\\tselect\\tv.Client,\\t\\r\\n\\t\\t\\tsum(v.BillableTime) as [Hours],\\r\\n\\t\\t\\tsum(sum(v.BillableTime)) over () as TotalHours\\r\\n\\tfrom\\tAnalytics.DatamartTimesheet v\\r\\n\\twhere\\tv.[Date] between @FromDate and @ToDate and\\r\\n            (v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and \\r\\n            (v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and \\r\\n            (v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\tgroup by v.Client\\r\\n) v\\r\\norder by (v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"Client\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"none\",\n            \"wordWrap\": \"none\",\n            \"textOverflow\": \"ellipsis\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Client\",\n            \"argumentField\": \"Client\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"seriesTemplate\": {\n        \"nameField\": \"Client\"\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "cb0af9df-17d2-435d-b6b1-61e945c0816b",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": \"4\",\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2020,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2020); SkillsWorkflow.setDashboardFilter('CompanyOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('DivisionOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('DepartmentOid', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('UserType', '00000000-0000-0000-0000-000000000000');}, 500) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             var searchValue = (                            loadOptions.searchValue != null ? loadOptions.searchValue : '');                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                             return SkillsWorkflow.executeAPI('GET', 'companies/lookup',                    null,                    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'                        });return res;                    })                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n                },\r\n                \"placeholder\": \"All companies\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"onValueChanged\": \"function(e){                 if( e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('CompanyOid', e.value);            } else {                    SkillsWorkflow.setDashboardFilter('CompanyOid', '00000000-0000-0000-0000-000000000000');            }                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DivisionId\",\r\n            \"label\": {\r\n                \"text\": \"Division\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                             let skip = loadOptions.skip || 0;                             let take = loadOptions.take || 20;                             var param = { name:searchValue, skip: skip, take: take            };                             var companyId = SW.getValueFromComponent('CompanyId');                             if (companyId == '00000000-0000-0000-0000-000000000000') {                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',                null,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            } else if (companyId != null) {                                 param['companyId'                ] = companyId;                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            }        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n                },\r\n                \"placeholder\": \"All divisions\",\r\n                \"onValueChanged\": \"function(e){                 if (e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('DivisionOid', e.value);    } else {                    SkillsWorkflow.setDashboardFilter('DivisionOid', '00000000-0000-0000-0000-000000000000');    }                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DepartmentId\",\r\n            \"label\": {\r\n                \"text\": \"Department\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                     let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                     let skip = loadOptions.skip || 0;                     let take = loadOptions.take || 20;                    var param = { name: searchValue, skip: skip, take: take    };                     var divisionId = SW.getValueFromComponent('DivisionId');                     var companyId = SW.getValueFromComponent('CompanyId');                     if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') {                         param['divisionId'        ] = divisionId;                        param['companyId'        ] = companyId;    } else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {                        param['divisionId'        ] = divisionId;    }                    return SkillsWorkflow.executeAPI('GET', 'departments',param,    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'        });return res;    })}\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n                },\r\n                \"placeholder\": \"All departments\",\r\n                \"onValueChanged\": \"function(e){             if(e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('DepartmentOid', e.value);} else {                    SkillsWorkflow.setDashboardFilter('DepartmentOid', '00000000-0000-0000-0000-000000000000');}}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "9c4cf68f-d2e2-467a-8d92-677b12192fe7",
      "Name": "Utilization per Project Type ",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Hours per Project Type in % of Total\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#dddddd\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":7,\"WidgetRows\":9,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tiif(v.ProjectTypeName = '', 'Admin Hours', v.ProjectTypeName) as ProjectTypeName,\\r\\n\\t\\t(v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) as UtilizationPercentage\\r\\nfrom (\\r\\n\\tselect\\ttop 10\\r\\n\\t\\t\\tv.ProjectTypeName,\\t\\r\\n\\t\\t\\tsum(v.ActualTime) as [Hours],\\r\\n\\t\\t\\tsum(sum(v.ActualTime)) over () as TotalHours\\r\\n\\tfrom\\tAnalytics.DatamartTimesheet v\\r\\n\\twhere\\tv.[Date] between @FromDate and @ToDate and\\r\\n\\t\\t\\t(v.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t(v.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t\\t(v.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\r\\n\\tgroup by v.ProjectTypeName\\r\\n) v\\r\\norder by (v.[Hours] / iif(v.[TotalHours] > 0, v.[TotalHours], 1.0)) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": \"percent\"\n        },\n        \"argumentField\": \"ProjectTypeName\",\n        \"valueField\": \"UtilizationPercentage\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"tooltip\": {\n        \"format\": \"percent\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"format\": \"percent\"\n        }\n    },\n    \"series\": [\n        {\n            \"name\": \"Project Type\",\n            \"argumentField\": \"ProjectTypeName\",\n            \"valueField\": \"UtilizationPercentage\",\n            \"label\": {\n                \"visible\": false,\n                \"format\": \"percent\"\n            }\n        }\n    ],\n    \"seriesTemplate\": {\n        \"nameField\": \"ProjectTypeName\"\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "f476a680-a0d9-4bcc-be47-d23f62b678e7",
      "Name": "User Leaves & Projects",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"Different Projects the User was or is involved in and Leaves breakdown\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":33,\"WidgetRows\":24,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.ClientGroup,\\n\\t\\tv.Client,\\n\\t\\tv.[Name],\\n\\t\\tv.ProjectClassificationName,\\n\\t\\tv.TypeName,\\n\\t\\tv.[Job],\\n\\t\\tv.[Hours],\\n\\t\\tv.NewBusinessHours,\\n\\t\\tv.BillableHours,\\n\\t\\tv.UtilizationPercentage,\\n\\t\\tv.UtilizationNonBillablePercentage\\nfrom (\\n\\tselect\\tv.ClientGroup,\\n\\t\\t\\tv.Client,\\n\\t\\t\\tv.[Name],\\n\\t\\t\\tv.ProjectClassificationName,\\n\\t\\t\\tiif(v.TypeName = '', 'Admin', v.TypeName) as TypeName,\\n\\t\\t\\tv.[Job],\\n\\t\\t\\tsum(v.[Hours]) as [Hours],\\n\\t\\t\\tsum(v.NewBusinessHours) as NewBusinessHours,\\n\\t\\t\\tsum(v.BillableHours) as BillableHours,\\n\\t\\t\\tiif(sum(sum(v.Capacity)) over () > 0, isnull(sum(v.BillableHours), 0.0) / sum(sum(v.Capacity)) over (), 1.0) as UtilizationPercentage,\\n\\t\\t\\tiif(sum(sum(v.Capacity)) over () > 0, isnull(sum(v.NewBusinessHours), 0.0) / sum(sum(v.Capacity)) over (), 1.0) as UtilizationNonBillablePercentage\\n\\tfrom (\\n\\t\\tselect\\t'' as ClientGroup,\\n\\t\\t\\t\\t'' as Client,\\n\\t\\t\\t\\t'' as [Name],\\n\\t\\t\\t\\t'' as ProjectClassificationName,\\n\\t\\t\\t\\t'Capacity' as TypeName,\\n\\t\\t\\t\\t'' as [Job],\\n\\t\\t\\t\\tsum(du.Capacity) AS Capacity,\\n\\t\\t\\t\\t0 as [Hours],\\n\\t\\t\\t\\t0 as NewBusinessHours,\\n\\t\\t\\t\\t0 as BillableHours\\n\\t\\tfrom\\tAnalytics.DatamartUser du\\n\\t\\twhere\\t(du.[Date] between @FromDate and @ToDate) and \\n\\t\\t\\t\\t(du.StartDate between @FromDate and @ToDate or\\n\\t\\t\\t\\tdu.EndDate between @FromDate and @ToDate or\\n\\t\\t\\t\\t(du.StartDate < @FromDate and (du.EndDate > @ToDate or du.EndDate is null))) and \\n\\t\\t\\t\\tdatepart(dw, du.[Date]) not in (1,7) and \\n\\t\\t\\t\\tdu.FullName = @UserName\\n\\t\\tunion all\\n\\t\\tselect\\t'' as ClientGroup,\\n\\t\\t\\t\\t'' as Client,\\n\\t\\t\\t\\tdl.LeaveType as [Name],\\n\\t\\t\\t\\t'' as ProjectClassificationName,\\n\\t\\t\\t\\t'Leave' as TypeName,\\n\\t\\t\\t\\t'' as [Job],\\n\\t\\t\\t\\t0 AS Capacity,\\n\\t\\t\\t\\tsum(dl.[Hours]) as [Hours],\\n\\t\\t\\t\\t0 as NewBusinessHours,\\n\\t\\t\\t\\t0 as BillableHours\\n\\t\\tfrom\\tAnalytics.DatamartLeave dl, [User] u\\n\\t\\twhere\\tu.Oid = dl.UserId and\\n\\t\\t\\t\\tdl.[Date] between @FromDate and @ToDate and \\n\\t\\t\\t\\tu.[Name] = @UserName\\n\\t\\tgroup by dl.LeaveType\\n\\t\\tunion all\\n\\t\\tselect\\tdt.ClientGroup,\\n\\t\\t\\t\\tdt.Client,\\n\\t\\t\\t\\tiif(dt.ProjectTypeName = '', dt.WorkType, dt.Project) as [Name],\\n\\t\\t\\t\\tdt.ProjectClassificationName,\\n\\t\\t\\t\\tdt.ProjectTypeName as TypeName,\\n\\t\\t\\t\\tdt.[Job],\\n\\t\\t\\t\\t0 AS Capacity,\\n\\t\\t\\t\\tsum(dt.ActualTime) AS [Hours],\\n\\t\\t\\t\\tsum(dt.NewBusinessTime) AS [NewBusinessHours],\\n\\t\\t\\t\\tsum(dt.BillableTime) AS [BillableHours]\\n\\t\\tfrom\\tAnalytics.DatamartTimesheet dt, [User] u\\n\\t\\twhere   u.Oid = dt.UserId and\\n\\t\\t\\t\\tdt.[Date] between @FromDate and @ToDate and \\n\\t\\t\\t\\tu.[Name] = @UserName\\n\\t\\tgroup by dt.ClientGroup, dt.Client, dt.[UserId], dt.[User], dt.Project, dt.ProjectClassificationName, dt.ProjectTypeName, dt.WorkType, dt.[Job]\\n\\t) v\\n\\tgroup by v.ClientGroup, v.Client, v.[Name], v.ProjectClassificationName, v.TypeName, v.[Job]\\n) v\\nwhere\\tv.TypeName != 'Capacity'\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"userName\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"columnResizingMode\": \"widget\",\r\n    \"allowColumnResizing\": \"true\",\r\n    \"allowFiltering\": true,\r\n    \"columnAutoWidth\": \"true\",\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"height\": \"450\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"columnMinWidth\": \"80\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Name\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 175\r\n        },\r\n        {\r\n            \"dataField\": \"Job\",\r\n            \"caption\": \"Job\",\r\n            \"width\": 200\r\n        },\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"caption\": \"Client\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"ProjectClassificationName\",\r\n            \"name\": \"ProjectClassificationName\",\r\n            \"caption\": \"Project Classification\",\r\n            \"width\": 150,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"TypeName\",\r\n            \"name\": \"Name\",\r\n            \"caption\": \"Type\",\r\n            \"width\": 120,\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"NewBusinessHours\",\r\n            \"caption\": \"Non-Billable\",\r\n            \"name\": \"NonBillable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"BillableHours\",\r\n            \"caption\": \"Billable\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"caption\": \"Utilization\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"UtilizationNonBillablePercentage\",\r\n                    \"caption\": \"Non Billable %\",\r\n                    \"name\": \"UtilizationNonBillable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": {\r\n                        \"type\": \"percent\",\r\n                        \"precision\": 1\r\n                    },\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, (i.value >= 0.8 && i.value < 1.2), i.value < 0.8, true);            }\"\r\n                },\r\n                {\r\n                    \"dataField\": \"UtilizationPercentage\",\r\n                    \"caption\": \"Billable %\",\r\n                    \"name\": \"Utilization\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": {\r\n                        \"type\": \"percent\",\r\n                        \"precision\": 1\r\n                    },\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, (i.value >= 0.8 && i.value < 1.2), i.value < 0.8, true);            }\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"Hours\",\r\n            \"caption\": \"Hours\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        }\r\n    ],\r\n    \"sortByGroupSummaryInfo\": [\r\n        {\r\n            \"summaryItem\": \"count\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === 'NonBillablePercentage') {                switch(options.summaryProcess) {                    case 'start':                    options.totalValue = [0,0];                    break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.NewBusinessHours;                    options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                    options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                    break;                }            }            if (options.name === 'BillablePercentage') {                        switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                        case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.BillableHours;                        options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Hours\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Hours\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    }\r\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    },
    {
      "Id": "31d410a6-3727-4d4a-9d68-f11017c12f5d",
      "Name": "Utilization per User",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours in % of User Capacity\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":16,\"WidgetRows\":17,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.DepartmentName,\\n\\t\\tv.UserTypologyGroupName,\\n\\t\\tv.UserName,\\n\\t\\tv.UserHasImage,\\n\\t\\tv.UserId,\\n\\t\\tv.UserTypeName,\\n\\t\\tsum(v.Capacity) as Capacity,\\n\\t\\tsum(v.Leaves) as Leaves,\\n\\t\\tsum(v.[Hours]) as [Hours],\\n\\t\\tsum(v.AdministrativeHours) as AdministrativeHours,\\n\\t\\tsum(v.InternalWorkHours) as InternalWorkHours,\\n\\t\\tsum(v.NewBusinessHours) as NewBusinessHours,\\n\\t\\tsum(v.BillableHours) as BillableHours,\\n\\t\\tsum(v.ClientHours) as ClientHours,\\n\\t\\tsum(v.NonWorkedHours) as NonWorkedHours,\\n\\t\\tiif(sum(v.Capacity) > 0, isnull(sum(v.[BillableHours]), 0.0) / sum(v.Capacity), 1.0) as UtilizationPercentage,\\n\\t\\tiif(sum(v.Capacity) > 0, isnull(sum(v.[NewBusinessHours]), 0.0) / sum(v.Capacity), 1.0) as UtilizationNonBillablePercentage\\nfrom (\\n\\tselect\\tdu.Department as DepartmentName,\\n\\t\\t\\tdu.UserTypologyGroup as UserTypologyGroupName,\\n\\t\\t\\tdu.FullName as UserName,\\n\\t\\t\\tdu.HasImage as UserHasImage,\\n\\t\\t\\tmax(du.Oid) as UserId,\\n\\t\\t\\tdu.UserType as UserTypeName,\\n\\t\\t\\tsum(du.Capacity) as Capacity,\\n\\t\\t\\tsum(du.LeaveTime) as Leaves,\\n\\t\\t\\t0 AS [Hours],\\n\\t\\t\\t0 AS [AdministrativeHours],\\n\\t\\t\\t0 AS [InternalWorkHours],\\n\\t\\t\\t0 AS [NewBusinessHours],\\n\\t\\t\\t0 AS [BillableHours],\\n\\t\\t\\t0 as [ClientHours],\\n\\t\\t\\t0 as [NonWorkedHours]\\n\\tfrom\\tAnalytics.DatamartUser du\\n\\twhere\\t(du.[Date] between @FromDate and @ToDate) and \\n\\t\\t\\t(du.StartDate between @FromDate and @ToDate or\\n\\t\\t\\tdu.EndDate between @FromDate and @ToDate or\\n\\t\\t\\t(du.StartDate < @FromDate and (du.EndDate > @ToDate or du.EndDate is null))) and \\n\\t\\t\\tdatepart(dw, du.[Date]) not in (1,7) and \\n\\t\\t\\t(du.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and \\n\\t\\t\\t(du.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and \\n\\t\\t\\t(du.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\n\\tgroup by du.Department, du.UserTypologyGroup, du.FullName, du.HasImage, du.UserType\\n\\thaving sum(du.ActualTime) != 0\\n\\tunion all\\n\\tselect\\tdt.Department as DepartmentName,\\n\\t\\t\\tdt.UserTypologyGroup as UserTypologyGroupName,\\n\\t\\t\\tu.[Name] as UserName,\\n\\t\\t\\tu.HasImage as UserHasImage,\\n\\t\\t\\tmax(dt.UserId) as UserId,\\n\\t\\t\\tut.[Name] as UserTypeName,\\n\\t\\t\\t0 as Capacity,\\n\\t\\t\\t0 as Leaves,\\n\\t\\t\\tsum(dt.ActualTime) as [Hours],\\n\\t\\t\\tsum(dt.AdministrativeTime) as [AdministrativeHours],\\n\\t\\t\\tsum(isnull(dt.InternalWorkTime, 0.0)) as [InternalWorkHours],\\n\\t\\t\\tsum(dt.NewBusinessTime) as [NewBusinessHours],\\n\\t\\t\\tsum(dt.BillableTime) as [BillableHours],\\n\\t\\t\\tsum(isnull(dt.BillableTime, 0.0) - isnull(dt.[AdministrativeTime], 0.0)) as [ClientHours],\\n\\t\\t\\tsum(isnull(dt.[ActualTime] - (dt.[AdministrativeTime] + dt.[NewBusinessTime] + dt.[BillableTime]), 0.0)) as [NonWorkedHours]\\n\\tfrom\\tAnalytics.DatamartTimesheet dt, \\n\\t\\t\\t[User] u, \\n\\t\\t\\tUserType ut\\n\\twhere\\tu.Oid = dt.UserId and\\n\\t\\t\\tut.Oid = u.UserType and\\n\\t\\t\\tdt.[Date] between @FromDate and @ToDate and \\n\\t\\t\\t(dt.CompanyId = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000') and \\n\\t\\t\\t(dt.DivisionId = @DivisionOid or @DivisionOid = '00000000-0000-0000-0000-000000000000') and \\n\\t\\t\\t(dt.DepartmentId = @DepartmentOid or @DepartmentOid = '00000000-0000-0000-0000-000000000000')\\n\\tgroup by dt.Department, dt.UserTypologyGroup, u.[Name], u.HasImage, ut.[Name]\\n\\thaving sum(dt.ActualTime) != 0\\n) v\\t\\ngroup by v.DepartmentName, v.UserTypologyGroupName, v.UserName, v.UserHasImage, v.UserId, v.UserTypeName\\norder by v.UserTypologyGroupName, v.UserName\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"CompanyOid\",\"DivisionOid\",\"DepartmentOid\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"columnResizingMode\": \"widget\",\r\n    \"allowColumnResizing\": \"true\",\r\n    \"allowFiltering\": true,\r\n    \"columnAutoWidth\": \"true\",\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"onSelectionChanged\": \"function (selectedItems) {   \\r\\n    var data = selectedItems.selectedRowsData[0];            \\r\\n    if(data) {                \\r\\n        SkillsWorkflow.setDashboardFilter('userName', data.UserName);          \\r\\n        }  \\r\\n    }\",\r\n    \"height\": \"390\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columnMinWidth\": \"\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"DepartmentName\",\r\n            \"caption\": \"Department\",\r\n            \"width\": 120,\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"UserTypologyGroupName\",\r\n            \"name\": \"Typology Group\",\r\n            \"caption\": \"Typology\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"caption\": \"\",\r\n            \"width\": 30,\r\n            \"entity\": \"User\",\r\n            \"format\": {\r\n                \"image\": {\r\n                    \"mapping\": {\r\n                        \"id\": \"UserId\",\r\n                        \"name\": \"UserName\",\r\n                        \"hasImage\": \"UserHasImage\"\r\n                    },\r\n                    \"size\": \"small\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"UserName\",\r\n            \"name\": \"User\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 120\r\n        },\r\n        {\r\n            \"dataField\": \"UserTypeName\",\r\n            \"name\": \"UserType\",\r\n            \"caption\": \"User Type\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"Capacity\",\r\n            \"caption\": \"Capacity\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"dataField\": \"Leaves\",\r\n            \"caption\": \"Leaves\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\"\r\n        },\r\n        {\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"NewBusinessHours\",\r\n                    \"caption\": \"Non-Billable\",\r\n                    \"name\": \"NonBillable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\"\r\n                },\r\n                {\r\n                    \"dataField\": \"AdministrativeHours\",\r\n                    \"caption\": \"Admin\",\r\n                    \"name\": \"Admin\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\"\r\n                },\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"caption\": \"Utilization\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"UtilizationNonBillablePercentage\",\r\n                    \"caption\": \"Non Billable %\",\r\n                    \"name\": \"UtilizationNonBillable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": {\r\n                        \"type\": \"percent\",\r\n                        \"precision\": 1\r\n                    },\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, (i.value >= 0.8 && i.value < 1.2), i.value < 0.8, true);            }\"\r\n                },\r\n                {\r\n                    \"dataField\": \"UtilizationPercentage\",\r\n                    \"caption\": \"Billable %\",\r\n                    \"name\": \"Utilization\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": {\r\n                        \"type\": \"percent\",\r\n                        \"precision\": 1\r\n                    },\r\n                    \"cellTemplate\": \"function(e, i) {                  SkillsWorkflow.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, (i.value >= 0.8 && i.value < 1.2), i.value < 0.8, true);            }\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"sortByGroupSummaryInfo\": [\r\n        {\r\n            \"summaryItem\": \"count\"\r\n        }\r\n    ],\r\n    \"onExporting1\": \"function (e) {        debugger;    }\",\r\n    \"export\": {\r\n        \"enabled\": true,\r\n        \"customizeExcelCell\": \"function(e) {            debugger;            if(e.gridCell.column.dataField == 'Product' && e.gridCell.data.Cost > 3000) {                e.fillPatternType = 'lightGray';                e.fillPatternColor = '#FF0000';            }        }\"\r\n    },\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === 'NonBillablePercentage') {                switch(options.summaryProcess) {                    case 'start':                    options.totalValue = [0,0];                    break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.NewBusinessHours;                    options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                    options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                    break;                }            }            if (options.name === 'BillablePercentage') {                        switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                        case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.BillableHours;                        options.totalValue[1] = options.totalValue[1] + options.value.Capacity;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Capacity\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Hours\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Leaves\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Admin\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"name\": \"BillablePercentage\",\r\n                \"showInColumn\": \"Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"NonBillablePercentage\",\r\n                \"showInColumn\": \"Non Billable %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Capacity\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Leaves\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non-Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Admin\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    }\r\n}",
      "DashboardDefinitionId": "c5bca510-00a8-4b57-8a6d-68a7f7d75c14"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 26,
  "Default": false
}
