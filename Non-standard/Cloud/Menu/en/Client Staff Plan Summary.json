{
  "DashboardDefinitionRoles": [
  ],
  "Id": "6c406b8d-8a4f-4d87-938a-1e303f4f5b71",
  "Name": "Client Staff Plan Summary",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{\"type\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"patchModel\":[{\"model\":\"\",\"translation\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "33ca8e58-ccf9-476b-95ce-34005a53009a",
      "Name": "Deliverables Staffing",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Hours and Fee per Typology Group\",\"WidgetType\":\"pivotgrid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":7,\"WidgetRows\":23,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  IIF(eit.[Order] < 10, concat('0', eit.[Order], '. ', eit.[Description]), concat(eit.[Order], '. ', eit.[Description])) as Deliverable,\\n        art.[Name] as [Service],\\n        utg.[Name] as TypologyGroup,\\n        usr.[Name] as [User],\\n\\t\\tdiv.[Name] as Division,\\n        dep.[Name] as Department,\\n        edt.[Hours] as ContractedTime,\\n\\t\\tcg.[Name] as ClientGroup,\\n\\t\\tcc.[Name] as ClientName,\\n\\t\\tc.[Name] as FeeProposal,\\n\\t\\test.[Name] as EstimateName,\\n\\t\\tIIF(n.RoleId is not null, edt.UnitPriceCost, null) as Rate,\\n\\t\\tIIF(n.RoleId is not null, edt.[Rate], null) as TableRate,\\n        edt.ValueWithoutVatIncome as TotalDeliverable,\\n\\t\\tIIF(n.RoleId is not null, edt.UnitPriceCost * edt.[Hours], null) as Total,\\n\\t\\tcast(est.[Date] as Date) as StartDate,\\n\\t\\tcast(est.[Expiration] as Date) as EndDate\\nfrom    Estimate est\\tleft outer join CommercialClient cc on cc.Oid = est.Client\\n\\t\\t\\t\\t\\t\\tleft outer join [Contract] c on c.Oid = est.[Contract]\\n\\t\\t\\t\\t\\t\\tleft outer join ClientGroup cg on cg.Oid = cc.ClientGroup,\\n\\t\\t\\t\\t\\t\\t\\n\\t\\tEstimateItem eit, \\n\\t\\tArticle art,\\n        EstimateItemDetail edt\\tleft outer join Department dep on dep.Oid = edt.Department\\n\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Division div on div.Oid = dep.Division\\n\\t\\t\\t\\t\\t\\t\\t\\tleft outer join [User] usr on usr.Oid = edt.[User]\\n\\t\\t\\t\\t\\t\\t\\t\\tleft outer join UserTypologyGroup utg on utg.Oid = edt.UserTypologyGroup\\n\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Analytics.[Authorization](@CurrentUserId) n on (n.RoleName = 'RateCardRead')\\nwhere   eit.Estimate = est.Oid and\\n        edt.EstimateItem = eit.Oid and\\n        edt.[Type] = 2 and\\n        art.Oid = eit.Article and \\n        est.[Date] between @FromDate and @ToDate and\\n\\t\\t(cg.Oid = @ClientGroupOid or @ClientGroupOid = '00000000-0000-0000-0000-000000000000') and\\n\\t\\t(utg.Company = @CompanyOid or @CompanyOid = '00000000-0000-0000-0000-000000000000')\\norder by eit.[Order]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"CompanyOid\",\"ClientGroupOid\",\"FromDate\",\"ToDate\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Resources - Staffing/execute",
      "Configuration": "{\n    \"allowSortingBySummary\": true,\n    \"allowSorting\": true,\n    \"allowFiltering\": true,\n    \"allowExpandAll\": true,\n    \"headerFilter\": {\n        \"allowSearch\": true,\n        \"showRelevantValues\": true\n    },\n    \"height\": \"500\",\n    \"showBorders\": true,\n    \"export\": {\n        \"enabled\": true,\n        \"fileName\": \"Deliverables Staffing\"\n    },\n    \"showRowGrandTotals\": true,\n    \"fieldPanel\": {\n        \"showColumnFields\": true,\n        \"showDataFields\": true,\n        \"showFilterFields\": true,\n        \"showRowFields\": true,\n        \"allowFieldDragging\": true,\n        \"visible\": true\n    },\n    \"wordWrapEnabled\": false,\n    \"dataSource\": {\n        \"fields\": [\n            {\n                \"caption\": \"Division\",\n                \"dataField\": \"Division\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Department\",\n                \"dataField\": \"Department\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Typology Group\",\n                \"width\": 120,\n                \"dataField\": \"TypologyGroup\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Name\",\n                \"dataField\": \"User\",\n                \"dataType\": \"string\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"dataField\": \"Deliverable\",\n                \"dataType\": \"string\",\n                \"area\": \"column\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Hours\",\n                \"dataField\": \"ContractedTime\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"area\": \"data\",\n                \"format\": \"###,###,###\"\n            },\n            {\n                \"caption\": \"Rate\",\n                \"dataField\": \"Rate\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"area\": \"data\",\n                \"format\": \"###,###,###\"\n            },\n            {\n                \"caption\": \"TableRate\",\n                \"dataField\": \"TableRate\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"area\": \"data\",\n                \"format\": \"###,###,###\"\n            },\n            {\n                \"caption\": \"Total\",\n                \"dataField\": \"Total\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"area\": \"data\",\n                \"format\": \"###,###,###\"\n            },\n            {\n                \"dataField\": \"Service\",\n                \"dataType\": \"string\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Division\",\n                \"dataField\": \"Division\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Department\",\n                \"dataField\": \"Department\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Client Group\",\n                \"dataField\": \"ClientGroup\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Client\",\n                \"dataField\": \"ClientName\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Fee\",\n                \"dataField\": \"FeeProposal\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Estimate\",\n                \"dataField\": \"EstimateName\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Start Date\",\n                \"dataField\": \"StartDate\",\n                \"dataType\": \"date\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"End Date\",\n                \"dataField\": \"EndDate\",\n                \"dataType\": \"date\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            }\n        ],\n        \"store\": null\n    },\n    \"onCellPrepared\": \"function(e) {\n      if (e.area == 'column' && e.rowIndex == 0 && e.cell.type == 'D' && e.columnIndex % 2 == 0) \n        e.cellElement.setAttribute('background-color', '#e4e4e4');\n}\"\n}",
      "DashboardDefinitionId": "6c406b8d-8a4f-4d87-938a-1e303f4f5b71"
    },
    {
      "Id": "8dcc3cf5-f70b-459d-be83-9ca23a84305b",
      "Name": "Actual Hours and Total Income per Department",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual, Leaves and Holiday Hours\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":22,\"WidgetYPosition\":0,\"WidgetRows\":7,\"WidgetColumns\":26,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.Department,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(v.IncomeTotal) as IncomeTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.Department,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t0 as IncomeTotal\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\tgroup by\\r\\n\\t\\tv.Department\\r\\n\\tunion\\r\\n\\tselect \\r\\n\\t\\tv.Department,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(v.ValueWithVatIncome) as IncomeTotal\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.EstimateResource(@CurrentUserId) v\\r\\n\\tgroup by\\r\\n\\t\\tv.Department\\r\\n) v\\r\\ngroup by\\r\\n\\tv.Department\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"CompanyOid\",\"ClientGroupOid\",\"FromDate\",\"ToDate\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"commonSeriesSettings\": {\r\n        \"type\": \"steparea\",\r\n        \"argumentField\": \"Department\"\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"valueField\": \"ActualTime\",\r\n            \"name\": \"Actual Hours\",\r\n            \"type\": \"bar\",\r\n            \"axis\": \"ActualHours\"\r\n        },\r\n        {\r\n            \"valueField\": \"IncomeTotal\",\r\n            \"name\": \"Total Income\",\r\n            \"type\": \"bar\",\r\n            \"axis\": \"TotalIncome\"\r\n        }\r\n    ],\r\n    \"valueAxis\": [\r\n        {\r\n            \"name\": \"ActualHours\",\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Actual Hours\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"TotalIncome\",\r\n            \"position\": \"right\",\r\n            \"grid\": {\r\n                \"visible\": true\r\n            },\r\n            \"label\": {\r\n                \"font\": {\r\n                    \"size\": 10,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            },\r\n            \"title\": {\r\n                \"text\": \"Total Income\",\r\n                \"font\": {\r\n                    \"size\": 11,\r\n                    \"family\": \"Varela Round\",\r\n                    \"weight\": 800\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"size\": {\r\n        \"height\": 120\r\n    },\r\n    \"legend\": {\r\n        \"visible\": true,\r\n        \"customizeText\": \"function(arg) {\r\n            return arg.seriesName\r\n    }\"\r\n}\r\n}",
      "DashboardDefinitionId": "6c406b8d-8a4f-4d87-938a-1e303f4f5b71"
    },
    {
      "Id": "4b70d6c1-a4da-48ea-a1f9-b41f47aafb5d",
      "Name": "Company and Client Group",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Choose a Company or Client Group\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":7,\"WidgetColumns\":22,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"SELECT 1;\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\r\n    \"colCount\": \"2\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"validationRules\": [\r\n                {\r\n                    \"type\": \"required\"\r\n                }\r\n            ],\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                        var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                        var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                        return SkillsWorkflow.executeAPI('GET', 'companies/lookup',null,{})                    }\",\r\n                    \"byKey\": \"function(key) {                         return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})                     }\"\r\n                },\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"onInitialized\": \"function(e) {\r\n                    var date = new Date();\r\n                    SW.setDashboardFilter('ClientGroupOid', '00000000-0000-0000-0000-000000000000');\r\n                    setTimeout(function() {\r\n                        var startDate = date.getFullYear() + '-' + 1 + '-' + 1;\r\n                        SW.setDashboardFilter('FromDate', startDate);\r\n                        setTimeout(function() {\r\n                            var endDate = date.getFullYear() + '-' + 12 + '-' + 31;\r\n                            SW.setDashboardFilter('ToDate', endDate);\r\n                        }, 500);\r\n                    }, 500);\r\n                }\",\r\n                \"onValueChanged\": \"function(e){                    if( e.value != null && e.value != '') {                        SkillsWorkflow.setDashboardFilter('CompanyOid', e.value);                    } else {                        SkillsWorkflow.setDashboardFilter('CompanyOid', '00000000-0000-0000-0000-000000000000');                    }                }\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"Client Group\",\r\n            \"label\": {\r\n                \"text\": \"Client Group\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"minSearchLength\": 0,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                        var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                        var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                        return SkillsWorkflow.executeAPI('GET', 'clientgroups/lookup',null,{})                    }\",\r\n                    \"byKey\": \"function(key) {                         return SW.executeAPI('GET','clientgroups/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})                     }\"\r\n                },\r\n                \"value\": \"\",\r\n                \"onValueChanged\": \"function(e){                     if(e.value != null) {                         SW.setDashboardFilter('ClientGroupOid', e.value);                     }                }\",\r\n                \"valueExpr\": \"Id\",\r\n                \"displayExpr\": \"Name\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"name\": \"Start Date\",\r\n            \"label\": {\r\n                \"text\": \"Start Date\"\r\n            },\r\n            \"editorType\": \"dxDateBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"onFocusIn\": \"function(e) {                    var endDate = SW.getComponent('endDate');                    e.component.option('max', endDate);                }\",\r\n                \"onInitialized\": \"function(e) {                    var date = new Date();                    var startDate = date.getFullYear() + '-' + 1 + '-' + 1;SW.saveComponent(startDate, 'startDate');                    var endDate = date.getFullYear() + '-' + 12 + '-' + 31;                    e.component.option('max', endDate);                    var showDate = new Date(startDate);                    e.component.dateValue(showDate);                }\",\r\n                \"onValueChanged\": \"function(e) {                    var startDate = e.value.getFullYear() + '-' + (e.value.getMonth() + 1) + '-' + e.value.getDate();                    SW.saveComponent(startDate, 'startDate');                    SW.setDashboardFilter('FromDate', startDate);                }\"\r\n            }\r\n        },\r\n        {\r\n            \"name\": \"End Date\",\r\n            \"label\": {\r\n                \"text\": \"End Date\"\r\n            },\r\n            \"editorType\": \"dxDateBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"onFocusIn\": \"function(e) {                    var startDate = SW.getComponent('startDate');                    e.component.option('min', startDate);                }\",\r\n                \"onInitialized\": \"function(e) {                    var date = new Date();                    var endDate = date.getFullYear() + '-' + 12 + '-' + 31;SW.saveComponent(endDate, 'endDate');                    var startDate = date.getFullYear() + '-' + 1 + '-' + 1;                    e.component.option('min', startDate);                    var showDate = new Date(endDate);                    e.component.dateValue(showDate);                }\",\r\n                \"onValueChanged\": \"function(e) {                    var endDate = e.value.getFullYear() + '-' + (e.value.getMonth() + 1) + '-' + e.value.getDate();                    SW.saveComponent(endDate, 'endDate');                    SW.setDashboardFilter('ToDate', endDate);                }\"\r\n            }\r\n        }\r\n    ],\r\n    \"height\": 72\r\n}",
      "DashboardDefinitionId": "6c406b8d-8a4f-4d87-938a-1e303f4f5b71"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 6,
  "Default": false
}
