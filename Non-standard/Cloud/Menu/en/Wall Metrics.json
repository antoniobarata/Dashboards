{
    "DashboardDefinitionRoles": [],
    "Id": "e32ed79b-ca75-4698-b275-62b37bc73a2a",
    "Name": "Wall Metrics",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "1c10b3fc-8481-46ff-8aea-08052c3e9866",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 6,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":12,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as TomorrowToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as TomorrowDone\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = DATEADD(day, 1, @FromDate)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling1\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Tuesday\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data[\u0027TomorrowToDo\u0027];                var done = i.data[\u0027TomorrowDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)    }\"\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "1d8c7901-106e-48da-b65a-21517881ae6b",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 9,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":30,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays3ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays3Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = DATEADD(day, 4, @FromDate)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Friday\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                var final = SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);                element.append(final);            }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data[\u0027MoreDays3ToDo\u0027];                var done = i.data[\u0027MoreDays3Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "25b12fed-32a1-4665-b0b8-41bd3c287d46",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 6,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":15,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.[User], v.UserId, v.Day, u.HasImage, sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect\\tdj.[User], dj.[UserId],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) \u003c @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)) as Done\\r\\nfrom\\tAnalytics.Job(@CurrentUserId) dj\\r\\nwhere (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by dj.[User], dj.[Date], dj.[UserId]\\r\\n) as v\\r\\nleft join [User] u\\r\\non u.Oid = v.UserId\\r\\ngroup by v.[User], v.[UserId], v.Day, u.HasImage\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\"onContentReady\":\"function prepareDataSource(e) {\\r\\n    var dataSource = e.component.getDataSource();\\r\\n    if (typeof dataSource === \u0027undefined\u0027) return;\\r\\n    if (this.r) return;\\r\\n    var q = dataSource.store().createQuery();\\r\\n    dataSource._items.forEach((e) =\u003e { \\r\\n                                        e.Delayed = 0;\\r\\n                                        e.MondayDone = 0;\\r\\n        e.MondayToDo = 0;\\r\\n                                        e.TuesdayDone = 0;\\r\\n        e.TuesdayToDo = 0;\\r\\n                                        e.WednesdayDone = 0;\\r\\n        e.WednesdayToDo = 0;\\r\\n                                        e.ThursdayDone = 0;\\r\\n        e.ThursdayToDo = 0;\\r\\n                                        e.FridayDone = 0;\\r\\n        e.FridayToDo = 0;\\r\\n                                        if (e.Day === 0) {\\r\\n                                            e.Delayed = e.ToDo;\\r\\n                                        } else if (e.Day === 1) {\\r\\n                                            e.MondayDone = e.Done;\\r\\n                                            e.MondayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 2) {\\r\\n                                            e.TuesdayDone = e.Done;\\r\\n                                            e.TuesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 3) {\\r\\n                                            e.WednesdayDone = e.Done;\\r\\n                                            e.WednesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 4) {\\r\\n                                            e.ThursdayDone = e.Done;\\r\\n                                            e.ThursdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 5) {\\r\\n                                            e.FridayDone = e.Done;\\r\\n                                            e.FridayToDo = e.ToDo;\\r\\n                                        }\\r\\n    });\\r\\n    var data = dataSource._items;\\r\\n    var resultData = groupByUser(data);\\r\\n    e.component.option(\u0027dataSource\u0027, resultData);\\r\\n    this.r = true;\\r\\n    function groupByUser(data) {\\r\\n        var objectResult = {};\\r\\n        data.forEach(row =\u003e {\\r\\n            if (!objectResult[row.UserId]) {\\r\\n                objectResult[row.UserId] = {\\r\\n                    UserId: row.UserId,\\r\\n                    User: row.User,\\r\\n                    HasImage: row.HasImage,\\r\\n                    Delayed: row.Delayed,\\r\\n                    MondayDone: row.MondayDone,\\r\\n                    MondayToDo: row.MondayToDo,\\r\\n                    TuesdayDone: row.TuesdayDone,\\r\\n                    TuesdayToDo: row.TuesdayToDo,\\r\\n                    WednesdayDone: row.WednesdayDone,\\r\\n                    WednesdayToDo: row.WednesdayToDo,\\r\\n                    ThursdayDone: row.ThursdayDone,\\r\\n                    ThursdayToDo: row.ThursdayToDo,\\r\\n                    FridayDone: row.FridayDone,\\r\\n                    FridayToDo: row.FridayToDo\\r\\n                };\\r\\n            } else {\\r\\n                objectResult[row.UserId] = {\\r\\n                    ...objectResult[row.UserId],\\r\\n                    ...objectResult[row.User],\\r\\n                    ...objectResult[row.HasImage],\\r\\n                    Delayed: objectResult[row.UserId].Delayed + row.Delayed,\\r\\n                    MondayDone: objectResult[row.UserId].MondayDone + row.MondayDone,\\r\\n                    MondayToDo: objectResult[row.UserId].MondayToDo + row.MondayToDo,\\r\\n                    TuesdayDone: objectResult[row.UserId].TuesdayDone + row.TuesdayDone,\\r\\n                    TuesdayToDo: objectResult[row.UserId].TuesdayToDo + row.TuesdayToDo,\\r\\n                    WednesdayDone: objectResult[row.UserId].WednesdayDone + row.WednesdayDone,\\r\\n                    WednesdayToDo: objectResult[row.UserId].WednesdayToDo + row.WednesdayToDo,\\r\\n                    ThursdayDone: objectResult[row.UserId].ThursdayDone + row.ThursdayDone,\\r\\n                    ThursdayToDo: objectResult[row.UserId].ThursdayToDo + row.ThursdayToDo,\\r\\n                    FridayDone: objectResult[row.UserId].FridayDone + row.FridayDone,\\r\\n                    FridayToDo: objectResult[row.UserId].FridayToDo + row.FridayToDo\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n        var arrayResult = [];\\r\\n        Object.values(objectResult).forEach((value) =\u003e arrayResult.push(value));\\r\\n        return arrayResult;\\r\\n    }\\r\\n}\",\"stateStoring\":{\"enabled\":false},\"height\":\"213\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {SK.showImage(e, \u0027user\u0027, \u0027small\u0027, i.data[\u0027HasImage\u0027], i.data[\u0027User\u0027], i.data[\u0027UserId\u0027])}\",\"width\":30},{\"dataField\":\"User\",\"name\":\"User\",\"caption\":\"User\",\"width\":\"100%\"},{\"dataField\":\"Delayed\",\"name\":\"Delayed\",\"caption\":\"Delayed\",\"alignment\":\"center\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"width\":80},{\"name\":\"Monday\",\"caption\":\"Monday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027MondayToDo\u0027        ];                var done = i.data[\u0027MondayDone\u0027        ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);    }\"},{\"name\":\"Tuesday\",\"caption\":\"Tuesday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027TuesdayToDo\u0027    ];                var done = i.data[\u0027TuesdayDone\u0027    ];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"caption\":\"Wednesday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027WednesdayToDo\u0027];                var done = i.data[\u0027WednesdayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"caption\":\"Thursday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027ThursdayToDo\u0027];                var done = i.data[\u0027ThursdayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"caption\":\"Friday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data[\u0027FridayToDo\u0027];                var done = i.data[\u0027FridayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"}]}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "095beb2d-6d6e-4e9f-afdc-5bc9117f9316",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 6,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":6,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.Client, v.ClientId, v.Day, cc.HasImage, sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect\\tdj.[Client], dj.[ClientId],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) \u003c @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)) as Done\\r\\nfrom\\tAnalytics.Job(@CurrentUserId) dj\\r\\nwhere (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by dj.[Client], dj.[Date], dj.[ClientId]\\r\\n) as v\\r\\nleft join [CommercialClient] cc\\r\\non cc.Oid = v.ClientId\\r\\ngroup by v.Client, v.ClientId, v.Day, cc.HasImage\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\"onContentReady\":\"function prepareDataSource(e) {\\r\\n    var dataSource = e.component.getDataSource();\\r\\n    if (typeof dataSource === \u0027undefined\u0027) return;\\r\\n    if (this.r) return;\\r\\n    var q = dataSource.store().createQuery();\\r\\n    dataSource._items.forEach((e) =\u003e { \\r\\n                                        e.Delayed = 0;\\r\\n                                        e.MondayDone = 0;\\r\\n                                        e.MondayToDo = 0;\\r\\n                                        e.TuesdayDone = 0;\\r\\n                                        e.TuesdayToDo = 0;\\r\\n                                        e.WednesdayDone = 0;\\r\\n                                        e.WednesdayToDo = 0;\\r\\n                                        e.ThursdayDone = 0;\\r\\n                                        e.ThursdayToDo = 0;\\r\\n                                        e.FridayDone = 0;\\r\\n                                        e.FridayToDo = 0;\\r\\n                                        if (e.Day === 0) {\\r\\n                                            e.Delayed = e.ToDo;   \\r\\n                                        } else if (e.Day === 1) {\\r\\n                                            e.MondayDone = e.Done;\\r\\n                                            e.MondayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 2) {\\r\\n                                            e.TuesdayDone = e.Done;\\r\\n                                            e.TuesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 3) {\\r\\n                                            e.WednesdayDone = e.Done;\\r\\n                                            e.WednesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 4) {\\r\\n                                            e.ThursdayDone = e.Done;\\r\\n                                            e.ThursdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 5) {\\r\\n                                            e.FridayDone = e.Done;\\r\\n                                            e.FridayToDo = e.ToDo;\\r\\n                                        }\\r\\n    });\\r\\n    var data = dataSource._items;\\r\\n    var resultData = groupByUser(data);\\r\\n    e.component.option(\u0027dataSource\u0027, resultData);\\r\\n    this.r = true;\\r\\n    function groupByUser(data) {\\r\\n        var objectResult = {};\\r\\n        data.forEach(row =\u003e {\\r\\n            if (!objectResult[row.ClientId]) {\\r\\n                objectResult[row.ClientId] = {\\r\\n                    ClientId: row.ClientId,\\r\\n                    Client: row.Client,\\r\\n                    HasImage: row.HasImage,\\r\\n                    Delayed: row.Delayed,\\r\\n                    MondayDone: row.MondayDone,\\r\\n                    MondayToDo: row.MondayToDo,\\r\\n                    TuesdayDone: row.TuesdayDone,\\r\\n                    TuesdayToDo: row.TuesdayToDo,\\r\\n                    WednesdayDone: row.WednesdayDone,\\r\\n                    WednesdayToDo: row.WednesdayToDo,\\r\\n                    ThursdayDone: row.ThursdayDone,\\r\\n                    ThursdayToDo: row.ThursdayToDo,\\r\\n                    FridayDone: row.FridayDone,\\r\\n                    FridayToDo: row.FridayToDo\\r\\n                };\\r\\n            } else {\\r\\n                objectResult[row.ClientId] = {\\r\\n                    ...objectResult[row.ClientId],\\r\\n                    ...objectResult[row.Client],\\r\\n                    ...objectResult[row.HasImage],\\r\\n                    Delayed: objectResult[row.ClientId].Delayed + row.Delayed,\\r\\n                    MondayDone: objectResult[row.ClientId].MondayDone + row.MondayDone,\\r\\n                    MondayToDo: objectResult[row.ClientId].MondayToDo + row.MondayToDo,\\r\\n                    TuesdayDone: objectResult[row.ClientId].TuesdayDone + row.TuesdayDone,\\r\\n                    TuesdayToDo: objectResult[row.ClientId].TuesdayToDo + row.TuesdayToDo,\\r\\n                    WednesdayDone: objectResult[row.ClientId].WednesdayDone + row.WednesdayDone,\\r\\n                    WednesdayToDo: objectResult[row.ClientId].WednesdayToDo + row.WednesdayToDo,\\r\\n                    ThursdayDone: objectResult[row.ClientId].ThursdayDone + row.ThursdayDone,\\r\\n                    ThursdayToDo: objectResult[row.ClientId].ThursdayToDo + row.ThursdayToDo,\\r\\n                    FridayDone: objectResult[row.ClientId].FridayDone + row.FridayDone,\\r\\n                    FridayToDo: objectResult[row.ClientId].FridayToDo + row.FridayToDo\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n        var arrayResult = [];\\r\\n        Object.values(objectResult).forEach((value) =\u003e arrayResult.push(value));\\r\\n        return arrayResult;\\r\\n    }\\r\\n}\",\"stateStoring\":{\"enabled\":false},\"height\":\"213\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"onToolbarPreparing\":\"null\",\"selection\":{\"mode\":\"none\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, \u0027client\u0027, \u0027medium\u0027, i.data[\u0027HasImage\u0027], i.data[\u0027Client\u0027], i.data[\u0027ClientId\u0027])}\",\"width\":40},{\"dataField\":\"Client\",\"name\":\"Client\",\"caption\":\"Client\",\"width\":\"100%\"},{\"dataField\":\"Delayed\",\"caption\":\"Delayed\",\"alignment\":\"center\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"width\":80},{\"caption\":\"Monday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) {                 SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);             }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                var toDo = i.data[\u0027MondayToDo\u0027];                var done = i.data[\u0027MondayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);            }\"},{\"name\":\"Tuesday\",\"caption\":\"Tuesday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                var toDo = i.data[\u0027TuesdayToDo\u0027];                var done = i.data[\u0027TuesdayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);            }\"},{\"caption\":\"Wednesday\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+2);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                var toDo = i.data[\u0027WednesdayToDo\u0027];                var done = i.data[\u0027WednesdayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"caption\":\"Thursday\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+3);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                var toDo = i.data[\u0027ThursdayToDo\u0027];                var done = i.data[\u0027ThursdayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"},{\"caption\":\"Friday\",\"headerCellTemplate\":\"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+4);            var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});            SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700\u0027);}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                var toDo = i.data[\u0027FridayToDo\u0027];                var done = i.data[\u0027FridayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                e.append(aux);}\"}]}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "2d79ac6b-937e-4c35-bde4-6d0009b33dfb",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 2,
            "Order": 11,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":38,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":8,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 1 CURRENT_TIMESTAMP as Date\\r\\nfrom CommercialClient\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"100%\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"onContentReady\": \"function r(e) {\\r\\n    if (window.refreshTimeout)\\r\\n        clearTimeout(window.refreshTimeout); \\r\\n    window.refreshTimeout = setTimeout(function () { SW.refreshDashboard(); }, 60000 ) \\r\\n}\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Last Refresh\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM H:mm\",\r\n            \"headerCellTemplate\": \"function (e, i) {            var final = SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027);            e.append(final);    }\",\r\n            \"cellTemplate\": \"function(e, i) {             SW.setAttribute(e, i.text, \u0027style\u0027, \u0027font-size: 18px; font-weight: 700\u0027);}\",\r\n            \"alignment\": \"center\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "a5b26a50-0e4e-42cd-ba28-820263a81a25",
            "Name": "Last 10 Weeks",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":4,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select DATEADD(week, DATEDIFF(day, 0, getdate())/7-19, 0) as Week\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+1, 0) as Week\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"size\": {\r\n        \"height\": 130\r\n    },\r\n    \"title1\": {\r\n        \"text\": \"Last 10 Weeks\",\r\n        \"horizontalAlignment\": \"left\",\r\n        \"font\": {\r\n            \"size\": 17,\r\n            \"family\": \"Varela Round\",\r\n            \"weight\": 400\r\n        }\r\n    },\r\n    \"containerBackgroundColor\": \"#e0e0e0\",\r\n    \"selectedRangeColor\": \"#f5564a\",\r\n    \"dataSourceField\": \"Week\",\r\n    \"scale\": {\r\n        \"minorTickInterval\": \"week\",\r\n        \"tickInterval\": \"week\",\r\n        \"valueType\": \"datetime\",\r\n        \"maxRange\": {\r\n            \"weeks\": 1\r\n        },\r\n        \"marker\": {\r\n            \"separatorHeight\": 0,\r\n            \"textLeftIndent\": 0,\r\n            \"textTopIndent\": 0,\r\n            \"topIndent\": 0\r\n        }\r\n    },\r\n    \"sliderMarker\": {\r\n        \"format\": \"monthAndDay\",\r\n        \"color\": \"#da5859\"\r\n    },\r\n    \"value\": {\r\n        \"length\": {\r\n            \"weeks\": 1\r\n        }\r\n    }\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "38959f67-feb1-446d-841c-8bb46bb6b364",
            "Name": "Pending Jobs",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 6,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":6,\"WidgetRows\":18,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\tdj.[UserId], \\r\\n\\t\\tdj.[User], \\r\\n\\t\\tu.[HasImage] as UserHasImage,\\r\\n\\t\\tdj.Name,\\r\\n\\t\\tdj.[Project], \\r\\n\\t\\tconvert(Date, dj.[Date]) as Date,\\r\\n\\t\\tcc.Name as Client,\\r\\n\\t\\tcc.HasImage as ClientHasImage,\\r\\n\\t\\tcc.Oid as ClientId,\\r\\n        case \\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) \u003c @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, dj.[Date]) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day\\r\\nfrom [CommercialClient] cc, Analytics.Job(@CurrentUserId) dj\\r\\nleft join [User] u\\r\\non u.[Oid] = dj.[UserId]\\r\\nwhere \\tcc.Oid = dj.ClientId and\\r\\n\\t\\t(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5) and\\r\\n\\t\\tdj.[Date] \u003c @ToDate and \\r\\n        (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by dj.[UserId], dj.[User], u.[HasImage], dj.Name, dj.[Project], convert(Date, dj.[Date]), cc.Oid, cc.[Name], cc.HasImage\\r\\norder by convert(Date, dj.[Date]) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": \"485\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": false,\r\n    \"rowAlternationEnabled\": false,\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"ClientId\",\r\n            \"caption\": \"\",\r\n            \"cellTemplate\": \"function(e, i) { SK.showImage(e, \u0027client\u0027, \u0027medium\u0027,i.data[\u0027ClientHasImage\u0027], i.data[\u0027Client\u0027], i.data[\u0027ClientId\u0027]) }\",\r\n            \"width\": 50\r\n        },\r\n        {\r\n            \"dataField\": \"Project\",\r\n            \"name\": \"Project\",\r\n            \"caption\": \"Project\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"UserId\",\r\n            \"caption\": \"\",\r\n            \"cellTemplate\": \"function(e, i) { SK.showImage(e, \u0027user\u0027, \u0027small\u0027,i.data[\u0027UserHasImage\u0027], i.data[\u0027User\u0027], i.data[\u0027UserId\u0027]) }\",\r\n            \"width\": 30\r\n        },\r\n        {\r\n            \"dataField\": \"User\",\r\n            \"name\": \"Name\",\r\n            \"caption\": \"Executor\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"Name\",\r\n            \"name\": \"Name\",\r\n            \"caption\": \"Job\",\r\n            \"width\": \"100%\"\r\n        },\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Date\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM\",\r\n            \"cellTemplate\": \"function(e, i) {                var showDate = i.text;                if (i.data.Day == 0) {                    SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:rgb(247,                65,                45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            } else {                    SW.setAttribute(e, showDate, \u0027style\u0027, \u0027background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600\u0027)            }        }\",\r\n            \"alignment\": \"center\",\r\n            \"width\": 70\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "fb3ba452-9cb5-4b5a-9303-9104e701c06c",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":6,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as TodayToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as TodayDone\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = @FromDate\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Today\",\r\n            \"caption\": \"Monday\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data[\u0027TodayToDo\u0027];                var done = i.data[\u0027TodayDone\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "7761381b-978f-481d-808c-9a53f198589b",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 7,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":18,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays1ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays1Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = DATEADD(day, 2, @FromDate)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Wednesday\",\r\n            \"headerCellTemplate1\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                var final = SW.setAttribute(element, i.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);                element.append(final);            }\",\r\n            \"alignment\": \"center\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data[\u0027MoreDays1ToDo\u0027];                var done = i.data[\u0027MoreDays1Done\u0027];                var aux = done + \u0027 / \u0027 + toDo;                SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)            }\"\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "3ffbaebe-33f9-4767-b568-9ca5f0982501",
            "Name": "Filters",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"colCount\": \"3\",\r\n    \"onContentReady\": \"function(e){ setTimeout(function() {                 SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2019);                 SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);                 SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);                 SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             var searchValue = (                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);                             var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100);                             return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027companies/lookup\u0027,                    null,                    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027                        });return res;                    })                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n                },\r\n                \"placeholder\": \"All companies\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"onValueChanged\": \"function(e){                 if( e.value != null \u0026\u0026 e.value != \u0027\u0027) {                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);            } else {                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);            }                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DivisionId\",\r\n            \"label\": {\r\n                \"text\": \"Division\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);                             let skip = loadOptions.skip || 0;                             let take = loadOptions.take || 20;                             var param = { name:searchValue, skip: skip, take: take            };                             var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027);                             if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,                null,                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027                    });return res;                })            } else if (companyId != null) {                                 param[\u0027companyId\u0027                ] = companyId;                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027                    });return res;                })            }        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n                },\r\n                \"placeholder\": \"All divisions\",\r\n                \"onValueChanged\": \"function(e){                 if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);    } else {                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);    }                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DepartmentId\",\r\n            \"label\": {\r\n                \"text\": \"Department\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                     let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027);                     let skip = loadOptions.skip || 0;                     let take = loadOptions.take || 20;                    var param = { name: searchValue, skip: skip, take: take    };                     var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027);                     var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027);                     if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) {                         param[\u0027divisionId\u0027        ] = divisionId;                        param[\u0027companyId\u0027        ] = companyId;    } else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {                        param[\u0027divisionId\u0027        ] = divisionId;    }                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,    {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027        });return res;    });}\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n                },\r\n                \"placeholder\": \"All departments\",\r\n                \"onValueChanged\": \"function(e){         if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {            SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);} else {            SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "066017f2-7f91-488c-beac-ae060ca2186a",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 8,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select IsNull(sum(iif(dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5, 1, 0)), 0) as MoreDays2ToDo,\\r\\n\\t\\tIsNull(sum(iif(dj.[StateTypeCode] \u003e 5, 1, 0)), 0) as MoreDays2Done\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) = DATEADD(day, 3, @FromDate)\\r\\nand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Thursday\",\r\n            \"headerCellTemplate\": \"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:\u00272-digit\u0027}) + \u0027 \u0027 + today.toLocaleDateString(undefined,{month:\u0027short\u0027});                var final = SW.setAttribute(element, info.column.caption, \u0027style\u0027, \u0027background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027);            element.append(final);        }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {             var toDo = i.data[\u0027MoreDays2ToDo\u0027];            var done = i.data[\u0027MoreDays2Done\u0027];            var aux = done + \u0027 / \u0027 + toDo;            SW.setAttribute(e, aux, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027)        }\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        },
        {
            "Id": "89f5f357-401e-4371-a76b-eda0d789a816",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":6,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select count(dj.[ClientId]) as CountLate\\r\\nfrom Analytics.Job(@CurrentUserId) dj\\r\\nwhere Convert(Date, dj.[Date]) \u003c @FromDate and (dj.[StateTypeCode] = 4 or dj.[StateTypeCode] = 5)\\r\\n\\t\\tand (dj.[CompanyId]  = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DivisionId] = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027) and\\r\\n\\t\\t(dj.[DepartmentId] = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": false,\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Delayed\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, \u0027style\u0027, \u0027background-color: rgb(247, 65, 45); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700\u0027); }\",\r\n            \"alignment\": \"center\",\r\n            \"dataField\": \"CountLate\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setAttribute(e, i.data.CountLate, \u0027style\u0027, \u0027font-size: 15px; font-weight: 700\u0027) }\"\r\n        }\r\n    ]\r\n}",
            "DashboardDefinitionId": "e32ed79b-ca75-4698-b275-62b37bc73a2a"
        }
    ],
    "QueryText": null,
    "UseStore": false,
    "StoreEntity": null,
    "Version": 11,
    "Default": false
}