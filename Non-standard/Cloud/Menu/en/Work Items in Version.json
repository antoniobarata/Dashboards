{
    "DashboardDefinitionRoles": [
        {
            "AccessRoleId": "cb60add0-63f3-4cd3-877c-55993f8661da",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c",
            "AccessRoleName": "Equipa Skills Workflow"
        }
    ],
    "Id": "c6875c63-003e-4bcd-8400-33a226ae788c",
    "Name": "Work Items in Version",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"workspaces\":false},\"fields\":[]}]",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "0ae130d4-89d1-49fa-9bb3-132b5f7afb6b",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"Escolha para Alocar\",\"WidgetType\":\"tag\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":9,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  'Status' as GroupName, \\r\\n        'StatusOid' as GroupId, \\r\\n        ws.Name as 'Name', \\r\\n        ws.Oid  \\r\\n from Document d, WorkflowState ws\\r\\n where ws.Document = d.Oid\\r\\n and d.Name = 'Deliverable'\\r\\n and ws.Name in ('Draft', 'Under Approval', 'To Install', 'Done')\\r\\n \\r\\n group by   ws.Name , ws.Oid\",\"mapping\":{\"groupExpr\":\"GroupName\",\"groupId\":\"GroupId\",\"displayExpr\":\"Name\",\"valueExpr\":\"Oid\"}}},\"Filters\":{},\"QueryConfiguration\":{}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"width\": \"100%\",\n    \"placeholder\": \"Filter ticket status\"\n}",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c"
        },
        {
            "Id": "1b6f8d30-d09e-45a6-ad87-1897f7d90343",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"scheduler\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":22,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  j.Oid, \\r\\n        REVERSE(SUBSTRING(REVERSE(j.Name), 1, CHARINDEX(' ', REVERSE(j.Name)) - 1)) as text,\\r\\n        isnull(j.StateTypeColor, j.StateColor) as Color,\\r\\n        left(j.Name,charindex(' ',j.Name+' ')) + ' - ' +j.State as Number,\\r\\n        j.State as [State],\\r\\n        left(j.Name,charindex(' ',j.Name+' ')-1) as Environment,        \\r\\n        DateAdd(hh, 9, cast(j.EndDate as DateTime)) as startDate, \\r\\n        DateAdd(hh, 18, cast(j.[EndDate] as DateTime)) as endDate,\\r\\n        (select STRING_AGG(convert(nvarchar(max), ass.[User]) +'|'+ ssu.UserName, ',') from  AssignmentType ast, Assignment ass left outer join SecuritySystemUser ssu on ass.[User] = ssu.Oid where ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid) as ExecutorName,\\r\\n        (select STRING_AGG(convert(nvarchar(max), ass.[User]) , ',') from  AssignmentType ast, Assignment ass where ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid) as Executor\\r\\n\\r\\nfrom Analytics.DatamartJob j \\r\\nwhere j.Department = 'Releases'\\r\\n AND j.State not in ('Canceled')\\r\\nAND j.EndDate is not null  \\r\\nAND ('00000000-0000-0000-0000-000000000000' in (@StatusOid) or j.StateId in (@StatusOid))  \\r\\n\\r\\norder by j.EndDate desc\\r\\n             /*[DateFilter]*/ --and j.EndDate between @FromDate and @ToDate /*[/DateFilter]*/\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"StatusOid\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\"height\":\"800\",\"showAllDayPanel\":true,\"crossScrollingEnabled\":true,\"currentView\":\"month\",\"maxAppointmentsPerCell\":\"2\",\"ungroupDataSource\":\"true\",\"onAppointmentContextMenu\":\"function(e) {\\n    e.cancel = true;\\n    var targetedAppointmentData = e.targetedAppointmentData;\\n\\n    SW.preview(e.targetedAppointmentData.Oid, 'job');\\n\\n}\",\"onAppointmentClick\":\"function appointmentClick(e) {\\n    e.cancel = true;\\n    SW.Toastr.toastr_Info('Loading work items...');\\n    var selectedVersion = e.appointmentData.text;\\n    SW.saveComponent(selectedVersion, 'vtc');\\n\\n    var selectedEnvironment = e.appointmentData.Environment;\\n    if (selectedEnvironment = '[TEST]'){\\n        selectedEnvironment = '[PROD-BS]'\\n    }\\n    var dataSource = e.component._options.dataSource;\\n    debugger;\\n    var versionFiltered = dataSource.filter(x => (x.Environment == selectedEnvironment && x.State == 'Done'));\\n    var i = versionFiltered.indexOf(versionFiltered.find(x => x.text == selectedVersion)) + 1;\\n    var versionFromCompare = versionFiltered[i].text;\\n    SW.saveComponent(versionFromCompare, 'vfc');\\n\\n\\n    SW.executeAPI('GET', 'integration-workflows/9384b6f5-0487-483d-ace4-e5af60527da2/execute').then(x => {\\n        var fromVersion = SW.getComponent('vfc');\\n        var toVersion = SW.getComponent('vtc');\\n        x.forEach(x => x.name = x.name.substring(0, x.name.length - 2).split(' ').slice(-1).join(' '));\\n        var existsVersion = x.find(x => x.name.includes(fromVersion));\\n        if (existsVersion) {\\n            var fromId = existsVersion.artifacts.find(a => a.alias == 'Skills PreRelease').definitionReference.version.id;\\n            var toId = x.find(x => x.name.includes(toVersion)).artifacts.find(a => a.alias == 'Skills PreRelease').definitionReference.version.id;\\n\\n            SW.executeAPI('POST', 'integration-workflows/d12cbdfd-b22d-48f4-959f-06db4cb89d85/execute', null, '{\\\\\\\"fromBuild\\\\\\\":\\\\\\\"' + fromId + '\\\\\\\", \\\\\\\"toBuild\\\\\\\":\\\\\\\"' + toId + '\\\\\\\"}').then(\\n                workItems => {\\n\\n                    Promise.all(workItems.map(wi => getWorkItem(wi))).then(x => {\\n                        SW.saveComponent(workItems, 'wiList');\\n                        var wiGrid = SW.getComponent('workItemsGrid');\\n                        wiGrid.refresh();\\n\\n                    });\\n\\n                }\\n            )\\n        }\\n        else { SW.Toastr.toastr_Warning('Could not load work items list. The version to be compared is no longer available in Azure DevOps. Please check newer versions.') }\\n\\n    });\\n    function getWorkItem(wi) {\\n        return fetch('https://dev.azure.com/{organization}/{project}/_apis/wit/workitems/' + wi.id + '?api-version=5.1',\\n            {\\n                method: 'GET',\\n                headers: { 'Authorization': '{Auth token}' }\\n            })\\n            .then(response => { return response.json() })\\n            .then(allResult =>\\n                getResponse(allResult, wi)\\n            )\\n    };\\n\\n    async function getResponse(allResult, wi) {\\n        debugger;\\n        if (allResult.fields['Custom.Ticket'].length < 21 && 0 < allResult.fields['Custom.Ticket'].length) {\\n            await SW.executeAPI('GET', 'companies/dfa96921-8550-4820-b96e-53b448c91d30/jobs/number?number=' + allResult.fields['Custom.Ticket'])\\n                .then(ticket => {\\n                    wi.ticketId = ticket.Id;\\n                    wi.clientId = ticket.ClientId;\\n                    wi.clientName = ticket.ClientName;\\n                    wi.clientHasImage = ticket.ClientHasImage;\\n                })\\n        }\\n\\n        wi.state = allResult.fields['System.State'];\\n        wi.ticket = allResult.fields['Custom.Ticket'];\\n        wi.name = allResult.fields['System.Title'];\\n        return wi\\n    }\\n}\"}",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c"
        },
        {
            "Id": "e94f0880-247f-4be5-a8fe-53f90bc6299b",
            "Name": "Feed",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 6,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":9,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":27,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\" select  \\n        sum(case when j.[State] in ('Under Analysis','Request more Information','Request Approval' ) then 1 else 0 end) as TotalTickets,\\n        sum(case when j.[State] = 'Under Analysis' then 1 else 0 end) as TotalUnderAnalysis,\\n        sum(case when j.[State] = 'Request more Information' then 1 else 0 end) as TotalRequestMoreInformation,\\n        sum(case when j.[State] = 'Request Approval' then 1 else 0 end) as TotalRequestApproval,\\n        sum(case when j.[State] = 'Open' then 1 else 0 end) as TotalOpen\\n\\n\\nfrom    Analytics.DatamartJob j,\\n        Deliverable d, \\n        (\\n            select \\n                  DISTINCT jp.JobOid,\\n                  dep1.Name as PostUserDepartment\\n            from [User] us, Department dep1, (\\n                                    SELECT DISTINCT\\n                                                p.Oid as PostOid,\\n                                                p.DocumentOid as JobOid,\\n                                                p.CreatedBy as PostCreatedBy\\n\\n                                    FROM        Post p\\n                                        INNER JOIN\\n                                        (\\n                                            SELECT \\n                                                    DocumentOid, \\n                                                    MAX(CreatedOnUtc) AS LatestPostDate\\n                                            FROM Post\\n                                            GROUP BY DocumentOid\\n                                        \\n                                        ) LastActivityTable \\n                                    ON p.DocumentOid = LastActivityTable.DocumentOid \\n                                    AND p.CreatedOnUtc = LastActivityTable.LatestPostDate\\n                                    AND DocumentTypeName = 'deliverable'\\n                                    ) jp\\n            where jp.PostCreatedBy = us.Oid AND\\n            us.Department = dep1.Oid\\n        ) jp2\\nwhere   j.Oid = d.Oid AND\\n    jp2.JobOid = j.Oid AND\\n    j.Department in ('Support', 'Client Service') AND\\n    ((j.[State] in ('Under Analysis') AND DATEDIFF(day,j.ModifiedOn,getdate()) > 5 ) or (j.[State] in ('Open'))\\n    or (j.[State] in ('Request more information', 'Request Approval') AND jp2.PostUserDepartment = 'Client')) \\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"size\": \"900px\",\n    \"items\": [\n        {\n            \"datafield\": \"\",\n            \"template\": \"function(data, itemElement) {                  var a = document.createElement('div');        itemElement.append(a);        SW.setAttribute(a,            null, 'style', 'display:flex; justify-content: space-evenly;', false);            var h = document.createElement('div');            a.append(h);            SW.setAttribute(h,            null, 'style', 'display:flex', false);                var f = document.createElement('div');                SW.setAttribute(f,            null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h.append(f);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-dev-we.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[                0            ] === 'x-api-version') { f.innerHTML = 'DEV: ' + pair[                    1                ]; f.style.backgroundColor = '#0ea54a'; f.style.maxWidth = '200px';            }        }    });            var h1 = document.createElement('div');            a.append(h1);            SW.setAttribute(h1,    null, 'style', 'display:flex', false);                var f1 = document.createElement('div');                SW.setAttribute(f1,    null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h1.append(f1);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-test-we.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[        0    ] === 'x-api-version') { f1.version = pair[1]; f1.innerHTML = 'TEST: ' + pair[            1        ]; f1.style.backgroundColor = '#f3cd08'; f1.style.maxWidth = '200px';    }}});            var h2 = document.createElement('div');            a.append(h2);            SW.setAttribute(h2,null, 'style', 'display:flex', false);                var f2 = document.createElement('div');                SW.setAttribute(f2,null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h2.append(f2);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-br-prod-bs.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[0] === 'x-api-version') { f2.innerHTML = 'BS: ' + pair[    1]; f2.style.backgroundColor = '#005b9e'; f2.style.maxWidth = '200px';}}});                            var h3 = document.createElement('div');            a.append(h3);            SW.setAttribute(h3,null, 'style', 'display:flex', false);                var f3 = document.createElement('div');                SW.setAttribute(f3,null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h3.append(f3);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-eastus.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[0] === 'x-api-version') {  f3.innerHTML = 'EUS: ' + pair[1];  f3.style.backgroundColor = '#005b9e'; f3.style.maxWidth = '200px';}}});            var h4 = document.createElement('div');            a.append(h4);            SW.setAttribute(h4,null, 'style', 'display:flex', false);                var f4 = document.createElement('div');                SW.setAttribute(f4,null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h4.append(f4);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-prod-we.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[0] === 'x-api-version') { f4.innerHTML = 'WE: ' + pair[1];  f4.style.backgroundColor = '#005b9e'; f4.style.maxWidth = '200px';}}});            var h5 = document.createElement('div');            a.append(h5);            SW.setAttribute(h5,null, 'style', 'display:flex', false);                var f5 = document.createElement('div');                SW.setAttribute(f5,null, 'class', 'module-tags module-tags-dot module-tags-text', false);                h5.append(f5);                fetch(\\\"https://cors-anywhere.herokuapp.com/https://apiv2-playground-southeastasia.skillsworkflow.com/api/diagnostics/ping\\\").then(response => { for(var pair of response.headers.entries()) {                            if (pair[0] === 'x-api-version') {  f5.innerHTML = 'SEAS: ' + pair[1];  f5.style.backgroundColor = '#005b9e'; f5.style.maxWidth = '200px';}}});}\"\n        }\n    ]\n}",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c"
        },
        {
            "Id": "f950f893-b99e-4b72-aa10-5f39c1eaeec8",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":36,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":12,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[{\\\"name\\\":\\\"\\\"}],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"colCount\": \"3\",\n    \"items\": [\n        {\n            \"colSpan\": 2,\n            \"dataField\": \"WorkItem\",\n            \"label\": {\n                \"text\": \"Search for work item\"\n            },\n            \"validationRules\": [\n                {\n                    \"type\": \"required\",\n                    \"message\": \"Work item is required\"\n                },\n                {\n                    \"type\": \"async\",\n                    \"message\": \"Finding workItem is already registered\",\n                    \"validationCallback\": \"function(params) {                                                 var body = { \\\"Query\\\": \\\"select  duf.[Build] from Deliverable_UserFields duf where duf.[Work Item] = @WorkItem and duf.[Build] is not null\\\", \\\"Parameters\\\": { \\\"WorkItem\\\": params.value } };                      return   SW.executeAPI('POST', 'analytics/query/execute',null, body)                        .then(build => { debugger;                           if(build.Data[0]){                                SW.Toastr.toastr_Success('Work Item included in version: '+ build.Data[0].Build);   return build.Data[0].Build                         }                             else {                         debugger;      SW.Toastr.toastr_Error('Could not found the Work Item build version.');                              }                            }                        )                 }\"\n                }\n            ]\n        },\n        {\n            \"itemType\": \"button\",\n            \"horizontalAlignment\": \"left\",\n            \"buttonOptions\": {\n                \"text\": \"Search\",\n                \"icon\": \"fal fa-search\",\n                \"useSubmitBehavior\": true\n            }\n        }\n    ]\n}",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c"
        },
        {
            "Id": "ebc6a98d-f40d-43d6-a25e-c59024b1184b",
            "Name": "Work items between versions",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 8,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":2,\"WidgetRows\":24,\"WidgetColumns\":16,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"select  1\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Companies123\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"disabled\": false,\n    \"selection\": {\n        \"mode\": \"single\"\n    },\n    \"allowFiltering\": true,\n    \"searchPanel\": {\n        \"visible\": true,\n        \"placeholder\": \"Search by ticket, work item or work item status\",\n        \"width\": 300\n    },\n    \"groupPanel\": {\n        \"visible\": false\n    },\n    \"headerFilter\": {\n        \"visible\": true\n    },\n    \"scrolling\": {\n        \"mode\": \"virtual\"\n    },\n    \"columnMinWidth\": \"50\",\n    \"stateStoring\": {\n        \"enabled\": \"true\"\n    },\n    \"onToolbarPreparing\": \"function(e) {     \\n    SW.saveComponent(e.component, 'usersGrid');\\n    }\",\n    \"height\": \"900\",\n    \"columns\": [\n        {\n            \"dataField\": \"clientName\",\n            \"caption\": \"\",\n            \"cellTemplate\": \"function(e, i) {debugger; if(i.text == '') return;                   var h = document.createElement('div'); SW.showImage(h, 'client','medium',i.data.clientHasImage, i.data.clientName, i.data.clientId);                e.appendChild(h);            }\",\n            \"width\": 40\n        },\n        {\n            \"dataField\": \"ticket\",\n            \"caption\": \"Ticket\",\n            \"width\": 200\n        },\n        {\n            \"caption\": \"VS Stage\",\n            \"dataField\": \"state\",\n            \"width\": 150\n        },\n        {\n            \"dataField\": \"id\",\n            \"width\": 100,\n            \"caption\": \"Work Item\"\n        },\n        {\n            \"dataField\": \"name\",\n            \"caption\": \"Name\"\n        }\n    ],\n    \"onCellClick\": \"function(e) {\\n    if (e.rowType === 'data' && e.column.caption == 'Work Item') {\\n        window.open('https://dev.azure.com/{organization}/{project}/_workitems/edit/' + e.data.id);\\n    }\\n    if (e.rowType === 'data' && e.column.caption == 'Ticket') {\\n        SW.executeAPI('GET', 'companies/dfa96921-8550-4820-b96e-53b448c91d30/jobs/number?number=' + e.cellElement.innerText).then(x => { SW.preview(x.Id, 'job') });\\n    }\\n}\",\n    \"onContentReady\": \"function onContentReady(e) { SW.saveComponent(e.component, 'workItemsGrid') }\",\n    \"dataSource\": {\n        \"load\": \"function(e){\\n    var data = SW.getComponent('wiList');\\n    if (data){\\n        return data\\n    } \\n}\"\n    },\n    \"columnAutoWidth\": \"true\",\n    \"width\": \"100%\"\n}",
            "DashboardDefinitionId": "c6875c63-003e-4bcd-8400-33a226ae788c"
        }
    ],
    "QueryText": null,
    "UseStore": false,
    "StoreEntity": null,
    "Version": 0,
    "Default": false
}