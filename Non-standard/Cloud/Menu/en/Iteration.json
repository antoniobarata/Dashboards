{
  "DashboardDefinitionRoles": [
      {
          "AccessRoleId": "cb60add0-63f3-4cd3-877c-55993f8661da",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11",
          "AccessRoleName": "Equipa Skills Workflow"
      }
  ],
  "Id": "f23860a2-3270-49c1-aa28-b83f0e0a7e11",
  "Name": "Iteration",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "Operations",
  "DocumentsConfiguration": "{\n    \"entity\": \"Operations\",\n    \"operations\": {\n        \"read\": {\n            \"endpoint\": \"\"\n        },\n        \"update\": {\n            \"endpoint\": \"\",\n            \"model\": {}\n        },\n        \"create\": {\n            \"endpoint\": \"\",\n            \"model\": {}\n        },\n        \"patch\": {\n            \"endpoint\": \"\",\n            \"model\": [\n                {\n                    \"field\": \"\",\n                    \"caption\": \"\",\n                    \"type\": \"\"\n                }\n            ]\n        },\n        \"remove\": {\n            \"endpoint\": \"\"\n        },\n        \"lookup\": {\n            \"endpoint\": \"\"\n        },\n        \"lookupById\": {\n            \"endpoint\": \"\"\n        }\n    },\n    \"layout\": {\n        \"create\": {},\n        \"read\": {},\n        \"patch\": {}\n    },\n    \"customDocument\": {\n        \"useCustomStyle\": true,\n        \"mainColor\": \"red\",\n        \"secondaryColor\": \"yellow\",\n        \"imageClass\": \"far fa-crown\",\n        \"namePlural\": \"Operations\",\n        \"name\": \"Operations\",\n        \"systemName\": \"Operations\"\n    },\n    \"availableOptions\": {\n        \"feed\": false,\n        \"info\": true,\n        \"files\": false,\n        \"userfields\": false,\n        \"dashboard\": false\n    }\n}",
  "Templates": [],
  "DashboardDefinitionComponents": [
      {
          "Id": "bf8f1b5f-4940-4f5e-bb62-011c0a8e3c70",
          "Name": "Team Effort ",
          "Active": true,
          "UseQuery": false,
          "Query": "",
          "Size": 7,
          "Order": 2,
          "Parameters": "[{\"WidgetSubTitle\":\"Iteration effort per developer\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":28,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"boards\":{\"type\":\"querytext\",\"value\":\"select distinct w.[Name], \\n\\t\\tw.Oid, \\n\\t\\tISNULL(w.Color, wst.Color) as color\\n\\tfrom WorkflowState w inner join [Document] d on w.[Document] = D.Oid\\n\\t\\tinner join WorkflowStateType wst on w.WorkflowStateType = wst.Oid\\n\\twhere w.GCRecord is null and d.GCRecord is null\\n\\t\\t\\tand d.Name = 'Deliverable'\\n\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in @workflowStateIds or w.Oid in @workflowStateIds)\\n\\t\\t\\tand w.Oid in ('700451ed-e58f-4cdb-abaa-4d0707fe4b16','5682701a-e88d-4bf4-bcba-5114c425aa9c','da28d50d-f2fa-4a93-9774-54520a131521','17a1c7f2-5a34-4ba9-a912-689f7db28e8d')\\n\",\"mapping\":{\"id\":\"Oid\",\"title\":\"Name\",\"date\":\"endDate\"}},\"items\":{\"type\":\"querytext\",\"value\":\"with briefs as (\\r\\nselect  dB.DocumentOid, dB.ActionsJson, ISJSON(dB.ActionsJson) as ValidJson, db.[Text], db.PlainText\\r\\n\\t\\tfrom DocumentBrief dB \\r\\n\\t\\twhere dB.DocumentTypeName = 'deliverable'\\r\\n)\\r\\nselect D.Oid\\r\\n       ,D.[Number] as JobNumber\\r\\n\\t ,D.[NameAndExternalId] as JobName\\r\\n\\t, CONVERT(VARCHAR(6), D.AgreedDate, 6) as EndDate\\r\\n\\t  ,U.Name as UserName\\r\\n\\t  ,U.Oid as UserId\\r\\n\\t  ,At.Name as AssignmentTypeName\\r\\n        ,A.[Workload] as Workload\\r\\n\\t,D.[WorkflowState] as WorkflowStateId\\r\\n\\t,wst.Name as WorkflowStateName\\r\\n\\t,isnull(w.Color, WST.Color) as WorkflowStateColor,\\r\\n\\tSUBSTRING(B.PlainText, 1, 100) as Brief,\\r\\n\\t(SELECT FORMATMESSAGE('http://localhost:30449/api/commercialclients/%s/imageStream', CONVERT(nvarchar(50), D.Client)) ) as ImageSrc\\r\\n\\r\\n  from Deliverable D\\r\\n\\tinner join Assignment A ON D.Oid = A.DocumentOid\\r\\n\\tinner join WorkflowState W ON D.WorkflowState = W.Oid\\r\\n\\tinner join  WorkflowStateType WST ON W.WorkflowStateType = WST.Oid\\r\\n\\tinner join  AssignmentType AT ON A.AssignmentType = AT.Oid\\r\\n\\tinner join [User] U on A.[User] = U.Oid\\r\\n\\tleft join briefs B on D.Oid = B.DocumentOid\\r\\n\\tWHERE\\tAT.Name = 'Executor'\\r\\n\\t\\t\\tand A.DocumentTypeName = 'Skill.Module.BusinessObjects.Deliverable'\\r\\n\\t\\t\\tand A.[User] = @userId\\r\\n\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in @workflowStateIds or D.WorkflowState in @workflowStateIds)\\r\\n\\t\\t--\\tand (d.EntryDateUtc between @startDate and @endDate or d.AgreedDateUtc between @startDate and @endDate or @startDate between d.EntryDateUtc and d.AgreedDateUtc)\\r\\n\\r\\n\",\"mapping\":{\"id\":\"Oid\",\"title\":\"JobName\",\"boardId\":\"WorkflowStateId\",\"boardName\":\"WorkflowStateName\",\"boardColor\":\"WorkflowStateColor\",\"imageSrc\":\"ImageSrc\",\"date\":\"EndDate\",\"effort\":\"Workload\",\"description\":\"Brief\"}},\"main\":{\"type\":\"querytext\",\"value\":\"select  ssu.UserName as Developer,\\n\\t\\tsum(case when duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate then 1 else 0 end) as Count,\\n        sum(case when j.[State] = 'Scheduled for Development' and duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate then d.Effort else 0 end) as ScheduledForDevelopmentEffort,\\n        sum(case when j.[State] = 'Under Development' and duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate then d.Effort else 0 end) as UnderDeveplomentEffort,\\n        sum(case when j.[State] = 'Under Development' and (duf.[Iteration Date] >= (cast(@FromDate as datetime) - 7) and duf.[Iteration Date] < cast(@ToDate as datetime) - 7) then d.Effort else 0 end) as UnderDeveplomentEffortLastWeek,\\n        sum(case when j.[State] in ('In QA Tests', 'To Install', 'PM Tests', 'Request UAT', 'Request Approval', 'Closed') and duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate then d.Effort else 0 end) as DevelopedEffort\\nfrom    Analytics.DatamartJob j,  \\n        Deliverable_UserFields duf,    \\n        Assignment ass, AssignmentType ast,\\n        [User] u, SecuritySystemUser ssu, Department dep,\\n\\t\\tDeliverable d\\nwhere   ass.DocumentOid = j.Oid and\\n        ass.AssignmentType = ast.Oid and\\n        ast.Name = 'Executor' and\\n        u.Oid = ass.[User] and\\n        ssu.Oid = u.Oid and\\n        duf.Oid = j.Oid and\\n        j.State != 'Canceled' and \\n        dep.Oid = u.Department and\\n        dep.Name in ('Operations', 'Development', 'DevOps') and\\n        duf.[Iteration Date] >= dateadd(day, -7, @FromDate) and duf.[Iteration Date] < @ToDate\\n\\t\\tand d.Oid = j.Oid\\ngroup by ssu.UserName\\norder by Developer\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
          "DashboardComponentType": {
              "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
              "Name": "Generic Dashboard",
              "ComponentTypeNumber": 42
          },
          "AnalyticsApiUrl": "",
          "Configuration": "{\n    \"size\": {\n        \"height\": 200\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 12,\n                \"family\": \"Varela Round\"\n            }\n        },\n        \"grid\": {\n            \"visible\": false\n        },\n        \"visualRange\": {\n            \"endValue\": 50\n        },\n        \"constantLineStyle\": {\n            \"label\": {\n                \"text\": \"\",\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"size\": \"8\"\n                }\n            },\n            \"width\": 1,\n            \"dashStyle\": \"dash\"\n        },\n        \"constantLines\": [\n            {\n                \"value\": 24,\n                \"color\": \"#f7412e\"\n            }\n        ]\n    },\n    \"commonSeriesSettings\": {\n        \"barWidth\": 25,\n        \"type\": \"stackedBar\",\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"showForZeroValues\": false,\n            \"visible\": true,\n            \"font\": {\n                \"size\": 10,\n                \"family\": \"Varela Round\"\n            },\n            \"backgroundColor\": \"#00000000\"\n        },\n        \"argumentField\": \"Developer\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 10,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"Count\",\n            \"name\": \"Tickets\",\n            \"stack\": \"Tickets\",\n            \"color\": \"#cccccc\",\n            \"barWidth\": 10,\n            \"label\": {\n                \"position\": \"outside\",\n                \"font\": {\n                    \"color\": \"#aaaaaa\"\n                },\n                \"verticalOffset\": 10\n            }\n        },\n        {\n            \"valueField\": \"DevelopedEffort\",\n            \"name\": \"Developed\",\n            \"stack\": \"Efforts\",\n            \"color\": \"#97c95c\"\n        },\n        {\n            \"valueField\": \"UnderDeveplomentEffortLastWeek\",\n            \"name\": \"Previous week Under Deveploment\",\n            \"stack\": \"Efforts\",\n            \"color\": \"#cccccc\"\n        },\n        {\n            \"valueField\": \"ScheduledForDevelopmentEffort\",\n            \"name\": \"Scheduled for Development\",\n            \"stack\": \"Efforts\",\n            \"color\": \"#ffc720\"\n        },\n        {\n            \"valueField\": \"UnderDeveplomentEffort\",\n            \"name\": \"Under Development\",\n            \"stack\": \"Efforts\",\n            \"color\": \"#446fd2\"\n        }\n    ]\n}",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
      },
      {
          "Id": "3f787a7b-9472-41a6-9675-0f9a2c034e87",
          "Name": "Tickets for iteration",
          "Active": true,
          "UseQuery": false,
          "Query": null,
          "Size": 12,
          "Order": 5,
          "Parameters": "[{\"WidgetSubTitle\":\"Tickets requested to be developed\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":10,\"WidgetRows\":26,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed Under Development\",\"metricFieldValue\":\"DelayedUnderDevelopmentJobsGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      j.Oid,\\n            j.[State] as Stage,\\n            j.NameAndExternalId as Job,\\n            j.[Date] as EndDate,\\n            d.Effort,\\n            d.Priority,\\n            duf.[Work Item] as WorkItem,\\n            duf.Iteration as Iteration,\\n            '' as IterationNo,\\n            duf.[Iteration Date] as IterationDate,\\n            isnull(ws.Color, wst.Color) as Color,\\n            datediff(day, getdate(), j.[Date]) as Days,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a')) as ExecutorId,\\n            (select STRING_AGG(convert(nvarchar(50), u.[Name]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a')) as ExecutorName,\\n            (select STRING_AGG(convert(nvarchar(50), u.[HasImage]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a')) as ExecutorHasImage,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Requester' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a', '95E7DA36-DA7E-44A1-A56D-D6BADC276ABB')) as RequesterId,\\n            (select STRING_AGG(convert(nvarchar(50), u.[Name]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Requester' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a', '95E7DA36-DA7E-44A1-A56D-D6BADC276ABB')) as RequesterName,\\n            (select STRING_AGG(convert(nvarchar(50), u.[HasImage]), ',') from Assignment ass, AssignmentType ast, [User] u where \\n                ass.DocumentOid = j.Oid and ast.Name = 'Requester' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n                u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB','B05216A3-0B44-4BD8-87E5-3970E28A0D47','ff7a10a2-db3b-4c29-84a9-90e30d52691a', '95E7DA36-DA7E-44A1-A56D-D6BADC276ABB')) as RequesterHasImage,\\n            j.Client as ClientName,\\n            j.ClientId,\\n            cc.HasImage as ClientHasImage\\nfrom        Analytics.DatamartJob j, \\n            Deliverable d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowState and\\n            duf.Oid = j.Oid and\\n            wst.Oid = ws.WorkflowStateType and\\n            duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
          "DashboardComponentType": {
              "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
              "Name": "Generic Dashboard",
              "ComponentTypeNumber": 42
          },
          "AnalyticsApiUrl": "globalQuery/Development - Current development/execute",
          "Configuration": "{\"stateStoring\":{\"enabled\":\"true\"},\"headerFilter\":{\"visible\":true},\"editing\":{\"mode\":\"cell\",\"allowUpdating\":true},\"height\":\"700\",\"keyExpr\":\"Oid\",\"onToolbarPreparing\":\"function(e) {\\n    SW.saveComponent(e.component, 'dataGrid');\\n    e.toolbarOptions.items.unshift({\\n        location: 'after',\\n        template: 'toggleHeaderFilterButtonTemplate'\\n    });\\n\\n    e.toolbarOptions.items.unshift({\\n        widget: 'dxButton',\\n        location: 'after',\\n        options: {\\n            icon: 'plus',\\n            onClick: function () {\\n                SkillsWorkflow.createNewDocument('job');\\n            }\\n        }\\n    });\\n\\n    e.toolbarOptions.items.unshift({\\n        location: 'after',\\n        name: 'getWorkItems',\\n        widget: \\\"dxDateBox\\\",\\n        options: {\\n            icon: 'fal fa-clipboard-list-check',\\n            placeholder: 'Set Iteration...',\\n            applyValueMode: 'useButtons',\\n            disabledDates: function (args) {\\n                var dayOfWeek = args.date.getDay();\\n                var isWeekend = args.view === \\\"month\\\" && (dayOfWeek === 0 || dayOfWeek === 6);\\n                if (isWeekend) return true;\\n            },\\n            onValueChanged: function (event) {\\n                async function getIteration(iterationDate) {\\n                    var urlIteration = 'https://dev.azure.com/{organization}/{project}/{team}/_apis/work/teamsettings/iterations';\\n                    var azureAuth = '{Auth token}'\\n                    var getIterations = await fetch(urlIteration, { method: \\\"GET\\\", headers: {\\\"Authorization\\\": azureAuth}});\\n                    var iterations = await getIterations.json();\\n                    var iteration = iterations.value.find(i => {\\n                        if (+iterationDate >= +(new Date(i.attributes.startDate)) && +iterationDate <= +(new Date(i.attributes.finishDate)))\\n                            return i;\\n                    });\\n                    return iteration.name;\\n                }\\n                async function updateIteration(workItem, iteration) {\\n                    var urlUpdate = 'https://dev.azure.com/{organization}/{project}/_apis/wit/workitems/' + workItem + '?api-version=5.0';\\n                    var azureAuth = '{Auth token}'\\n                    var iterationToUpdate = 'Skill\\\\\\\\\\\\\\\\' + iteration;\\n                    var updateBody = '[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/System.IterationPath\\\",\\\"from\\\":null,\\\"value\\\":\\\"' + iterationToUpdate + '\\\"}]';\\n                    await fetch(urlUpdate, { method: \\\"PATCH\\\", headers: { \\\"Authorization\\\": azureAuth, \\\"Content-Type\\\": \\\"application/json-patch+json\\\" }, body: updateBody});\\n                }\\n                async function setIteration(tickets, iterationDate)\\n                {\\n                    var iteration = await getIteration(iterationDate);\\n                    tickets.forEach(t => {\\n                        SW.executeAPI('PUT', 'v3/documentUserFieldValues', null, { 'DocumentTypeName': 'Deliverable', 'DocumentId': t.Oid, 'DocumentUserFieldValues': [{ 'ColumnName': 'Iteration Date', 'ColumnDataTypeId': 1, 'Value': iterationDate }] });\\n                        if (t.WorkItem) \\n                            updateIteration(t.WorkItem, iteration);\\n                    });\\n                }\\n\\n                var dataGrid = SW.getComponent('dataGrid');\\n                var selectedItems = dataGrid.getSelectedRowsData();\\n                var iterationDate = new Date(event.value + 'Z');\\n                setIteration(selectedItems, iterationDate);\\n            }\\n        }\\n    });\\n    e.toolbarOptions.items.unshift({\\n        widget: 'dxCheckBox',\\n        location: 'after',\\n        name: 'AzureData',\\n        options: {\\n            value: false,\\n            text: 'Work Items',\\n            onInitialized: function (e) { SW.saveComponent(e, 'AzureData') },\\n            onValueChanged: function (e) {\\n                var grid = SW.getComponent('dataGrid');\\n                if (e.value == true) {\\n                    grid.columnOption('VS Stage', 'visible', true);\\n                    grid.columnOption('Iteration #', 'visible', true);\\n                }\\n                if (e.value == false) {\\n                    grid.columnOption('VS Stage', 'visible', false);\\n                    grid.columnOption('Iteration #', 'visible', false);\\n                }\\n            }\\n        }\\n    });\\n}\",\"onRowUpdating\":\"function(e) {\\n    if (e.newData.Effort) {\\n        var body = '{ \\\"Effort\\\": { \\\"Value\\\":' + e.newData.Effort + '} }';\\n        SW.executeAPI('PATCH', 'jobs/' + e.key, null, body);\\n        var urlEffortUpdate = 'https://dev.azure.com/{organization}/{project}/_apis/wit/workitems/' + e.oldData.WorkItem + '?api-version=5.0';\\n        var updateEffortBody = '[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/Microsoft.VSTS.Scheduling.Effort\\\",\\\"from\\\":null,\\\"value\\\":\\\"' + e.newData.Effort + '\\\"}]';\\n        fetch(urlEffortUpdate, {\\n            method: \\\"PATCH\\\",\\n            headers: {\\n                \\\"Authorization\\\": \\\"{Auth token}\\\",\\n                \\\"Content-Type\\\": \\\"application/json-patch+json\\\"\\n            },\\n            body: updateEffortBody\\n        });\\n    }\\n    if (e.newData.IterationDate) {\\n        var e = e;\\n        \\n        SW.executeAPI('PUT', 'v3/documentUserFieldValues', null, {\\n            'DocumentTypeName': 'Deliverable',\\n            'DocumentId': e.key,\\n            'DocumentUserFieldValues': Object.entries(e.newData).map(([k, v]) => ({\\n                'ColumnName': 'Iteration Date',\\n                'ColumnDataTypeId': 1,\\n                'Value': v\\n            }))\\n        });\\n        async function updateIteration(e) {\\n            var url = 'https://dev.azure.com/{organization}/{project}/{team}/_apis/work/teamsettings/iterations';\\n            var test = await fetch(url, {\\n                method: \\\"GET\\\",\\n                headers: {\\n                    \\\"Authorization\\\": \\\"{Auth token}\\\"\\n                }\\n            });\\n            var iterations = await test.json();\\n            var iteration = iterations.value.find(i => (e.newData.IterationDate.split('T')[0] >= i.attributes.startDate.split('T')[0]) && (e.newData.IterationDate.split('T')[0] <= i.attributes.finishDate.split('T')[0]));\\n            var urlUpdate = 'https://dev.azure.com/{organization}/{project}/_apis/wit/workitems/' + e.oldData.WorkItem + '?api-version=5.0';\\n            var iterationToUpdate = 'Skill\\\\\\\\\\\\\\\\' + iteration.name;\\n            var updateBody = '[            {\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/System.IterationPath\\\",\\\"from\\\":null,\\\"value\\\":\\\"' + iterationToUpdate + '\\\"}]';\\n            fetch(urlUpdate, {\\n                method: \\\"PATCH\\\",\\n                headers: {\\n                    \\\"Authorization\\\": \\\"{Auth token}\\\",\\n                    \\\"Content-Type\\\": \\\"application/json-patch+json\\\"\\n                },\\n                body: updateBody\\n            });\\n            updateIteration;\\n        }\\n        updateIteration(e)\\n    }\\n}\",\"onRowClick\":\"function(e) {\\n    if (e.rowType == 'data')\\n        SkillsWorkflow.preview(e.key, 'job');\\n}\",\"selection\":{\"mode\":\"multiple\",\"showCheckBoxesMode\":\"onLongTap\"},\"allowFiltering\":false,\"searchPanel\":{\"visible\":true},\"scrolling\":{\"mode\":\"virtual\"},\"columnMinWidth\":\"50\",\"grouping\":{\"autoExpandAll\":true},\"columns\":[{\"caption\":\"Client\",\"alignment\":\"center\",\"width\":50,\"format\":{\"image\":{\"mapping\":{\"id\":\"ClientId\",\"name\":\"ClientName\",\"hasImage\":\"ClientHasImage\"},\"size\":\"small\"}},\"entity\":\"client\",\"allowEditing\":false},{\"dataField\":\"Job\",\"name\":\"Jobs\",\"caption\":\"Jobs\",\"allowEditing\":false},{\"name\":\"Tags\",\"caption\":\"Tags\",\"width\":70,\"visible\":true,\"allowEditing\":false,\"cellTemplate\":\"function(e, i) {          SW.executeAPI('GET','document/'+i.data.Oid+'/tags',{documentId:i.data.Oid,documentType:'deliverable'},null)          .then(x => {                    if (x != null && x.length > 0){                      var p = document.createElement('DIV');                       e.appendChild(p);                                            SW.setAttribute(p,    null,'style','; display:flex;',false);                      var h = document.createElement('DIV');                       p.appendChild(h);                      SW.setAttribute(h,    null,'class','module-tags-list-for-lists',false);                      h.dataset['id'    ] = i.data.Oid;                      var h0 = document.createElement('span');                       SW.setAttribute(h0,    null,'class',' module-tags-dot',false);                      h.appendChild(h0);                      var h1 = document.createElement('span');                       h0.appendChild(h1);                      var h2 = document.createElement('span');                       SW.setAttribute(h2,    null,'class','module-tags-text',false);                      SW.setAttribute(h2,    null,'style','line-height: 16px',false);                      h.appendChild(h2);                      h2.innerHTML = x[      0    ].Label;                                      SW.setAttribute(h,    null,'style','display:flex;background-color:'+x[      0    ].Color ,false);  }                    ;});}\"},{\"dataField\":\"Days\",\"caption\":\"Days\",\"visible\":false,\"alignment\":\"center\",\"format\":\"#,##0\",\"width\":70,\"allowEditing\":false,\"cellTemplate\":\"function(e, i) { SkillsWorkflow.setRAG(e, i.value, i.value < 15, (i.value <= 21 && i.value >= 15), i.value > 21);}\"},{\"dataField\":\"Effort\",\"caption\":\"Effort\",\"alignment\":\"center\",\"format\":\"#,##0\",\"width\":120},{\"dataField\":\"Priority\",\"caption\":\"Priority\",\"alignment\":\"center\",\"width\":120,\"cellTemplate\":\"function(e, i) { SW.showPriority(e, i.value); }\"},{\"dataField\":\"Stage\",\"caption\":\"Stage\",\"name\":\"Name\",\"alignment\":\"left\",\"format\":\"#,##0\",\"width\":80,\"allowEditing\":false,\"cellTemplate\":\"function(e, i) {         var h=document.createElement('span');        h.style.backgroundColor = i.data.Color;         h.classList.add('documentStageColor');        e.append(h);        h=document.createElement('span');        h.innerHTML = ' ' + i.text;        e.append(h);}\",\"groupCellTemplate\":\"function(e, i) {        var color=i.component.option().dataSource.find(row=>row.Stage==i.text).Color;        var h=document.createElement('span');        h.style.backgroundColor = color;         h.classList.add('documentStageColor');        e.append(h);        h=document.createElement('span');        var ht=' ' + i.text + ' ('+i.summaryItems[0].value+')';         h.innerHTML = ht;        e.append(h);}\",\"groupIndex\":0},{\"dataField\":\"EndDate\",\"caption\":\"End date\",\"alignment\":\"right\",\"dataType\":\"date\",\"format\":\"d MMM\",\"visible\":false,\"width\":100,\"allowEditing\":false},{\"dataField\":\"ExecutorName\",\"caption\":\"Executor\",\"alignment\":\"center\",\"allowEditing\":false,\"width\":120,\"cellTemplate\":\"function(e, i) {            if(i.text == '')              return;            var userId = i.row.data.ExecutorId.split(',');            var userName = i.text.split(',');            var userImage = i.row.data.ExecutorHasImage.split(',');            function myFunction(item, index) {                if (userImage[index] === '1') {                    var hasImage = true;} else {                    var hasImage = false;}                SK.showImage(e, 'user', 'small', hasImage, item, userId[index]);}            userId.forEach( (item, index) => myFunction(item, index));}\"},{\"dataField\":\"RequesterName\",\"caption\":\"Requester\",\"alignment\":\"center\",\"allowEditing\":false,\"width\":120,\"cellTemplate\":\"function(e, i) {            if(i.text == '')              return;            var userId = i.row.data.RequesterId.split(',');            var userName = i.text.split(',');            var userImage = i.row.data.RequesterHasImage.split(',');            function myFunction(item, index) {                if (userImage[index] === '1') {                    var hasImage = true;} else {                    var hasImage = false;}                SK.showImage(e, 'user', 'small', hasImage, item, userId[index]);}            userId.forEach( (item, index) => myFunction(item, index));}\"},{\"visible\":false,\"dataField\":\"Iterarion\",\"name\":\"Iteration\",\"caption\":\"Iteration\",\"dataType\":\"boolean\",\"allowEditing\":false,\"cellTemplate\":\"function(e,i){                                            var h = document.createElement('DIV');                      e.append(h);                      var checkbox = document.createElement('dx-check-box');                      SW.setAttribute(checkbox,null,'role','checkbox',false);                      SW.setAttribute(checkbox,null,'class','dx-checkbox',false);                      SW.setAttribute(checkbox,null,'aria-checked','false',false);                      h.appendChild(checkbox);                      var containercheckbox = document.createElement('DIV');                      checkbox.appendChild(containercheckbox);                      SW.setAttribute(checkbox,null,'class','dx-checkbox-container',false);                      var span = document.createElement('span');                      containercheckbox.appendChild(span);                      SW.setAttribute(span,null,'class','dx-checkbox-icon',false);                      if (i.data.Iteration == 1) {                      SW.setAttribute(checkbox,null,'class','dx-checkbox dx-checkbox-checked',false)}}\"},{\"dataField\":\"IterationDate\",\"caption\":\"Iteration\",\"alignment\":\"right\",\"dataType\":\"date\",\"format\":\"d MMM\",\"visible\":true,\"width\":120},{\"allowSorting\":false,\"alignment\":\"center\",\"visible\":false,\"caption\":\"Iteration #\",\"dataField\":\"IterationNo\",\"allowEditing\":false,\"width\":120,\"cellTemplate\":\"function(container, options) {                        var showData = SW.getComponent('AzureData').component.option('value');        if(showData == true)         {           var h = document.createElement('DIV');                 container.appendChild(h);                h.dataset['id'] = options.data.Oid;                var h1 = document.createElement('DIV');                 h.appendChild(h1);                var span = document.createElement('span');                 h1.appendChild(span);                   SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, 'Deliverable', 'Work Item',6, '{Auth token}').then(x => {if (x != null) {span.innerHTML=x['System.IterationPath']; options.data.IterationNo = x['System.IterationPath'];} else {span.innerHTML='No Work Item'}})}}\"},{\"allowSorting\":false,\"alignment\":\"center\",\"visible\":false,\"caption\":\"VS Stage\",\"dataField\":\"VSStage\",\"allowEditing\":false,\"width\":120,\"cellTemplate\":\"function(container, options) {              var showData = SW.getComponent('AzureData').component.option('value');        if(showData == true)         {  var h = document.createElement('DIV');                 container.appendChild(h);                h.dataset['id'] = options.data.Oid;                var h1 = document.createElement('DIV');                 h.appendChild(h1);                var span = document.createElement('span');                 h1.appendChild(span);                 SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, 'Deliverable', 'Work Item',6, '{Auth token}').then(x => {if (x != null) {span.innerHTML=x['System.State'];  options.data.VSStage = x['System.State'];} else {span.innerHTML='No Work Item'}})}}\"},{\"alignment\":\"center\",\"caption\":\"Work Item\",\"dataField\":\"WorkItem\",\"allowEditing\":false,\"width\":100,\"cellTemplate1\":\"function(container, options) {  var showData = SW.getComponent('AzureData').component.option('value');        if(showData == true)         {  var h = document.createElement('DIV');    container.appendChild(h);    if (options.data.WorkItem != undefined && options.data.WorkItem != '')     {  h.innerHTML = options.data.WorkItem;        h.onclick = function(e) {                e.stopPropagation();                      var url = \\\"https://dev.azure.com/{organization}/{project}/_workitems/edit/\\\" + options.data.WorkItem;                         window.open(url);                };            }       else h.innerHTML='No Work Item'        }}\",\"cellTemplate\":\"function(container, options) {  var h = document.createElement('DIV');    container.appendChild(h);    if (options.data.WorkItem != undefined && options.data.WorkItem != '')     {  h.innerHTML = options.data.WorkItem;        h.onclick = function(e) {                e.stopPropagation();                      var url = \\\"https://dev.azure.com/{organization}/{project}/_workitems/edit/\\\" + options.data.WorkItem;                         window.open(url);                };            }       else h.innerHTML='No Work Item'        }\"}],\"sortByGroupSummaryInfo\":[{\"summaryItem\":\"count\"}],\"summary\":{\"groupItems\":[{\"column\":\"Jobs\",\"summaryType\":\"count\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"left\"},{\"column\":\"Effort\",\"summaryType\":\"sum\",\"displayFormat\":\"{0}\",\"showInGroupFooter\":false,\"alignByColumn\":true}],\"totalItems\":[{\"column\":\"Jobs\",\"summaryType\":\"count\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"Total: {0}\",\"alignment\":\"left\"},{\"column\":\"Effort\",\"summaryType\":\"sum\",\"valueFormat\":\"#,##0\",\"displayFormat\":\"{0}\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {var h=e.append('<div>'+i.text+'</div>');if(i.value<0) {h.css('background-color','#f5564a').css('color','#ffffff')}}\"}]}}",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
      },
      {
          "Id": "6793c595-490b-4314-83f1-558ecdb0c610",
          "Name": "",
          "Active": true,
          "UseQuery": false,
          "Query": "",
          "Size": 1,
          "Order": 3,
          "Parameters": "[{\"WidgetSubTitle\":\"Tickets not assigned\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":28,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":5,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      count(*) as Count,\\n            sum(iif(j.State = 'Scheduled for Development', j.Effort, 0)) as ScheduledForDevelopmentEffort,\\n            sum(iif(j.State = 'Under Development', j.Effort, 0)) as UnderDevelopmentEffort,\\n            'Unassigned' as Stage\\nfrom        Analytics.Job(@CurrentUserId) j, \\n            SkillJob d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            duf.Oid =j.Oid and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in ('Scheduled for Development', 'Under Development') and\\n            not exists\\n            (select ass.Oid from Assignment ass, AssignmentType ast, [User] u, SecuritySystemUser ssu where \\n               ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n            u.Oid = ssu.Oid and\\n            u.Department in ('B0C2A44C-4BA9-4669-B0F0-3667956407CB', 'B05216A3-0B44-4BD8-87E5-3970E28A0D47', 'ff7a10a2-db3b-4c29-84a9-90e30d52691a')) and\\n            duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
          "DashboardComponentType": {
              "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
              "Name": "Generic Dashboard",
              "ComponentTypeNumber": 42
          },
          "AnalyticsApiUrl": "",
          "Configuration": "{\n    \"size\": {\n        \"height\": 200\n    },\n    \"valueAxis\": {\n        \"grid\": {\n            \"visible\": false\n        },\n        \"label\": {\n            \"font\": {\n                \"size\": 12,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"commonSeriesSettings\": {\n        \"type\": \"stackedBar\",\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"showForZeroValues\": false,\n            \"visible\": true,\n            \"font\": {\n                \"size\": 10,\n                \"family\": \"Varela Round\"\n            },\n            \"backgroundColor\": \"#00000000\"\n        },\n        \"argumentField\": \"Stage\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"Count\",\n            \"name\": \"Unassigned\",\n            \"barWidth\": 10,\n            \"color\": \"#cccccc\",\n            \"label\": {\n                \"position\": \"outside\",\n                \"font\": {\n                    \"color\": \"#aaaaaa\"\n                },\n                \"verticalOffset\": 10\n            }\n        },\n        {\n            \"valueField\": \"UnderDevelopmentEffort\",\n            \"name\": \"Under Development Effort\",\n            \"barWidth\": 25,\n            \"color\": \"#ffc720\",\n            \"stack\": \"Effort\"\n        },\n        {\n            \"valueField\": \"ScheduledForDevelopmentEffort\",\n            \"name\": \"Scheduled for Development Effort\",\n            \"barWidth\": 25,\n            \"color\": \"#446fd2\",\n            \"stack\": \"Effort\"\n        }\n    ]\n}",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
      },
      {
          "Id": "2ae3edec-e300-4f4a-ac78-58014effe09d",
          "Name": "Tickets by Client",
          "Active": true,
          "UseQuery": false,
          "Query": "",
          "Size": 4,
          "Order": 4,
          "Parameters": "[{\"WidgetSubTitle\":\"Tickets under development\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":33,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":15,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      j.[Client] as ClientCode, \\n            case \\n                    when j.[ClientCode] != '' then j.[ClientCode]\\n                     else 'NoCode'\\n            end as Client,\\n            sum(j.Effort) as Effort,\\n            count(*) as Count\\nfrom        Analytics.DatamartJob j, \\n            SkillJob d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            duf.Oid = j.Oid and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.[ClientCode] != 'SKILLS' and\\n            duf.[Iteration Date] >= @FromDate and duf.[Iteration Date] < @ToDate\\ngroup by    j.[Client], j.[ClientCode]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
          "DashboardComponentType": {
              "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
              "Name": "Generic Dashboard",
              "ComponentTypeNumber": 42
          },
          "AnalyticsApiUrl": "",
          "Configuration": "{\n    \"zoomAndPan\": {\n        \"argumentAxis\": \"pan\"\n    },\n    \"negativesAsZeroes\": true,\n    \"argumentAxis\": {\n        \"label\": {\n            \"displayMode\": \"rotate\",\n            \"rotationAngle\": 90\n        },\n        \"visualRange\": {\n            \"endValue\": 10\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 12,\n                \"family\": \"Varela Round\"\n            }\n        },\n        \"visualRange\": {\n            \"endValue\": 50\n        },\n        \"grid\": {\n            \"visible\": false\n        }\n    },\n    \"series\": [\n        {\n            \"argumentField\": \"Client\",\n            \"valueField\": \"Count\",\n            \"name\": \"Tickets\",\n            \"label\": {\n                \"visible\": false,\n                \"customizeText\": \"function(a) { return a.value + ' (' + a.percentText + ')'; }\"\n            },\n            \"type\": \"bar\",\n            \"color\": \"#446fd2\",\n            \"barWidth\": 10\n        },\n        {\n            \"argumentField\": \"Client\",\n            \"valueField\": \"Effort\",\n            \"name\": \"Effort\",\n            \"label\": {\n                \"position\": \"columns\",\n                \"visible\": false,\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"size\": 10,\n                    \"weight\": 800\n                },\n                \"customizeText\": \"function(a) { return a.value + ' (' + a.percentText + ')'; }\"\n            },\n            \"type\": \"bar\",\n            \"color\": \"#cccccc\",\n            \"barWidth\": 10\n        }\n    ],\n    \"size\": {\n        \"height\": 200\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\",\n            \"weight\": 800\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
      },
      {
          "Id": "9eab2d35-2edf-41c0-bb7e-808477adaab5",
          "Name": "Month",
          "Active": true,
          "UseQuery": false,
          "Query": "",
          "Size": 12,
          "Order": 0,
          "Parameters": "[\n    {\n        \"WidgetSubTitle\": \"Closed and In Progress Tickets\",\n        \"WidgetType\": \"rangeselector\",\n        \"WidgetFilterField\": \"\",\n        \"WidgetColor\": \"#e0e0e0\",\n        \"WidgetFrameStyle\": {},\n        \"WidgetXPosition\": 0,\n        \"WidgetYPosition\": 0,\n        \"WidgetRows\": 3,\n        \"WidgetColumns\": 48,\n        \"WidgetHeader\": {\n            \"showContextInfo\": false,\n            \"WidgetPeriodChooser\": {\n                \"startDate\": \"2019/11/01\",\n                \"endDate\": \"2019/12/30\",\n                \"type\": \"year\",\n                \"visible\": false\n            },\n            \"showSubTitle\": false,\n            \"showTitle\": false\n        },\n        \"WidgetDataSources\": {\n            \"main\": {\n                \"type\": \"querytext\",\n                \"value\": \"SELECT  DATEPART(year, duf.[Iteration Date]) as Year,\\n        DATEPART(week, duf.[Iteration Date]) as [Week],\\n        Min(duf.[Iteration Date]) as WeekStart,\\n        sum(case when j.[State] in ('In QA Tests', 'To Install', 'PM Tests', 'Request UAT', 'Request Approval', 'Closed') then j.Effort else 0 end) as DoneEffort,\\n        sum(case when j.[State] in ('Under Development', 'Scheduled for Development') then j.Effort else 0 end) as ToBeDevelopedEffort\\nFROM    Analytics.DatamartJob j \\n        left outer join Deliverable_UserFields duf on (duf.Oid = j.Oid)\\n        and duf.[Iteration Date] is not null\\nGROUP BY DATEPART(year, duf.[Iteration Date]),\\n        DATEPART(week, duf.[Iteration Date])\",\n                \"mapping\": \"\"\n            }\n        },\n        \"Filters\": {},\n        \"QueryConfiguration\": null\n    }\n]",
          "DashboardComponentType": {
              "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
              "Name": "Generic Dashboard",
              "ComponentTypeNumber": 42
          },
          "AnalyticsApiUrl": "",
          "Configuration": "{\n    \"onDrawn\": \"function(s) {  var curr = new Date;var monday = new Date(curr.setDate(curr.getDate() - curr.getDay()+1));var sunday = new Date(curr.setDate(curr.getDate() - curr.getDay()+7));    monday.setHours(0,    0,    0,    0);            sunday.setHours(23,    59,    59,    0);         s.component.option('value',    [monday, sunday    ]);}\",\n    \"size\": {\n        \"height\": 70\n    },\n    \"containerBackgroundColor\": \"#e0e0e0\",\n    \"selectedRangeColor\": \"#f5564a\",\n    \"chart\": {\n        \"commonSeriesSettings\": {\n            \"type\": \"steparea\",\n            \"argumentField\": \"WeekStart\"\n        },\n        \"series\": [\n            {\n                \"valueField\": \"DoneEffort\",\n                \"color\": \"#97c95c\"\n            },\n            {\n                \"valueField\": \"ToBeDevelopedEffort\",\n                \"color\": \"#da5859\"\n            }\n        ]\n    },\n    \"scale\": {\n        \"minorTickInterval\": \"week\",\n        \"tickInterval\": \"week\",\n        \"valueType\": \"datetime\",\n        \"marker\": {\n            \"separatorHeight\": 10,\n            \"textTopIndent\": 0,\n            \"topIndent\": 0\n        }\n    },\n    \"sliderMarker\": {\n        \"format\": \"monthAndDay\",\n        \"color\": \"#da5859\",\n        \"font\": {\n            \"family\": \"Varela Round\",\n            \"weight\": 800\n        }\n    },\n    \"value\": {\n        \"length\": {\n            \"weeks\": 1\n        }\n    }\n}",
          "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
      }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 5,
  "Default": false
}