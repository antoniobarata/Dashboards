{
  "DashboardDefinitionRoles": [],
  "Id": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313",
  "Name": "Quality Assurance",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "Operations",
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "93770441-89d3-4261-8820-0058c26720f0",
      "Name": "Development Pipeline",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Comparison between Under Development & Scheduled for Development\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":13,\"WidgetRows\":5,\"WidgetColumns\":12,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed\",\"metricFieldValue\":\"DelayedGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  ws.name as Stage, \\n        count(*) as Total\\nfrom    SkillJob j, WorkflowState ws,\\n        WorkflowStateType wst\\nwhere   ws.Oid = j.WorkflowStateId and\\n        wst.Oid = j.WorkflowStateTypeId and\\n        ws.name in ('Under Development','In QA Tests','PM Tests')\\n        /*[DateFilter]*/ and dateadd(week, -3, j.AgreedDate) between @FromDate and @ToDate /*[/DateFilter]*/ \\ngroup by ws.Name\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Development - Execution Pipeline/execute",
      "Configuration": "{\n \"type\": \"doughnut\",\n  \"series\": [{\n      \"argumentField\":\"Stage\",\n      \"valueField\":\"Total\",\n      \"name\":\"Jobs\",\n      \"label\":false\n    }\n  ],\n  \"commonSeriesSettings\": {\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n        \"mode\": \"topN\",\n        \"topCount\": 10,\n\"groupName\": \"Others\"\n    }\n  },\n  \"size\": {\n    \"height\": 100\n  },\n  \"tooltip\": {\n            \"enabled\": true,\n            \"format\": \"#,###.#\",\n            \"customizeTooltip\": \"function(e) { return { text: this.argumentText + '<br>' + this.seriesName + ': ' + this.valueText };}\"\n        },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\":{\"size\":8}\n  }\n}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "b8494c76-edb0-4d3b-a8e1-178017a46a26",
      "Name": "Overtime View",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time - Select Months\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":18,\"WidgetRows\":7,\"WidgetColumns\":12,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2018/01/1\",\"endDate\":\"2019/12/30\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  max(datepart(ww, j.AgreedDate)) as week,\\n        min(j.AgreedDate) as WeekStart,\\n        sum(iif(ws.name = 'Scheduled for Development', 1, 0)) as ScheduledForDevelopment, \\n        sum(iif(ws.name = 'Under Development', 1, 0)) as UnderDevelopment\\nfrom    SkillJob j, WorkflowState ws,\\n        WorkflowStateType wst\\nwhere   ws.Oid = j.WorkflowStateId and\\n        wst.Oid = j.WorkflowStateTypeId and\\n        ws.name in ('Under Development', 'Scheduled for Development') and\\n        dateadd(week, -3, j.AgreedDate) between @FromDate and @ToDate\\ngroup by datepart(yyyy, j.AgreedDate), datepart(ww, j.AgreedDate)\\norder by WeekStart\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":null}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Development - Overtime View/execute",
      "Configuration": "{\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"steparea\",\n      \"argumentField\": \"WeekStart\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"ScheduledForDevelopment\"\n},\n        {\n         \"valueField\": \"UnderDevelopment\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"week\",\n    \"tickInterval\": \"week\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"monthAndDay\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": [\n    \"2019/10/07\",\n    \"2019/10/14\"\n  ]\n}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "ae6196ad-4d2b-41dc-a66b-17b571583906",
      "Name": "Delayed tickets",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Tickets that will not be delivered on the estimated end date\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":1,\"WidgetRows\":6,\"WidgetColumns\":12,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed\",\"metricFieldValue\":\"DelayedGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  ws.name as Stage, \\n        count(*) as Total\\nfrom    SkillJob j, WorkflowState ws,\\n        WorkflowStateType wst\\nwhere   ws.Oid = j.WorkflowStateId and\\n        wst.Oid = j.WorkflowStateTypeId and\\n        ws.name in ('Under Development','In QA Tests','PM Tests')\\n        /*[DateFilter]*/ and dateadd(week, -3, j.AgreedDate) <= @FromDate /*[/DateFilter]*/ \\ngroup by ws.Name\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Development - Execution Pipeline/execute",
      "Configuration": "{\"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"right\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 8\n    }\n  },\n  \"size\": {\n    \"height\": 100\n  },\n  \"rotated\": true,\n  \"commonSeriesSettings\": {\n    \"ignoreEmptyPoints\": true,\n    \"type\": \"bar\",\n    \"cornerRadius\": \"2px\",\n    \"label\": {\n      \"visible\": true,\n      \"showForZeroValues\": false\n    },\n    \"argumentField\": \"Stage\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\": \"stagger\",\n      \"font\": {\n        \"size\": 10\n      }\n    }\n  },\n  \"panes\": [\n    {\n      \"name\": \"bar\"\n    }\n  ],\n  \"series\": [\n    {\n      \"valueField\": \"Total\",\n      \"name\": \"Estado\",\n      \"barWidth\": 30,\n      \"pane\": \"bar\",\n      \"type\": \"bar\"\n    }\n  ]\n}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "13cf4e33-ca0b-4dee-824d-7f1e734051d8",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{\"padding\":\"10px\"},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":1,\"WidgetColumns\":12,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[{\\\"name\\\":\\\"\\\"}],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"items\":[{\"label\":{\"text\":\"Release\"},\"editorType\":\"dxSelectBox\",\"editorOptions\":{\"onValueChanged\":\"function(e){SW.saveComponent(e.value,'release'); SW.getComponent('dataGrid').refresh();}\",\"dataSource\":{\"load\":\"function (e) {\\n\\n        return fetch('https://vsrm.dev.azure.com/{organization}/{project}/_apis/release/definitions?api-version=5.1',\\n            {\\n                method: 'GET',\\n                headers: {\\n                    'Authorization': '{Auth token}'\\n                }\\n            }).then(response => {\\n                                     return response.json().then(data => {\\n\\n                                        var bla = data.value.filter(releases => (releases.id == 67 || releases.id == 69));\\n                                        return Promise.resolve(bla)\\n                });\\n            })\\n}\"},\"displayExpr\":\"name\",\"valueExpr\":\"id\"}}]}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "ed66ee36-042a-4972-84de-dead4316952c",
      "Name": "Tickets per client",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Tickets \",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":7,\"WidgetRows\":6,\"WidgetColumns\":12,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed\",\"metricFieldValue\":\"DelayedGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      \\n            j.ClientId as ClientId,\\n            j.Client as Client,\\n            count (j.Client) as ClientTotal,\\n            sum (j.Effort) as EffortTotal\\nfrom        Analytics.DatamartJob j\\nwhere       \\n            j.State in ('Under Development','In QA Tests','PM Tests')\\n /*[DateFilter]*/ and dateadd(week, -3, j.Date) between @FromDate and @ToDate /*[/DateFilter]*/\\n      \\ngroup by ClientId, Client\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Development - Execution Pipeline/execute",
      "Configuration": "{\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"horizontalAlignment\": \"right\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\": \"right\",\n    \"paddingLeftRight\": 0,\n    \"font\": {\n      \"size\": 8\n    }\n  },\n  \"rotated\": true,\n  \"commonSeriesSettings\": {\n    \"ignoreEmptyPoints\": true,\n    \"type\": \"bar\",\n    \"cornerRadius\": \"2px\",\n    \"label\": {\n      \"visible\": false,\n      \"showForZeroValues\": false\n    },\n    \"argumentField\": \"Client\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\": \"stagger\",\n      \"font\": {\n        \"size\": 10\n      }\n    }\n  },\n  \"panes\": [\n    {\n      \"name\": \"bar\"\n    }\n  ],\n  \"series\": [\n    {\n      \"valueField\": \"ClientTotal\",\n      \"name\": \"Client\",\n      \"barWidth\": 20,\n      \"pane\": \"bar\",\n      \"type\": \"bar\",\n      \"color\":\"#f8903d\"\n    },\n    {\n      \"valueField\": \"EffortTotal\",\n      \"name\": \"Effort\",\n      \"barWidth\": 20,\n      \"pane\": \"bar\",\n      \"type\": \"bar\"\n    }\n  ]\n}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "24ac9c96-927c-43e2-8200-e1aaf1dbe267",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":12,\"WidgetYPosition\":0,\"WidgetRows\":10,\"WidgetColumns\":36,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"{\\\"entities\\\":[{\\\"name\\\":\\\"\\\"}],\\\"fields\\\":[]}\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"dataSource\":{\"load\":\"function (loadOptions) {\\n\\n    function getReleases() {\\n        var url = 'https://vsrm.dev.azure.com/{organization}/{project}/_apis/release/releases?api-version=5.1'\\n        var definition = SW.getComponent('release');\\n\\n        if (definition){\\n            url = 'https://vsrm.dev.azure.com/{organization}/{project}/_apis/release/releases?definitionId=' + definition+'&api-version=5.1'\\n            }\\n\\n        return fetch(url,\\n            {\\n                method: 'GET',\\n                headers: {\\n                    'Authorization': '{Auth token}'\\n                }\\n            }).then( response => {\\n                if(response.ok){ return response.json()}\\n                return []\\n            });\\n    }\\n\\n    function getEnvironment(data, index) {\\n        \\n        if ([69, 67].includes(data.releaseDefinition.id)) {\\n            return fetch('https://vsrm.dev.azure.com/{organization}/{project}/_apis/release/releases/' + data.id + '?api-version=5.1',\\n                {\\n                    method: 'GET',\\n                    headers: {\\n                        'Authorization': '{Auth token}'\\n                    }\\n                }).then(response => response.json());\\n        }\\n        return Promise.resolve(null);\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        const response = getReleases().then( response => {\\n\\n            if (response.value) {\\n              \\n                     \\n                const listEnvironmentPromises = response.value.map(getEnvironment);\\n\\n                Promise.all(listEnvironmentPromises).then((array) => {\\n                    const elements = array.filter(elem => Boolean(elem))\\n                    resolve(elements);\\n                });\\n            }\\n        });\\n   \\n\\n    });\\n\\n\\n\\n\\n\\n}\",\"store\":{\"key\":\"id\"}},\"selection\":{\"mode\":\"multiple\"},\"columns\":[{\"dataField\":\"workItems\",\"type\":\"buttons\",\"buttons\":[{\"icon\":\"edit\",\"onClick\":\"function (e, i){                                                                                                                fetch('https://dev.azure.com/{organization}/{project}/_apis/build/builds/'+e.row.data.artifacts[0].definitionReference.version.id+'/workitems?api-version=5.1',                          {                                            method: 'GET',                                            headers: {                                                    'Authorization': '{Auth token}'                        }                    }).then(                             response => { if(response.ok){ response.json().then(json => { if (!(json.count > 0)) {alert('No work items')} else alert(JSON.stringify(json.value));                            })                        }                    });                }\"}]},{\"dataField\":\"name\",\"cellTemplate\":\"function (e,i){                                                                            var h =document.createElement('div');                                                                                 e.append(h);                                                                                           SW.setAttribute(h, null,'style','display:flex',false);                                                                var h1 = document.createElement('div');                                                                h.append(h1);                                                                h1.innerHTML = i.data.name;         if (i.data.name.includes('prod')){ h1.style.backgroundColor = '#005b9e';     }          SW.setAttribute(h1, null,'class','module-tags module-tags-dot module-tags-text',false);     h1.style.maxWidth = '200px';               h1.title='Release created on: '+i.data.createdOn;                                 }\"},{\"dataField\":\"progress\",\"minWidth\":\"70px\",\"cellTemplate\":\"function(e, i) { var environments =i.data.environments; var f = document.createElement('div');    e.append(f);    f.style.display = 'flex';environments.forEach(env => {    var  g = document.createElement('div');    f.append(g); g.style.id = env.id; g.style.releaseId = env.releaseId;  g.title = env.name; g.onclick = function(e){var id = e.srcElement.style.id; var releaseId = e.srcElement.style.releaseId; window.open('https://dev.azure.com/{organization}/{project}/_releaseProgress?releaseId='+releaseId+'&_a=release-environment-logs&environmentId='+id)};   SW.setAttribute(g,                null, 'style', 'border-radius: 30px; margin-right: 2px ;width: 18px;    height: 18px;    position: relative;    background: #DDE3E8;    text-align: center;    line-height: 18px;    color: #39454D;    font-size: 13px;', false);    if(env.status == 'succeeded'){        g.style.background = '#0DAA83';        g.style.color = 'white';                } if(env.status == 'inProgress'){        g.style.background = '#005b9e';        g.style.color = 'white';                }   if(env.status == 'partiallySucceeded'){        g.style.background = '#f4cd0d';        g.style.color = 'white';                }    if(env.status == 'rejected'){        g.style.background = '#DE6767';        g.style.color = 'white';                }    if(env.status == 'notStarted'){        g.style.background = '#D8D8D8';        g.style.color = 'white';                }      if(env.name == 'EUS' || env.name == 'BS' || env.name == 'WE' || env.name =='SEAS'){      g.style.border = '1px solid black';        g.style.color = 'white';       }       });}\"},{\"dataField\":\"id\",\"minWidth\":\"70px\",\"visible\":false},{\"dataField\":\"status\",\"visible\":false},{\"dataField\":\"createdOn\",\"dataType\":\"date\",\"format\":\"E, MMM d, h:mm a\",\"visible\":true}],\"height\":\"400px\",\"groupPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"stateStoring\":{\"enabled\":\"true\"},\"onToolbarPreparing\":\"function(e) {\\n\\n    SW.saveComponent(e.component, 'dataGrid')\\n    e.toolbarOptions.items.unshift({\\n        location: 'after',\\n        widget: 'dxButton',\\n        options: {\\n            icon: 'fal fa-clipboard-list-check',\\n            onClick: function (event) {\\n                var dataGrid = SW.getComponent('dataGrid');\\n                var selectedItems = dataGrid.getSelectedRowsData();\\n                var builds = [];\\n                builds.push(selectedItems[0].artifacts.find(a => a.alias == 'Skills PreRelease').definitionReference.version.id);\\n                builds.push(selectedItems[1].artifacts.find(a => a.alias == 'Skills PreRelease').definitionReference.version.id);\\n\\n\\n                builds.sort();\\n                var workItems = [];\\n\\n                fetch('https://dev.azure.com/{organization}/{project}/_apis/build/workitems?fromBuildId=' + builds[0] + '&toBuildId=' + builds[1] + '&api-version=5.1-preview.2',\\n                    {\\n                        method: 'GET',\\n                        headers: {\\n                            'Authorization': '{Auth token}'\\n                        }\\n                    }).\\n                    then(response => {\\n                        response.json().then(wi => {  SW.genericPopup('automation', [{ Id: '02ea0bef-8586-4804-8080-f955b39de6df', Title: 'Work Items' }], wi.value, '90%', '90%', false);})\\n                                    });\\n            \\n                \\n            }\\n        }\\n    });\\n}\"}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    },
    {
      "Id": "dfcf90e7-1098-40f9-88ec-f18993698ba5",
      "Name": "Current tickets under Quality Assurance",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Tickets' Delayed or On Time by status\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":12,\"WidgetYPosition\":10,\"WidgetRows\":16,\"WidgetColumns\":36,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed Under Development\",\"metricFieldValue\":\"DelayedUnderDevelopmentJobsGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      j.Oid,\\n            j.[State] as Stage,\\n            j.NameAndExternalId as Job,\\n            j.[Date] as EndDate,\\n            d.effort,\\n            (select count(*) from Deliverable_UserFields where Oid =j.Oid and Iteration != '') as Iteration,\\n            (select duf.[Work Item] from Deliverable_UserFields duf where Oid =j.Oid ) as WorkItem,\\n            isnull(ws.Color, wst.Color) as Color,\\n            datediff(day, getdate(), j.[Date]) as Days,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), ',') from Assignment ass, AssignmentType ast where ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid) as Executor,\\n            sum(iif(j.[State] = 'PM Tests' and j.[Date] < getdate(), 1, 0)) over() as DelayedUnderDevelopmentJobsGrandTotal\\nfrom        Analytics.Job(@CurrentUserId) j, SkillJob d, WorkflowState ws, WorkflowStateType wst\\nwhere       d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in ('PM Tests')\\nunion all\\nselect      j.Oid,\\n            j.[State] as Stage,\\n            j.NameAndExternalId as Job,\\n            j.[Date] as EndDate,\\n            d.effort,\\n            (select count(*) from Deliverable_UserFields where Oid =j.Oid and Iteration != '') as Iteration,\\n                        (select duf.[Work Item] from Deliverable_UserFields duf where Oid =j.Oid ) as WorkItem,\\n            isnull(ws.Color, wst.Color) as Color,\\n            datediff(day, getdate(), j.[Date]) as Days,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), ',') from Assignment ass, AssignmentType ast where ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid) as Executor,\\n            sum(iif(j.[State] = 'In QA Tests' and j.[Date] < getdate(), 1, 0)) over() as DelayedUnderDevelopmentJobsGrandTotal\\nfrom        Analytics.Job(@CurrentUserId) j, SkillJob d, WorkflowState ws, WorkflowStateType wst\\nwhere       d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in ('In QA Tests')\\n               \\nunion all\\nselect      j.Oid,\\n            j.[State] as Stage,\\n            j.NameAndExternalId as Job,\\n            j.[Date] as EndDate,\\n            d.effort,\\n            (select count(*) from Deliverable_UserFields where Oid =j.Oid and Iteration != '') as Iteration,\\n                        (select duf.[Work Item] from Deliverable_UserFields duf where Oid =j.Oid ) as WorkItem,\\n\\n            isnull(ws.Color, wst.Color) as Color,\\n            datediff(day, getdate(), j.[Date]) as Days,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), ',') from Assignment ass, AssignmentType ast where ass.DocumentOid = j.Oid and ast.Name = 'Executor' and ass.AssignmentType = ast.Oid) as Executor,\\n            sum(iif(j.[State] = 'Under Development' and j.[Date] < getdate(), 1, 0)) over() as DelayedUnderDevelopmentJobsGrandTotal\\nfrom        Analytics.Job(@CurrentUserId) j, SkillJob d, WorkflowState ws, WorkflowStateType wst\\nwhere       d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in ('Under Development')\\n \",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Development - Current development/execute",
      "Configuration": "{\n    \"height\": \"600\",\n    \"onRowClick\": \"function(e){if(e.rowType=='data') SkillsWorkflow.preview(e.key, 'job');}\",\n    \"keyExpr\": \"Oid\",\n    \"selection\": {\n        \"mode\": \"single\"\n    },\n    \"allowFiltering\": false,\n    \"searchPanel\": {\n        \"visible\": true\n    },\n    \"scrolling\": {\n        \"mode\": \"virtual\"\n    },\n    \"columnMinWidth\": \"50\",\n    \"grouping\": {\n        \"autoExpandAll\": true\n    },\n    \"columns\": [\n        {\n            \"dataField\": \"Job\",\n            \"name\": \"Jobs\",\n            \"caption\": \"Jobs\",\n            \"width\": 500\n        },\n        {\n            \"name\": \"Tags\",\n            \"caption\": \"Tags\",\n            \"width\": 70,\n            \"cellTemplate\": \"function(e, i) {                          SW.executeAPI('GET','document/'+i.data.Oid+'/tags',    {documentId:i.data.Oid,documentType:'deliverable'    },null)          .then(x => {                    if (x != null && x.length > 0){                      var p = document.createElement('DIV');                       e.appendChild(p);                                            SW.setAttribute(p,null,'style','; display:flex;',false);                      var h = document.createElement('DIV');                       p.appendChild(h);                      SW.setAttribute(h,null,'class','module-tags-list-for-lists',false);                      h.dataset['id'] = i.data.Oid;                      var h0 = document.createElement('span');                       SW.setAttribute(h0,null,'class',' module-tags-dot',false);                      h.appendChild(h0);                      var h1 = document.createElement('span');                       h0.appendChild(h1);                      var h2 = document.createElement('span');                       SW.setAttribute(h2,null,'class','module-tags-text',false);                      SW.setAttribute(h2,null,'style','line-height: 16px',false);                      h.appendChild(h2);                      h2.innerHTML = x[0].Label;                                      SW.setAttribute(h,null,'style','display:flex;background-color:'+x[0].Color ,false);      }                    ;    });  }\"\n        },\n        {\n            \"dataField\": \"Days\",\n            \"caption\": \"Days\",\n            \"alignment\": \"center\",\n            \"format\": \"#,##0\",\n            \"width\": 70,\n            \"cellTemplate\": \"function(e, i) { SkillsWorkflow.setRAG(e, i.value, i.value < 15, (i.value <= 21 && i.value >= 15), i.value > 21);           }\"\n        },\n        {\n            \"dataField\": \"effort\",\n            \"caption\": \"Effort\",\n            \"alignment\": \"center\",\n            \"format\": \"#,##0\",\n            \"width\": 70\n        },\n        {\n            \"dataField\": \"Stage\",\n            \"caption\": \"Stage\",\n            \"name\": \"Name\",\n            \"alignment\": \"left\",\n            \"format\": \"#,##0\",\n            \"width\": 80,\n            \"groupCellTemplate\": \"function(e, i) {        var color=i.component.option().dataSource.find(row=>row.Stage==i.text).Color;        var h=document.createElement('span');        h.style.backgroundColor = color;         h.classList.add('documentStageColor');        e.append(h);        h=document.createElement('span');        var ht=' ' + i.text + ' ('+i.summaryItems[      0    ].value+')';         h.innerHTML = ht;        e.append(h);  }\",\n            \"groupIndex\": 0\n        },\n        {\n            \"dataField\": \"EndDate\",\n            \"caption\": \"End date\",\n            \"alignment\": \"right\",\n            \"dataType\": \"date\",\n            \"format\": \"d MMM\",\n            \"width\": 100\n        },\n        {\n            \"dataField\": \"Executor\",\n            \"caption\": \"Executor\",\n            \"alignment\": \"right\",\n            \"format\": \"#,##0\",\n            \"width\": 100,\n            \"cellTemplate\": \"function(e, i) {          if(i.text == '') return;                     var executors = i.text.split(',');           var h = document.createElement('DIV');                    e.appendChild(h);                    h.style['text-align'  ]= 'center';                     h.style['display'  ] = 'flex';                    h.style['justify-content'  ] = 'flex-end';                              function myFunction(item, index) {                    var img = document.createElement('img');                     h.appendChild(img);                    img.src = SkillsWorkflow.getUserImages([item    ]);                    img.style['border-radius'    ] = '40px';                     img.height='16';                    img.width='16';  }          executors.forEach( (item, index) => myFunction(item, index));}\"\n        },\n        {\n            \"dataField\": \"Iterarion\",\n            \"name\": \"Iteration\",\n            \"caption\": \"Iteration\",\n            \"visible\":false,\n            \"dataType\": \"boolean\",\n            \"cellTemplate\": \"function(e,i){                                            var h = document.createElement('DIV');                      e.append(h);                      var checkbox = document.createElement('dx-check-box');                      SW.setAttribute(checkbox,null,'role','checkbox',false);                      SW.setAttribute(checkbox,null,'class','dx-checkbox',false);                      SW.setAttribute(checkbox, null,'aria-checked','false',false);                      h.appendChild(checkbox);                      var containercheckbox = document.createElement('DIV');                      checkbox.appendChild(containercheckbox);                      SW.setAttribute(checkbox,null,'class','dx-checkbox-container',false);                      var span = document.createElement('span');                      containercheckbox.appendChild(span);                      SW.setAttribute(span,null,'class','dx-checkbox-icon',false);                                if (i.data.Iteration == 1) {                      SW.setAttribute(checkbox,null,'class','dx-checkbox dx-checkbox-checked',false)                        }}\"\n        },\n        {\n            \"alignment\": \"center\",\n            \"caption\": \"Work Item\",\n            \"dataField\": \"WorkItem\",\n            \"allowEditing\": false,\n            \"cellTemplate\": \"function(container, options) {     var h = document.createElement('DIV');    container.appendChild(h);      if (options.data.WorkItem != undefined && options.data.WorkItem != '')     {  h.innerHTML = options.data.WorkItem;        h.onclick = function(e) {                e.stopPropagation();                          var url = \\\"https://dev.azure.com/{organization}/{project}/_workitems/edit/\\\" + options.data.WorkItem;                         window.open(url);                };            }       else h.innerHTML='No Work Item';        }\"\n        },\n        {\n            \"allowSorting\": false,\n            \"alignment\": \"center\",\n            \"caption\": \"Iteration #\",\n            \"dataField\": \"Oid\",\n            \"cellTemplate\": \"function(container, options) {                                     var h = document.createElement('DIV');                 container.appendChild(h);                h.dataset['id'  ] = options.data.Oid;                var h1 = document.createElement('DIV');                 h.appendChild(h1);                var span = document.createElement('span');                 h1.appendChild(span);                   SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, 'Deliverable', 'Work Item', 6, '{Auth token}',false).then(x => {if (x != null) {span.innerHTML=x['System.IterationPath']} else {span.innerHTML='No Work Item'}});                       }\"\n        },\n        {\n            \"allowSorting\": false,\n            \"alignment\": \"center\",\n            \"caption\": \"VS Stage\",\n            \"dataField\": \"Oid\",\n            \"cellTemplate\": \"function(container, options) {                                     var h = document.createElement('DIV');                 container.appendChild(h);                h.dataset['id'                        ] = options.data.Oid;                var h1 = document.createElement('DIV');                 h.appendChild(h1);                var span = document.createElement('span');                 h1.appendChild(span);                 SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, 'Deliverable', 'Work Item', 6, '{Auth token}',false).then(x => {if (x != null) {span.innerHTML=x['System.State']} else {span.innerHTML='No Work Item'}});                       }\"\n        },\n        {\n            \"allowSorting\": false,\n            \"alignment\": \"center\",\n            \"caption\": \"\",\n            \"allowFiltering\": false,\n            \"dataField\": \"Oid\",\n            \"cellTemplate\": \"function(container, options) {                                                                  var h = document.createElement('DIV');                                     container.appendChild(h);                                    h.dataset['id'                      ] = options.data.Oid;                                    SkillsWorkflow.AzureDevOps.getAzureWorkItemId(h.dataset[`id`                      ],'Deliverable', 'Work Item',                      6, false).then(x=> {if (x != undefined || x == ''){h.setAttribute('class', 'fal fa-share-square');                        } else h.innerHTML='No Work Item';                      }    );                    h.onclick = function(e) {         e.stopPropagation();         SW.AzureDevOps.getAzureWorkItemId(this.attributes[`data-id`                        ].value,'Deliverable', 'Work Item',                        6, false).then(        x=> {            if (x != undefined || x == ''){                           var url = \\\"https://dev.azure.com/{organization}/{project}/_workitems/edit/\\\";                window.open(url+x);                    }                }    );            };        }\"\n        }\n    ],\n    \"sortByGroupSummaryInfo\": [\n        {\n            \"summaryItem\": \"count\"\n        }\n    ],\n    \"summary\": {\n        \"groupItems\": [\n            {\n                \"column\": \"Jobs\",\n                \"summaryType\": \"count\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"{0}\",\n                \"alignment\": \"left\"\n            }\n        ],\n        \"totalItems\": [\n            {\n                \"column\": \"Jobs\",\n                \"summaryType\": \"count\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"Total: {0}\",\n                \"alignment\": \"left\"\n            },\n            {\n                \"column\": \"Effort\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"{0}\",\n                \"alignment\": \"center\",\n                \"cellTemplate\": \"function(e, i) {var h=e.append('<div>'+i.text+'</div>');if(i.value<0) {h.css('background-color','#f5564a').css('color','#ffffff')}}\"\n            }\n        ],\n        \"onToolbarPreparing\": \"function(e){}\"\n    }\n}",
      "DashboardDefinitionId": "f4ad678e-ea37-4e7a-b8a3-27a5593fb313"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 0,
  "Default": false
}
