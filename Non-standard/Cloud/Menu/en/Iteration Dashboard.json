{
    "DashboardDefinitionRoles": [
        {
            "AccessRoleId": "cb60add0-63f3-4cd3-877c-55993f8661da",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11",
            "AccessRoleName": "Equipa Skills Workflow"
        }
    ],
    "Id": "f23860a2-3270-49c1-aa28-b83f0e0a7e11",
    "Name": "Iteration Dashboard",
    "Active": true,
    "Location": 0,
    "DocumentId": "00000000-0000-0000-0000-000000000000",
    "DocumentName": "",
    "DocumentTypeName": null,
    "DocumentsConfiguration": "{\n    \"entity\": \"\",\n    \"operations\": {\n        \"read\": {\n            \"endpoint\": \"\"\n        },\n        \"update\": {\n            \"endpoint\": \"\",\n            \"model\": {}\n        },\n        \"create\": {\n            \"endpoint\": \"\",\n            \"model\": {}\n        },\n        \"patch\": {\n            \"endpoint\": \"\",\n            \"model\": [\n                {\n                    \"field\": \"\",\n                    \"caption\": \"\",\n                    \"type\": \"\"\n                }\n            ]\n        },\n        \"remove\": {\n            \"endpoint\": \"\"\n        },\n        \"lookup\": {\n            \"endpoint\": \"\"\n        },\n        \"lookupById\": {\n            \"endpoint\": \"\"\n        }\n    },\n    \"layout\": {\n        \"create\": {},\n        \"read\": {},\n        \"patch\": {}\n    },\n    \"customDocument\": {\n        \"useCustomStyle\": false,\n        \"mainColor\": \"\",\n        \"secondaryColor\": \"\",\n        \"imageClass\": \"\",\n        \"namePlural\": \"\",\n        \"name\": \"\",\n        \"systemName\": \"\"\n    },\n    \"availableOptions\": {\n        \"feed\": false,\n        \"info\": true,\n        \"files\": false,\n        \"userfields\": false,\n        \"dashboard\": false\n    }\n}",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "bf8f1b5f-4940-4f5e-bb62-011c0a8e3c70",
            "Name": "Team Effort ",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 7,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Iteration effort per developer\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":28,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"boards\":{\"type\":\"querytext\",\"value\":\"select distinct w.[Name], \\n\\t\\tw.Oid, \\n\\t\\tISNULL(w.Color, wst.Color) as color\\n\\tfrom WorkflowState w inner join [Document] d on w.[Document] = D.Oid\\n\\t\\tinner join WorkflowStateType wst on w.WorkflowStateType = wst.Oid\\n\\twhere w.GCRecord is null and d.GCRecord is null\\n\\t\\t\\tand d.Name = \u0027Deliverable\u0027\\n\\t\\t\\tand (\u002700000000-0000-0000-0000-000000000000\u0027 in @workflowStateIds or w.Oid in @workflowStateIds)\\n\\t\\t\\tand w.Oid in (\u0027700451ed-e58f-4cdb-abaa-4d0707fe4b16\u0027,\u00275682701a-e88d-4bf4-bcba-5114c425aa9c\u0027,\u0027da28d50d-f2fa-4a93-9774-54520a131521\u0027,\u002717a1c7f2-5a34-4ba9-a912-689f7db28e8d\u0027)\\n\",\"mapping\":{\"id\":\"Oid\",\"title\":\"Name\",\"date\":\"endDate\"}},\"items\":{\"type\":\"querytext\",\"value\":\"with briefs as (\\r\\nselect  dB.DocumentOid, dB.ActionsJson, ISJSON(dB.ActionsJson) as ValidJson, db.[Text], db.PlainText\\r\\n\\t\\tfrom DocumentBrief dB \\r\\n\\t\\twhere dB.DocumentTypeName = \u0027deliverable\u0027\\r\\n)\\r\\nselect D.Oid\\r\\n       ,D.[Number] as JobNumber\\r\\n\\t ,D.[NameAndExternalId] as JobName\\r\\n\\t, CONVERT(VARCHAR(6), D.AgreedDate, 6) as EndDate\\r\\n\\t  ,U.Name as UserName\\r\\n\\t  ,U.Oid as UserId\\r\\n\\t  ,At.Name as AssignmentTypeName\\r\\n        ,A.[Workload] as Workload\\r\\n\\t,D.[WorkflowState] as WorkflowStateId\\r\\n\\t,wst.Name as WorkflowStateName\\r\\n\\t,isnull(w.Color, WST.Color) as WorkflowStateColor,\\r\\n\\tSUBSTRING(B.PlainText, 1, 100) as Brief,\\r\\n\\t(SELECT FORMATMESSAGE(\u0027http://localhost:30449/api/commercialclients/%s/imageStream\u0027, CONVERT(nvarchar(50), D.Client)) ) as ImageSrc\\r\\n\\r\\n  from Deliverable D\\r\\n\\tinner join Assignment A ON D.Oid = A.DocumentOid\\r\\n\\tinner join WorkflowState W ON D.WorkflowState = W.Oid\\r\\n\\tinner join  WorkflowStateType WST ON W.WorkflowStateType = WST.Oid\\r\\n\\tinner join  AssignmentType AT ON A.AssignmentType = AT.Oid\\r\\n\\tinner join [User] U on A.[User] = U.Oid\\r\\n\\tleft join briefs B on D.Oid = B.DocumentOid\\r\\n\\tWHERE\\tAT.Name = \u0027Executor\u0027\\r\\n\\t\\t\\tand A.DocumentTypeName = \u0027Skill.Module.BusinessObjects.Deliverable\u0027\\r\\n\\t\\t\\tand A.[User] = @userId\\r\\n\\t\\t\\tand (\u002700000000-0000-0000-0000-000000000000\u0027 in @workflowStateIds or D.WorkflowState in @workflowStateIds)\\r\\n\\t\\t--\\tand (d.EntryDateUtc between @startDate and @endDate or d.AgreedDateUtc between @startDate and @endDate or @startDate between d.EntryDateUtc and d.AgreedDateUtc)\\r\\n\\r\\n\",\"mapping\":{\"id\":\"Oid\",\"title\":\"JobName\",\"boardId\":\"WorkflowStateId\",\"boardName\":\"WorkflowStateName\",\"boardColor\":\"WorkflowStateColor\",\"imageSrc\":\"ImageSrc\",\"date\":\"EndDate\",\"effort\":\"Workload\",\"description\":\"Brief\"}},\"main\":{\"type\":\"querytext\",\"value\":\"select  ssu.UserName as Developer,\\n        ssu.Oid as DeveloperId,\\n        sum(case when j.[State] = \u0027Scheduled for Development\u0027 and DATEPART(ww, cast(@FromDate as datetime)) = DATEPART(ww, duf.[Iteration Date]) then j.Effort else 0 end) as ScheduledEffort,\\n        sum(case when j.[State] = \u0027Under Development\u0027 and (duf.[Iteration Date] \u003e= @FromDate and duf.[Iteration Date] \u003c @ToDate) then j.Effort else 0 end) as UnderDeveplomentEffort,\\n        sum(case when j.[State] = \u0027Under Development\u0027 and (duf.[Iteration Date] \u003e= (cast(@FromDate as datetime) - 7) and duf.[Iteration Date] \u003c (cast(@ToDate as datetime) -7) ) then j.Effort else 0 end) as UnderDeveplomentEffortLastWeek,\\n        sum(case when j.[State] in (\u0027In QA Tests\u0027, \u0027To Install\u0027, \u0027PM Tests\u0027, \u0027Request UAT\u0027, \u0027Request Approval\u0027) and DATEPART(ww, cast(@FromDate as datetime)) = DATEPART(ww, duf.[Iteration Date]) then j.Effort else 0 end) as DevelopedEffort\\nfrom    Analytics.DatamartJob j, Deliverable d left outer join Deliverable_UserFields duf on (duf.Oid = d.Oid), WorkflowState ws, WorkflowStateType wst, Department dep, Assignment ass,\\n        AssignmentType ast, [User] u, SecuritySystemUser ssu\\n\\nwhere   ws.Oid = d.WorkflowState and\\n        wst.Oid = ws.WorkflowStateType and\\n        dep.Oid = j.DepartmentId and\\n        d.oid = j.oid and\\n        ass.DocumentOid = j.Oid and\\n        ass.AssignmentType = ast.Oid and\\n        ast.Name = \u0027Executor\u0027 and\\n        ass.[User] = u.Oid and\\n        u.Oid = ssu.Oid and\\n        u.Department in (\u0027B0C2A44C-4BA9-4669-B0F0-3667956407CB\u0027, \u0027B05216A3-0B44-4BD8-87E5-3970E28A0D47\u0027, \u0027ff7a10a2-db3b-4c29-84a9-90e30d52691a\u0027) and\\n        (duf.[Iteration Date] \u003e= (cast(@FromDate as datetime) - 8) and duf.[Iteration Date] \u003c (cast(@ToDate as datetime)+2))\\n\\ngroup by ssu.UserName, ssu.Oid\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"size\": {\n        \"height\": 200\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 12,\n                \"family\": \"Varela Round\"\n            }\n        },\n        \"grid\": {\n            \"visible\": false\n        },\n        \"constantLineStyle\": {\n            \"label\": {\n                \"text\": \"\",\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"size\": \"8\"\n                }\n            },\n            \"width\": 1,\n            \"dashStyle\": \"dash\"\n        },\n        \"strips\": [\n            {\n                \"startValue\": 24,\n\n                \"color\": \"#f7412e0a\",\n                \"label\": {\n                    \"text\": \"Effort Exceeded +24\",\n                    \"font\": {\n                        \"color\": \"#f7412e\"\n                    }\n                }\n            },\n            {\n                \"startValue\": 12,\n                \"endValue\": 24,\n                \"color\": \"#ffc7200a\",\n                \"label\": {\n                    \"text\": \"Tickets Exceeded +12\",\n                    \"font\": {\n                        \"color\": \"#ffc720\"\n                    }\n                }\n            }\n        ],\n        \"constantLines\": [\n            {\n                \"value\": 24,\n                \"color\": \"#f7412e\"\n            },\n            {\n                \"value\": 12,\n                \"color\": \"#ffc720\"\n            }\n        ]\n    },\n    \"commonSeriesSettings\": {\n        \"barWidth\": 25,\n        \"type\": \"stackedBar\",\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"showForZeroValues\": false,\n            \"visible\": true,\n            \"font\": {\n                \"size\": 10,\n                \"family\": \"Varela Round\"\n            },\n            \"backgroundColor\": \"#00000000\"\n        },\n        \"argumentField\": \"Developer\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 10,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"UnderDeveplomentEffort\",\n            \"name\": \"Under Development\",\n            \"color\": \"#446fd2\"\n        },\n        {\n            \"valueField\": \"DevelopedEffort\",\n            \"name\": \"Developed\",\n            \"color\": \"#97c95c\"\n        },\n        {\n            \"valueField\": \"UnderDeveplomentEffortLastWeek\",\n            \"name\": \"Previous week Under Deveploment\",\n            \"color\": \"#cccccc\"\n        },\n        {\n            \"valueField\": \"ScheduledEffort\",\n            \"name\": \"Scheduled for Development\",\n            \"color\": \"#ffc720\"\n        }\n    ]\n}",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
        },
        {
            "Id": "6793c595-490b-4314-83f1-558ecdb0c610",
            "Name": "",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 1,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Tickets not assigned\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":28,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":5,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      count(*) as Total,\\n            sum(j.Effort) as Effort,\\n            \u0027Unassigned\u0027 as Stage\\nfrom        Analytics.Job(@CurrentUserId) j, \\n            SkillJob d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            duf.Oid =j.Oid and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in (\u0027Scheduled for Development\u0027, \u0027Under Development\u0027) and\\n            not exists\\n            (select ass.Oid from Assignment ass, AssignmentType ast, [User] u, SecuritySystemUser ssu where \\n               ass.DocumentOid = j.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n            u.Oid = ssu.Oid and\\n            u.Department in (\u0027B0C2A44C-4BA9-4669-B0F0-3667956407CB\u0027, \u0027B05216A3-0B44-4BD8-87E5-3970E28A0D47\u0027, \u0027ff7a10a2-db3b-4c29-84a9-90e30d52691a\u0027)) and\\n            duf.[Iteration Date] \u003e= @FromDate and duf.[Iteration Date] \u003c @ToDate\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"size\": {\n        \"height\": 200\n    },\n    \"valueAxis\": {\n        \"showZero\": true,\n        \"visible\": false,\n        \"tick\": false,\n        \"visualRange\": {\n            \"startValue\": 0,\n            \"endValue\": 30\n        },\n        \"grid\": {\n            \"visible\": false\n        }\n    },\n    \"commonSeriesSettings\": {\n        \"type\": \"bar\",\n        \"cornerRadius\": \"2px\",\n        \"label\": {\n            \"visible\": true,\n            \"position\": \"outside\",\n            \"font\": {\n                \"family\": \"Varela Round\",\n                \"size\": 8,\n                \"weight\": 800\n            }\n        },\n        \"argumentField\": \"Stage\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"Total\",\n            \"name\": \"Unassigned\",\n            \"barWidth\": 20,\n            \"color\": \"#f7412d\"\n        },\n        {\n            \"valueField\": \"Effort\",\n            \"name\": \"Effort\",\n            \"barWidth\": 20,\n            \"color\": \"#ccccccc\"\n        }\n    ]\n}",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
        },
        {
            "Id": "2ae3edec-e300-4f4a-ac78-58014effe09d",
            "Name": "Tickets by Client",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 4,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"Tickets under development\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#f0f0f0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":33,\"WidgetYPosition\":3,\"WidgetRows\":7,\"WidgetColumns\":15,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      j.[Client] as ClientCode, \\n            case \\n                    when j.[ClientCode] != \u0027\u0027 then j.[ClientCode]\\n                     else \u0027NoCode\u0027\\n            end as Client,\\n            sum(j.Effort) as TotalEffort,\\n            count(*) as TotalTickets\\nfrom        Analytics.DatamartJob j, \\n            SkillJob d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            duf.Oid = j.Oid and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.[ClientCode] != \u0027SKILLS\u0027 and\\n            duf.[Iteration Date] \u003e= @FromDate and duf.[Iteration Date] \u003c @ToDate\\ngroup by    j.[Client], j.[ClientCode]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"zoomAndPan\": {\n        \"valueAxis\": \"pan\",\n        \"argumentAxis\": \"pan\"\n    },\n    \"negativesAsZeroes\": true,\n    \"argumentAxis\": {\n        \"label\": {\n            \"displayMode\": \"rotate\",\n            \"rotationAngle\": 90\n        }\n    },\n    \"valueAxis\": [\n        {\n            \"name\": \"Effort\",\n            \"visualRange\": {\n                \"startValue\": 0,\n                \"endValue\": null\n            },\n            \"barWidth\": 25\n        },\n        {\n            \"name\": \"Tickets\",\n            \"position\": \"right\",\n            \"visualRange\": {\n                \"startValue\": 0,\n                \"endValue\": null\n            },\n            \"barWidth\": 25\n        }\n    ],\n    \"series\": [\n        {\n            \"axis\": \"Tickets\",\n            \"argumentField\": \"Client\",\n            \"valueField\": \"TotalTickets\",\n            \"name\": \"Tickets\",\n            \"label\": {\n                \"visible\": false,\n                \"customizeText\": \"function(a) { return a.value + \u0027 (\u0027 + a.percentText + \u0027)\u0027; }\"\n            },\n            \"type\": \"bar\",\n            \"color\": \"#446fd2\"\n        },\n        {\n            \"axis\": \"Effort\",\n            \"argumentField\": \"Client\",\n            \"valueField\": \"TotalEffort\",\n            \"name\": \"Effort\",\n            \"label\": {\n                \"position\": \"columns\",\n                \"visible\": false,\n                \"font\": {\n                    \"family\": \"Varela Round\",\n                    \"size\": 10,\n                    \"weight\": 800\n                },\n                \"customizeText\": \"function(a) { return a.value + \u0027 (\u0027 + a.percentText + \u0027)\u0027; }\"\n            },\n            \"type\": \"bar\",\n            \"color\": \"#cccccc\"\n        }\n    ],\n    \"size\": {\n        \"height\": 200\n    },\n    \"legend\": {\n        \"visible\": false,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\",\n            \"weight\": 800\n        }\n    },\n    \"resolveLabelOverlapping\": \"shift\"\n}",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
        },
        {
            "Id": "9eab2d35-2edf-41c0-bb7e-808477adaab5",
            "Name": "Month",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 0,
            "Parameters": "[{\"WidgetSubTitle\":\"Closed and In Progress Tickets\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":3,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"startDate\":\"2019/11/01\",\"endDate\":\"2019/12/30\",\"type\":\"year\",\"visible\":false},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT  DATEPART(year, duf.[Iteration Date]) as Year,\\n        DATEPART(week, duf.[Iteration Date]) as [Week],\\n        Min(duf.[Iteration Date]) as WeekStart,\\n        sum(case when j.[State] in (\u0027In QA Tests\u0027, \u0027To Install\u0027, \u0027PM Tests\u0027, \u0027Request UAT\u0027, \u0027Request Approval\u0027, \u0027Closed\u0027) then j.Effort else 0 end) as DoneEffort,\\n        sum(case when j.[State] in (\u0027Under Development\u0027, \u0027Scheduled for Development\u0027) then j.Effort else 0 end) as ToBeDevelopedEffort\\nFROM    Analytics.DatamartJob j \\n        left outer join Deliverable_UserFields duf on (duf.Oid = j.Oid)\\n        and duf.[Iteration Date] is not null\\nGROUP BY DATEPART(year, duf.[Iteration Date]),\\n        DATEPART(week, duf.[Iteration Date])\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":null}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "",
            "Configuration": "{\n    \"onDrawn\": \"function(s) {        var today = new Date();        var dayOfWeek = today.getDay();        var monday = new Date();        monday.setDate(today.getDate() - dayOfWeek + (dayOfWeek == 0 ? -6 : 1));        var sunday = new Date();        sunday.setDate(monday.getDate() + 6);         monday.setHours(0,    0,    0,    0);        sunday.setHours(23,    59,    59,    0);        s.component.option(\u0027value\u0027,    [monday, sunday    ]);}\",\n    \"size\": {\n        \"height\": 70\n    },\n    \"containerBackgroundColor\": \"#e0e0e0\",\n    \"selectedRangeColor\": \"#f5564a\",\n    \"chart\": {\n        \"commonSeriesSettings\": {\n            \"type\": \"steparea\",\n            \"argumentField\": \"WeekStart\"\n        },\n        \"series\": [\n            {\n                \"valueField\": \"DoneEffort\",\n                \"color\": \"#97c95c\"\n            },\n            {\n                \"valueField\": \"ToBeDevelopedEffort\",\n                \"color\":\"#da5859\"\n            }\n        ]\n    },\n    \"scale\": {\n        \"minorTickInterval\": \"week\",\n        \"tickInterval\": \"week\",\n        \"valueType\": \"datetime\",\n        \"marker\": {\n            \"separatorHeight\": 10,\n            \"textTopIndent\": 0,\n            \"topIndent\": 0\n        }\n    },\n    \"sliderMarker\": {\n        \"format\": \"monthAndDay\",\n        \"color\": \"#da5859\",\n        \"font\": {\n            \"family\": \"Varela Round\",\n            \"weight\": 800\n        }\n    },\n    \"value\": {\n        \"length\": {\n            \"weeks\": 1\n        }\n    }\n}",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
        },
        {
            "Id": "18080701-8d5b-46ca-86ad-a4cac8e3601c",
            "Name": "Tickets for iteration",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 12,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"Tickets requested to be developed\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":10,\"WidgetRows\":26,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Delayed Under Development\",\"metricFieldValue\":\"DelayedUnderDevelopmentJobsGrandTotal\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select      j.Oid,\\n            j.[State] as Stage,\\n            j.NameAndExternalId as Job,\\n            j.[Date] as EndDate,\\n            d.effort,\\n            duf.[Work Item] as WorkItem,\\n            duf.Iteration as Iteration,\\n            \u0027\u0027 as IterationNo,\\n            duf.[Iteration Date] as IterationDate,\\n            isnull(ws.Color, wst.Color) as Color,\\n            datediff(day, getdate(), j.[Date]) as Days,\\n            (select STRING_AGG(convert(nvarchar(50), ass.[User]), \u0027,\u0027) from Assignment ass, AssignmentType ast, [User] u, SecuritySystemUser ssu where \\n               ass.DocumentOid = j.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n            u.Oid = ssu.Oid and\\n            u.Department in (\u0027B0C2A44C-4BA9-4669-B0F0-3667956407CB\u0027,\u0027B05216A3-0B44-4BD8-87E5-3970E28A0D47\u0027,\u0027ff7a10a2-db3b-4c29-84a9-90e30d52691a\u0027)) as ExecutorId,\\n            (select STRING_AGG(convert(nvarchar(50), u.[Name]), \u0027,\u0027) from Assignment ass, AssignmentType ast, [User] u, SecuritySystemUser ssu where \\n               ass.DocumentOid = j.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n            u.Oid = ssu.Oid and\\n            u.Department in (\u0027B0C2A44C-4BA9-4669-B0F0-3667956407CB\u0027,\u0027B05216A3-0B44-4BD8-87E5-3970E28A0D47\u0027,\u0027ff7a10a2-db3b-4c29-84a9-90e30d52691a\u0027)) as ExecutorName,\\n            (select STRING_AGG(convert(nvarchar(50), u.[HasImage]), \u0027,\u0027) from Assignment ass, AssignmentType ast, [User] u, SecuritySystemUser ssu where \\n               ass.DocumentOid = j.Oid and ast.Name = \u0027Executor\u0027 and ass.AssignmentType = ast.Oid and ass.[User] = u.Oid and\\n            u.Oid = ssu.Oid and\\n            u.Department in (\u0027B0C2A44C-4BA9-4669-B0F0-3667956407CB\u0027,\u0027B05216A3-0B44-4BD8-87E5-3970E28A0D47\u0027,\u0027ff7a10a2-db3b-4c29-84a9-90e30d52691a\u0027)) as HasImage,\\n            j.Client as ClientName,\\n            j.ClientId,\\n            cc.HasImage as ClientHasImage,\\n            duf.[Work Item] as WorkItem\\nfrom        Analytics.DatamartJob j, \\n            SkillJob d, \\n            WorkflowState ws, \\n            WorkflowStateType wst, \\n            Deliverable_UserFields duf,\\n            CommercialClient cc\\nwhere       cc.Oid = j.ClientId and\\n            d.Oid = j.Oid and \\n            ws.Oid = d.WorkflowStateId and\\n            duf.Oid = j.Oid and\\n            wst.Oid = d.WorkflowStateTypeId and\\n            j.State in (\u0027Under Development\u0027, \u0027Scheduled for Development\u0027, \u0027In QA Tests\u0027, \u0027PM Tests\u0027, \u0027To Install\u0027, \u0027Move to production\u0027,\u0027Request Approval\u0027,\u0027Request more information\u0027,\u0027Request UAT\u0027,\u0027Done\u0027) \\n            and  duf.[Iteration Date] \u003e= @FromDate and duf.[Iteration Date] \u003c @ToDate\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\"]}}]",
            "DashboardComponentType": {
                "Id": "84ee5399-f21a-42eb-9c52-810ca7ac1e22",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Development - Current development/execute",
            "Configuration": "{\n    \"stateStoring\": {\n        \"enabled\": \"true\"\n    },\n    \"headerFilter\": {\n        \"visible\": true\n    },\n    \"editing\": {\n        \"mode\": \"cell\",\n        \"allowUpdating\": true\n    },\n    \"height\": \"700\",\n    \"keyExpr\": \"Oid\",\n    \"onToolbarPreparing\": \"function(e) {\\n    SW.saveComponent(e.component, \u0027dataGrid\u0027);\\n                                e.toolbarOptions.items.unshift({\\n                                    location: \u0027after\u0027,\\n                                    template: \u0027toggleHeaderFilterButtonTemplate\u0027\\n                                });\\n\\n                                e.toolbarOptions.items.unshift({\\n                                        widget: \u0027dxButton\u0027,\\n                                        location: \u0027after\u0027,\\n                                        options: {\\n                                            icon: \u0027plus\u0027,\\n                                            onClick: function () {\\n                                                    SkillsWorkflow.createNewDocument(\u0027job\u0027);\\n                                                }\\n        }\\n    });\\n                                e.toolbarOptions.items.unshift({\\n                                        location: \u0027after\u0027,\\n                                        name: \u0027getWorkItems\u0027,\\n                                        widget: \\\"dxDateBox\\\",\\n                                        options: {\\n                                                icon: \u0027fal fa-clipboard-list-check\u0027,\\n                                                placeholder: \u0027Set Iteration...\u0027,\\n                                                applyValueMode:\u0027useButtons\u0027,\\n                                                onValueChanged: function (event) {\\n\\n                                                        var dataGrid = SW.getComponent(\u0027dataGrid\u0027);\\n                                                        var selectedItems = dataGrid.getSelectedRowsData();\\n\\n                                                        selectedItems.forEach(e =\u003e {\\n                                                                if (e.IterationDate != event.value) {\\n                                                                        SW.executeAPI(\u0027PUT\u0027, \u0027v3/documentUserFieldValues\u0027, null, {\\n                                                                            \u0027DocumentTypeName\u0027: \u0027Deliverable\u0027,\\n                                                                            \u0027DocumentId\u0027: e.Oid,\\n                                                                            \u0027DocumentUserFieldValues\u0027: [{\\n                                                                                \u0027ColumnName\u0027: \u0027Iteration Date\u0027,\\n                                                                                \u0027ColumnDataTypeId\u0027: 1,\\n                                                                                \u0027Value\u0027: event.value\\n                                                                        }]\\n                                                                });\\n                                                        }\\n\\n\\n                                                        async function updateIteration(e, event) {\\n                                                                var url = \u0027https://dev.azure.com/[{organization}/{project}/{team}]/_apis/work/teamsettings/iterations\u0027;\\n\\n                                                                var azureAuth = \u0027[AzureBasicAuth]\\n                                                                \\n                                                                var getIterations = await fetch(url, {\\n                                                                        method: \\\"GET\\\",\\n                                                                        headers: {\\n                                                                            \\\"Authorization\\\": azureAuth\\n                                                                        }\\n                                                                });\\n                                                                var iterations = await getIterations.json();\\n                                                                var iteration = iterations.value.find(i =\u003e (event.value \u003e= new Date(i.attributes.startDate)) \u0026\u0026 (event.value \u003c= new Date(i.attributes.finishDate)));\\n                                                                var urlUpdate = \u0027https://dev.azure.com/[{organization}/{project}]/_apis/wit/workitems/\u0027 + e.WorkItem + \u0027?api-version=5.0\u0027;\\n                                                                var iterationToUpdate = \u0027Skill\\\\\\\\\\\\\\\\\u0027 + iteration.name;\\n                                                                var updateBody = \u0027[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/System.IterationPath\\\",\\\"from\\\":null,\\\"value\\\":\\\"\u0027 + iterationToUpdate + \u0027\\\"}]\u0027;\\n                                                                    return (fetch(urlUpdate, {\\n                                                                            method: \\\"PATCH\\\",\\n                                                                            headers: {\\n                                                                                    \\\"Authorization\\\": azureAuth,\\n                                                                                    \\\"Content-Type\\\": \\\"application/json-patch+json\\\"\\n                                                                            },\\n                                                                            body: updateBody\\n                                                                    }).then(x =\u003e  x.json()), e.Oid);\\n\\n\\n                                                            }\\n                    \\n                                                            if(e.WorkItem){\\n                                                                    updateIteration(e, event).then(x =\u003e {\\n                            \\n                                                                            var dataGrid = SW.getComponent(\u0027dataGrid\u0027);\\n                                                                            dataGrid.option(\u0027dataSource\u0027).find(d =\u003e d.Oid == x).IterationDate = event.value\\n                                                                        });\\n                                                            }\\n                                                    });\\n                                            }\\n                                    }\\n                            });\\n    e.toolbarOptions.items.unshift({\\n        widget: \u0027dxCheckBox\u0027,\\n        location: \u0027after\u0027,\\n        name:\u0027AzureData\u0027,\\n        options: {\\n            value: false,\\n            text: \u0027Work Items\u0027,\\n            onInitialized:function (e){SW.saveComponent(e,\u0027AzureData\u0027)},\\n            onValueChanged: function (e) {  \\n                var grid = SW.getComponent(\u0027dataGrid\u0027); \\n                if (e.value == true){\\n               \\n                grid.columnOption(\u0027Work Item\u0027, \u0027visible\u0027, true); \\n                grid.columnOption(\u0027VS Stage\u0027, \u0027visible\u0027, true); \\n                grid.columnOption(\u0027Iteration #\u0027, \u0027visible\u0027, true);\\n              }\\n\\n                if (e.value == false) {\\n                    grid.columnOption(\u0027Work Item\u0027, \u0027visible\u0027, false);\\n                    grid.columnOption(\u0027VS Stage\u0027, \u0027visible\u0027, false);\\n                    grid.columnOption(\u0027Iteration #\u0027, \u0027visible\u0027, false);\\n                    \\n\\n                }\\n            }\\n        }\\n    });\\n   }\",\n    \"onRowUpdating\": \"function(e) {\\n    if (e.newData.effort) {\\n        var body = \u0027{ \\\"Effort\\\": { \\\"Value\\\":\u0027 + e.newData.effort + \u0027} }\u0027;\\n        SW.executeAPI(\u0027PATCH\u0027, \u0027jobs/\u0027 + e.key, null, body);\\n        var urlEffortUpdate = \u0027https://dev.azure.com/[{organization}/{project}]/_apis/wit/workitems/\u0027 + e.oldData.WorkItem + \u0027?api-version=5.0\u0027;\\n        var updateEffortBody = \u0027[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/Microsoft.VSTS.Scheduling.Effort\\\",\\\"from\\\":null,\\\"value\\\":\\\"\u0027 + e.newData.effort + \u0027\\\"}]\u0027;\\n        fetch(urlEffortUpdate, {\\n            method: \\\"PATCH\\\",\\n            headers: {\\n                \\\"Authorization\\\": \\\"Basic Om1zeGJrczdpaGtzNnlkeGplcW9vYWtvdW5ob21pNHlwbW16NWpscWplcDNxNnVkM3BmZHE=\\\",\\n                \\\"Content-Type\\\": \\\"application/json-patch+json\\\"\\n            },\\n            body: updateEffortBody\\n        });\\n    }\\n    if (e.newData.IterationDate) {\\n        var e = e;\\n        \\n        SW.executeAPI(\u0027PUT\u0027, \u0027v3/documentUserFieldValues\u0027, null, {\\n            \u0027DocumentTypeName\u0027: \u0027Deliverable\u0027,\\n            \u0027DocumentId\u0027: e.key,\\n            \u0027DocumentUserFieldValues\u0027: Object.entries(e.newData).map(([k, v]) =\u003e ({\\n                \u0027ColumnName\u0027: \u0027Iteration Date\u0027,\\n                \u0027ColumnDataTypeId\u0027: 1,\\n                \u0027Value\u0027: v\\n            }))\\n        });\\n        async function updateIteration(e) {\\n            var url = \u0027https://dev.azure.com/[{organization}/{project}/{team}]/_apis/work/teamsettings/iterations\u0027;\\n            var test = await fetch(url, {\\n                method: \\\"GET\\\",\\n                headers: {\\n                    \\\"Authorization\\\": \\\"Basic Om1zeGJrczdpaGtzNnlkeGplcW9vYWtvdW5ob21pNHlwbW16NWpscWplcDNxNnVkM3BmZHE=\\\"\\n                }\\n            });\\n            var iterations = await test.json();\\n            var iteration = iterations.value.find(i =\u003e (e.newData.IterationDate.split(\u0027T\u0027)[0] \u003e= i.attributes.startDate.split(\u0027T\u0027)[0]) \u0026\u0026 (e.newData.IterationDate.split(\u0027T\u0027)[0] \u003c= i.attributes.finishDate.split(\u0027T\u0027)[0]));\\n            var urlUpdate = \u0027https://dev.azure.com/[{organization}/{project}]/_apis/wit/workitems/\u0027 + e.oldData.WorkItem + \u0027?api-version=5.0\u0027;\\n            var iterationToUpdate = \u0027Skill\\\\\\\\\\\\\\\\\u0027 + iteration.name;\\n            var updateBody = \u0027[            {\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/System.IterationPath\\\",\\\"from\\\":null,\\\"value\\\":\\\"\u0027 + iterationToUpdate + \u0027\\\"}]\u0027;\\n            fetch(urlUpdate, {\\n                method: \\\"PATCH\\\",\\n                headers: {\\n                    \\\"Authorization\\\": \\\"Basic Om1zeGJrczdpaGtzNnlkeGplcW9vYWtvdW5ob21pNHlwbW16NWpscWplcDNxNnVkM3BmZHE=\\\",\\n                    \\\"Content-Type\\\": \\\"application/json-patch+json\\\"\\n                },\\n                body: updateBody\\n            });\\n            updateIteration;\\n        }\\n        updateIteration(e)\\n    }\\n}\",\n    \"onRowClick\": \"function(e) {\\n    if (e.rowType == \u0027data\u0027)\\n        SkillsWorkflow.preview(e.key, \u0027job\u0027);\\n}\",\n    \"selection\": {\n        \"mode\": \"multiple\"\n    },\n    \"allowFiltering\": false,\n    \"searchPanel\": {\n        \"visible\": true\n    },\n    \"scrolling\": {\n        \"mode\": \"virtual\"\n    },\n    \"columnMinWidth\": \"50\",\n    \"grouping\": {\n        \"autoExpandAll\": true\n    },\n    \"columns\": [\n        {\n            \"caption\": \"Client\",\n            \"alignment\": \"center\",\n            \"width\": 50,\n            \"groupCellTemplate\": \"function(e, i) {}\",\n            \"format\": {\n                \"image\": {\n                    \"mapping\": {\n                        \"id\": \"ClientId\",\n                        \"name\": \"ClientName\",\n                        \"hasImage\": \"ClientHasImage\"\n                    },\n                    \"size\": \"small\"\n                }\n            },\n            \"entity\": \"client\",\n            \"allowEditing\": false\n        },\n        {\n            \"dataField\": \"Job\",\n            \"name\": \"Jobs\",\n            \"caption\": \"Jobs\",\n            \"allowEditing\": false\n        },\n        {\n            \"name\": \"Tags\",\n            \"caption\": \"Tags\",\n            \"width\": 70,\n            \"visible\": false,\n            \"allowEditing\": false,\n            \"cellTemplate\": \"function(e, i) {          SW.executeAPI(\u0027GET\u0027,\u0027document/\u0027+i.data.Oid+\u0027/tags\u0027,{documentId:i.data.Oid,documentType:\u0027deliverable\u0027},null)          .then(x =\u003e {                    if (x != null \u0026\u0026 x.length \u003e 0){                      var p = document.createElement(\u0027DIV\u0027);                       e.appendChild(p);                                            SW.setAttribute(p,    null,\u0027style\u0027,\u0027; display:flex;\u0027,false);                      var h = document.createElement(\u0027DIV\u0027);                       p.appendChild(h);                      SW.setAttribute(h,    null,\u0027class\u0027,\u0027module-tags-list-for-lists\u0027,false);                      h.dataset[\u0027id\u0027    ] = i.data.Oid;                      var h0 = document.createElement(\u0027span\u0027);                       SW.setAttribute(h0,    null,\u0027class\u0027,\u0027 module-tags-dot\u0027,false);                      h.appendChild(h0);                      var h1 = document.createElement(\u0027span\u0027);                       h0.appendChild(h1);                      var h2 = document.createElement(\u0027span\u0027);                       SW.setAttribute(h2,    null,\u0027class\u0027,\u0027module-tags-text\u0027,false);                      SW.setAttribute(h2,    null,\u0027style\u0027,\u0027line-height: 16px\u0027,false);                      h.appendChild(h2);                      h2.innerHTML = x[      0    ].Label;                                      SW.setAttribute(h,    null,\u0027style\u0027,\u0027display:flex;background-color:\u0027+x[      0    ].Color ,false);  }                    ;});}\"\n        },\n        {\n            \"dataField\": \"Days\",\n            \"caption\": \"Days\",\n            \"visible\": false,\n            \"alignment\": \"center\",\n            \"format\": \"#,##0\",\n            \"width\": 70,\n            \"allowEditing\": false,\n            \"cellTemplate\": \"function(e, i) { SkillsWorkflow.setRAG(e, i.value, i.value \u003c 15, (i.value \u003c= 21 \u0026\u0026 i.value \u003e= 15), i.value \u003e 21);}\"\n        },\n        {\n            \"dataField\": \"effort\",\n            \"caption\": \"Effort\",\n            \"alignment\": \"center\",\n            \"format\": \"#,##0\",\n            \"width\": 120\n        },\n        {\n            \"dataField\": \"Stage\",\n            \"caption\": \"Stage\",\n            \"name\": \"Name\",\n            \"alignment\": \"left\",\n            \"format\": \"#,##0\",\n            \"width\": 80,\n            \"allowEditing\": false,\n            \"groupCellTemplate\": \"function(e, i) {        var color=i.component.option().dataSource.find(row=\u003erow.Stage==i.text).Color;        var h=document.createElement(\u0027span\u0027);        h.style.backgroundColor = color;         h.classList.add(\u0027documentStageColor\u0027);        e.append(h);        h=document.createElement(\u0027span\u0027);        var ht=\u0027 \u0027 + i.text + \u0027 (\u0027+i.summaryItems[0].value+\u0027)\u0027;         h.innerHTML = ht;        e.append(h);}\",\n            \"groupIndex\": 0\n        },\n        {\n            \"dataField\": \"EndDate\",\n            \"caption\": \"End date\",\n            \"alignment\": \"right\",\n            \"dataType\": \"date\",\n            \"format\": \"d MMM\",\n            \"visible\": false,\n            \"width\": 100,\n            \"allowEditing\": false\n        },\n        {\n            \"dataField\": \"ExecutorName\",\n            \"caption\": \"Executor\",\n            \"alignment\": \"center\",\n            \"allowEditing\": false,\n            \"width\": 120,\n            \"cellTemplate\": \"function(e, i) {            if(i.text == \u0027\u0027)              return;            var executorId = i.row.data.ExecutorId.split(\u0027,\u0027);            var executorName = i.text.split(\u0027,\u0027);            var executorImage = i.row.data.HasImage.split(\u0027,\u0027);            function myFunction(item, index) {                if (executorImage[index] === \u00271\u0027) {                    var hasImage = true;} else {                    var hasImage = false;}                SK.showImage(e, \u0027user\u0027, \u0027small\u0027, hasImage, item, executorId[index]);}            executorId.forEach( (item, index) =\u003e myFunction(item, index));}\"\n        },\n        {\n            \"visible\": false,\n            \"dataField\": \"Iterarion\",\n            \"name\": \"Iteration\",\n            \"caption\": \"Iteration\",\n            \"dataType\": \"boolean\",\n            \"allowEditing\": false,\n            \"cellTemplate\": \"function(e,i){                                            var h = document.createElement(\u0027DIV\u0027);                      e.append(h);                      var checkbox = document.createElement(\u0027dx-check-box\u0027);                      SW.setAttribute(checkbox,null,\u0027role\u0027,\u0027checkbox\u0027,false);                      SW.setAttribute(checkbox,null,\u0027class\u0027,\u0027dx-checkbox\u0027,false);                      SW.setAttribute(checkbox,null,\u0027aria-checked\u0027,\u0027false\u0027,false);                      h.appendChild(checkbox);                      var containercheckbox = document.createElement(\u0027DIV\u0027);                      checkbox.appendChild(containercheckbox);                      SW.setAttribute(checkbox,null,\u0027class\u0027,\u0027dx-checkbox-container\u0027,false);                      var span = document.createElement(\u0027span\u0027);                      containercheckbox.appendChild(span);                      SW.setAttribute(span,null,\u0027class\u0027,\u0027dx-checkbox-icon\u0027,false);                      if (i.data.Iteration == 1) {                      SW.setAttribute(checkbox,null,\u0027class\u0027,\u0027dx-checkbox dx-checkbox-checked\u0027,false)}}\"\n        },\n        {\n            \"dataField\": \"IterationDate\",\n            \"caption\": \"Iteration Date\",\n            \"alignment\": \"right\",\n            \"dataType\": \"date\",\n            \"format\": \"d MMM\",\n            \"visible\": true,\n            \"width\": 120\n        },\n        {\n            \"allowSorting\": false,\n            \"alignment\": \"center\",\n            \"visible\": false,\n            \"caption\": \"Iteration #\",\n            \"dataField\": \"IterationNo\",\n            \"allowEditing\": false,\n            \"width\": 120,\n            \"cellTemplate\": \"function(container, options) {                        var showData = SW.getComponent(\u0027AzureData\u0027).component.option(\u0027value\u0027);        if(showData == true)         {           var h = document.createElement(\u0027DIV\u0027);                 container.appendChild(h);                h.dataset[\u0027id\u0027] = options.data.Oid;                var h1 = document.createElement(\u0027DIV\u0027);                 h.appendChild(h1);                var span = document.createElement(\u0027span\u0027);                 h1.appendChild(span);                   SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, \u0027Deliverable\u0027, \u0027Work Item\u0027,6, \u0027[AzureBasicAuth]).then(x =\u003e {if (x != null) {span.innerHTML=x[\u0027System.IterationPath\u0027]; options.data.IterationNo = x[\u0027System.IterationPath\u0027];} else {span.innerHTML=\u0027No Work Item\u0027}})}}\"\n        },\n        {\n            \"allowSorting\": false,\n            \"alignment\": \"center\",\n            \"visible\": false,\n            \"caption\": \"VS Stage\",\n            \"dataField\": \"VSStage\",\n            \"allowEditing\": false,\n            \"width\": 120,\n            \"cellTemplate\": \"function(container, options) {              var showData = SW.getComponent(\u0027AzureData\u0027).component.option(\u0027value\u0027);        if(showData == true)         {  var h = document.createElement(\u0027DIV\u0027);                 container.appendChild(h);                h.dataset[\u0027id\u0027] = options.data.Oid;                var h1 = document.createElement(\u0027DIV\u0027);                 h.appendChild(h1);                var span = document.createElement(\u0027span\u0027);                 h1.appendChild(span);                 SW.AzureDevOps.getAzureWorkItemByDocumentId(options.data.Oid, \u0027Deliverable\u0027, \u0027Work Item\u0027,6, \u0027[AzureBasicAuth]).then(x =\u003e {if (x != null) {span.innerHTML=x[\u0027System.State\u0027];  options.data.VSStage = x[\u0027System.State\u0027];} else {span.innerHTML=\u0027No Work Item\u0027}})}}\"\n        },\n        {\n            \"alignment\": \"center\",\n            \"caption\": \"Work Item\",\n            \"visible\": false,\n            \"dataField\": \"WorkItem\",\n            \"allowEditing\": false,\n            \"width\": 100,\n            \"cellTemplate\": \"function(container, options) {  var showData = SW.getComponent(\u0027AzureData\u0027).component.option(\u0027value\u0027);        if(showData == true)         {  var h = document.createElement(\u0027DIV\u0027);    container.appendChild(h);    if (options.data.WorkItem != undefined \u0026\u0026 options.data.WorkItem != \u0027\u0027)     {  h.innerHTML = options.data.WorkItem;        h.onclick = function(e) {                e.stopPropagation();                      var url = \\\"https://dev.azure.com/[{organization}/{project}]/_workitems/edit/\\\" + options.data.WorkItem;                         window.open(url);                };            }       else h.innerHTML=\u0027No Work Item\u0027        }}\"\n        }\n    ],\n    \"sortByGroupSummaryInfo\": [\n        {\n            \"summaryItem\": \"count\"\n        }\n    ],\n    \"summary\": {\n        \"groupItems\": [\n            {\n                \"column\": \"Jobs\",\n                \"summaryType\": \"count\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"{0}\",\n                \"alignment\": \"left\"\n            }\n        ],\n        \"totalItems\": [\n            {\n                \"column\": \"Jobs\",\n                \"summaryType\": \"count\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"Total: {0}\",\n                \"alignment\": \"left\"\n            },\n            {\n                \"column\": \"Effort\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0\",\n                \"displayFormat\": \"{0}\",\n                \"alignment\": \"center\",\n                \"cellTemplate\": \"function(e, i) {var h=e.append(\u0027\u003cdiv\u003e\u0027+i.text+\u0027\u003c/div\u003e\u0027);if(i.value\u003c0) {h.css(\u0027background-color\u0027,\u0027#f5564a\u0027).css(\u0027color\u0027,\u0027#ffffff\u0027)}}\"\n            }\n        ],\n        \"onToolbarPreparing\": \"function(e){}\"\n    }\n}",
            "DashboardDefinitionId": "f23860a2-3270-49c1-aa28-b83f0e0a7e11"
        }
    ],
    "QueryText": "",
    "UseStore": false,
    "StoreEntity": null,
    "Version": 1,
    "Default": false
}