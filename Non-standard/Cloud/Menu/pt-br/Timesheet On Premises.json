{
  "DashboardDefinitionRoles": [],
  "Id": "35fd430a-00a6-413e-b6a7-755d82f0b35a",
  "Name": "Timesheet Dashboard",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "b9cb2b51-4441-4a71-ba4a-21fc7a682afe",
      "Name": "Top 10 Usu?rios",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 2,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 16,\r\n        \"WidgetYPosition\": 0,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Admin\",\r\n                        \"metricFieldValue\": \"AdministrativeHoursGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.EmployeeId,\\r\\n\\t\\tv.EmployeeName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.EmployeeId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.EmployeeId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.EmployeeId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.EmployeeId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[UserId] as EmployeeId,\\r\\n\\t\\t\\t\\tt.[User] as EmployeeName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tt.[User],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                        sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tgroup by t.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tt.[User]\\r\\n\\t\\t) t\\r\\n\\t\\t\\tleft outer join \\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tselect\\tuv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[User],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfrom\\tSkillAnalyticsLeaves uv\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = uv.DepartmentId\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(uv.[Year], uv.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(uv.[Year], uv.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgroup by uv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[User]\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\tuv on (uv.[UserId] = t.UserId)\\r\\n) v\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ],\r\n            \"Sort\": {\r\n                \"Type\": 2,\r\n                \"FieldName\": \"TotalHours\"\r\n            },\r\n            \"Top\": {\r\n                \"Count\": 10\r\n            }\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_User/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 150\n    },\n    \"palette\": \"Material\",\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"EmployeeName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"TotalHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"customizeText\": \"function(t){return t.valueText.split(\u0027 - \u0027)[0]}\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"EmployeeName\"\n    }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "a6d6bee5-0eec-4a11-9a7d-5c7c2d77ea66",
      "Name": "Top 10 Clientes",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 1,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 0,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total\",\r\n                        \"metricFieldValue\": \"GlobalTotalHours\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.ClientId,\\r\\n\\t\\tv.ClientName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.ClientId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.ClientId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.ClientId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.ClientId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[ClientId], \\r\\n\\t\\t\\t\\tt.[Client] as ClientName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(null, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(null, 0.0) as TotalHours\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[ClientId],\\r\\n\\t\\t\\t\\t\\t\\tt.[Client],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1 \\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) between @FromDate and @ToDate /*[/DateFilter]*/ \\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tgroup by t.[ClientId],\\r\\n\\t\\t\\t\\t\\t\\tt.[Client]\\r\\n\\t\\t) t\\r\\n) v\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ],\r\n            \"Sort\": {\r\n                \"Type\": 2,\r\n                \"FieldName\": \"TotalHours\"\r\n            },\r\n            \"Top\": {\r\n                \"Count\": 10\r\n            }\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_Client/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"ClientName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"TotalHours\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"ClientName\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(\u0027 - \u0027)[0].substring(0,20)}\",\n      \"font\": {\n      \r\n  \"size\": 8\n      }\n    }\n  }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "7984c7ff-4f14-40ab-a411-6856bc3ccccb",
      "Name": "Divis?o n?o-Fatur?vel",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":14,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With Vacations As\\r\\n                                (\\r\\n\\t                                select\\tsum(uv.[Hours]) as [Hours]\\r\\n\\t                                from\\tSkillUserVacation uv\\r\\n                                    where   1=1\\r\\n                                            /*[DateFilter]*/ and uv.[Date] \u003e= @FromDate and uv.[Date] \u003c @ToDate /*[/DateFilter]*/\\r\\n                                ),\\r\\n                                ActualHours As\\r\\n                                (\\r\\n\\t                                select\\tt.*,\\r\\n\\t\\t\\t                                v.[Hours] as VacationsHours\\r\\n\\t                                from\\r\\n\\t                                (\\r\\n\\t\\t                                select\\tsum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as AdministrativeHours,\\r\\n\\t\\t\\t\\t                                sum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when  t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n\\t\\t\\t\\t\\t\\t                                )\\r\\n\\t\\t\\t\\t\\t\\t                                then (t.[Hours] / 60.0)  \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as NewBusinessHours,\\r\\n\\t\\t\\t\\t                                sum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n\\t\\t\\t\\t\\t\\t                                ) \\r\\n\\t\\t\\t\\t\\t\\t                                then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as InternalWorkHours\\r\\n\\t\\t                                from\\tSkillTimesheetReport t\\r\\n                                        where   1=1\\r\\n                                                /*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                    ) t, Vacations v\\t\\t\\r\\n                                )\\r\\n                                select \u0027Administrative\u0027 as TimeType, ac.AdministrativeHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select \u0027New Business\u0027 as TimeType, ac.NewBusinessHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select \u0027Leaves\u0027 as TimeType, ac.VacationsHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select \u0027Internal\u0027 as TimeType, ac.InternalWorkHours as [Time] from ActualHours ac\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_NonBillable/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 0.5\n        },\n        \"format\": {\n     \r\n     \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true\n  }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "a39375e8-9d60-40bc-9d8b-7979106b39e9",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2020,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2020); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.getMyCompanies(\u0027\u0027,\r\n                    0,\r\n                    0).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        });return res;\r\n                    });\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027 ) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                });\r\n            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n}\",\r\n\"displayExpr\": \"function (data) {  \r\n    if(!data) return \u0027All divisions\u0027; \r\n    if( data.CompanyName \u0026\u0026 data.CompanyName != \u0027\u0027 ) {\r\n        return data.CompanyName + \u0027 - \u0027 + data.Name;\r\n}\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n}; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n] = companyId;\r\n} else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n}\r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027, CompanyName: \u0027\u0027, DivisionName: \u0027\u0027\r\n});return res;\r\n})\r\n}\",\r\n    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n\"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"onOpened\": \"function (e) {  e.component._popup.option(\u0027width\u0027, 350); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            \r\n            \r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027-\u0027, \u0027style\u0027, \u0027margin: 0px 3px; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.DivisionName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n}\",\r\n\"displayExpr\": \"function (data) {\r\n    if(!data) return \u0027All departments\u0027;  \r\n    if( data.CompanyName != \u0027\u0027 \u0026\u0026 data.DivisionName != \u0027\u0027 )\r\n        return data.CompanyName + \u0027 - \u0027 + data.DivisionName + \u0027 - \u0027 + data.Name;\r\n    else if( data.CompanyName != \u0027\u0027 )\r\n        return data.CompanyName + \u0027 - - \u0027 + data.Name;\r\n    else if( data.DivisionName != \u0027\u0027 )\r\n        return data.DivisionName + \u0027 - \u0027 + data.Name;\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "6bb0ff6d-a222-4d1e-a019-b78d6bdee885",
      "Name": "Fatur?veis vs n?o-Fatur?veis",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 14,\r\n        \"WidgetRows\": 12,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": false,\r\n                        \"metricName\": \"Total\",\r\n                        \"metricValue\": \"14,450\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"With Vacations As (\\r\\n\\tselect\\tsum(uv.[Hours]) as [Hours]\\r\\n\\tfrom    SkillUserVacation uv\\r\\n\\twhere\\t1=1\\r\\n\\t\\t\\t/*[DateFilter]*/ and uv.[Date] \u003e= @FromDate and uv.[Date] \u003c @ToDate /*[/DateFilter]*/                                ),\\r\\nActualHours as (\\r\\n\\tselect\\t(t.AdministrativeHours + t.InternalWorkHours + t.NewBusinessHours + v.[Hours]) as NonBillable,\\r\\n\\t\\t\\tt.[BillableHours] as Billable\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\tselect   sum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as AdministrativeHours,\\r\\n\\t\\t\\t\\t\\tsum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n                                                (\\r\\n                                                   (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n                                                   (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n                                                )\\r\\n                                                then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\tsum( \\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as InternalWorkHours,\\r\\n\\t\\t\\t\\t\\tsum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(t.ProjectBillable = 1 or t.JobBillable = 1)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as BillableHours\\r\\n\\t\\t\\tfrom\\tSkillTimesheetReport t\\r\\n\\t\\t\\twhere\\t1=1\\r\\n\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t) t, Vacations v\\r\\n)\\r\\nselect\\t\u0027Billable\u0027 as TimeType, \\r\\n\\t\\tah.Billable as [Time] \\r\\nfrom\\tActualHours ah\\r\\nunion all\\r\\nselect\\t\u0027Non Billable\u0027 as TimeType, \\r\\n\\t\\tah.NonBillable as [Time] \\r\\nfrom\\tActualHours ah\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_Billable_NonBillable/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 1\n        },\n        \"format\": {\n          \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true\n  }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "b55f87c7-cdd9-4dc7-9eb9-db1a7a369097",
      "Name": "Top 10 Departmentos",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais N?o-Fatur?veis\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 16,\r\n        \"WidgetYPosition\": 14,\r\n        \"WidgetRows\": 12,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": false,\r\n                        \"metricName\": \"Total\",\r\n                        \"metricValue\": \"14,450\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"With Vacations As\\r\\n                                (\\r\\n                                   select   uv.Department,\\r\\n                                            sum(uv.[Hours]) as [Hours]\\r\\n                                   from     SkillUserVacation uv\\r\\n                                   where\\t1=1\\r\\n                                            /*[DateFilter]*/ and uv.[Date] \u003e= @FromDate and uv.[Date] \u003c @ToDate /*[/DateFilter]*/\\r\\n                                    group by uv.Department\\r\\n                                )\\r\\n                                select   t.Department,\\r\\n                                      (\\r\\n                                         t.AdministrativeHours + \\r\\n                                         t.InternalWorkHours + \\r\\n                                         t.NewBusinessHours +\\r\\n                                         isnull(v.[Hours], 0.0)\\r\\n                                      ) as NonBillable\\r\\n                                from\\r\\n                                (\\r\\n                                   select   t.Department,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as AdministrativeHours,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 0 and \\r\\n                                               (\\r\\n                                                  (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n                                                  (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n                                               )\\r\\n                                               then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as NewBusinessHours,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 0 and \\r\\n                                               (\\r\\n                                                  (t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n                                               ) \\r\\n                                               then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as InternalWorkHours\\r\\n                                   from   SkillTimesheetReport t\\r\\n                                   where  1=1\\r\\n                                          /*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  and (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n                                   group by t.Department\\r\\n                                ) t\\r\\n                                left outer join Vacations v on (v.Department = t.Department)\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ],\r\n            \"Sort\": {\r\n                \"Type\": 2,\r\n                \"FieldName\": \"NonBillable\"\r\n            },\r\n            \"Top\": {\r\n                \"Count\": 10\r\n            }\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_NonBillable_Per_Department/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Department\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"NonBillable\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"Department\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText}\",\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "88e7e172-8229-451b-b151-f444a64ae977",
      "Name": "Per?odo",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 7,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais - Meses Selecionados\",\r\n        \"WidgetType\": \"rangeselector\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#e0e0e0\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 26,\r\n        \"WidgetRows\": 10,\r\n        \"WidgetColumns\": 48,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"startDate\": \"2018-01-01\",\r\n                \"endDate\": \"2019-12-31\",\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.WeekStart, \\r\\n\\t\\tv.[Year], \\r\\n\\t\\tv.[Month], \\r\\n\\t\\tv.YearWeek, \\r\\n\\t\\tsum(v.Hours) as [Hours] \\r\\nfrom\\tSkillAnalyticsTimeUtilization v\\r\\n\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\nwhere\\t1 = 1\\r\\n\\t\\t/*[DateFilter]*/ and v.[Year] \u003e= Year(@FromDate) /*[/DateFilter]*/\\r\\n\\t\\tand v.[Year] = @year\\r\\n\\t\\tand (v.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tand (v.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\ngroup by v.WeekStart, \\r\\n\\t\\tv.[Year], \\r\\n\\t\\tv.[Month], \\r\\n\\t\\tv.YearWeek\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"year\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Hours_Per_YearWeek/execute",
      "Configuration": "{\n \"margin\": {\n    \"top\": 0\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"line\",\n      \"argumentField\": \"WeekStart\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Hours\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"month\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"month\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": [\n    \"2018/01/01\",\n    \"2018/02/01\"\n  ]\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    },
    {
      "Id": "a260c621-a439-41e7-870f-fe09ee0bfb7f",
      "Name": "Top 10 Grupos de Tipologia",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 32,\r\n        \"WidgetYPosition\": 0,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Leaves\",\r\n                        \"metricFieldValue\": \"TimeOffHoursGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.TypologyGroupId,\\r\\n\\t\\tv.TypologyGroupName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.TypologyGroupId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.TypologyGroupId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.TypologyGroupId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.TypologyGroupId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[TypologyGroupId],\\r\\n\\t\\t\\t\\tt.[TypologyGroup] as TypologyGroupName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours      \\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\tt.[TypologyGroup],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tgroup by t.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\tt.[TypologyGroup]\\r\\n\\t\\t) t\\r\\n\\t\\t\\tleft outer join \\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tselect\\tuv.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[TypologyGroup],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfrom\\tSkillAnalyticsLeaves uv\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = uv.DepartmentId\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(uv.[Year], uv.[Month], 1) \u003e= @FromDate and DATEFROMPARTS(uv.[Year], uv.[Month], 1) \u003c @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgroup by uv.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[TypologyGroup]\\r\\n\\t\\t\\t\\t\\t\\t\\t) uv on (uv.[TypologyGroupId] = t.TypologyGroupId)\\r\\n) v\\r\\norder by v.TotalHours desc\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ],\r\n            \"Sort\": {\r\n                \"Type\": 1,\r\n                \"FieldName\": \"TotalHours\"\r\n            },\r\n            \"Top\": {\r\n                \"Count\": 10\r\n            }\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 150\n    },\n    \"palette\": \"Material\",\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"TypologyGroupName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"TotalHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"TypologyGroupName\"\n    }\n}",
      "DashboardDefinitionId": "35fd430a-00a6-413e-b6a7-755d82f0b35a"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 6,
  "Default": false
}
