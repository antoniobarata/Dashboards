{
  "DashboardDefinitionRoles": [],
  "Id": "382e9899-4114-49ba-b6b9-c2dc18319631",
  "Name": "Dashboard Utiliza??o",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "ac64ed74-735e-4c40-a4d5-3594c3c8142f",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": 4,\r\n    \"items\": [\r\n        {\r\n            \"name\": \"Year\",\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2020,\r\n                \"width\": 65,\r\n                \"placeholder\": \"year\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, 2020); SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027); SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter(\u0027year\u0027, e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ \r\n                            var searchValue = (\r\n                            loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            var searchTake = (loadOptions.searchValue != null \u0026\u0026 loadOptions.searchValue != \u0027\u0027 ? 10 : 100); \r\n                            return SkillsWorkflow.getMyCompanies(\u0027\u0027,\r\n                    0,\r\n                    0).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All companies\u0027\r\n                        });return res;\r\n                    });\r\n                }\",\r\n                \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027companies/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);}) }\"\r\n            },\r\n            \"placeholder\": \"All companies\",\r\n            \"displayExpr\": \"Name\",\r\n            \"valueExpr\": \"Id\",\r\n            \"onValueChanged\": \"function(e){ \r\n                if( e.value != null \u0026\u0026 e.value != \u0027\u0027 ) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, e.value);\r\n            } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Company\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n            }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DivisionId\u0027);\r\n        }\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component,\u0027CompanyId\u0027);}\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"DivisionId\",\r\n    \"label\": {\r\n        \"text\": \"Division\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"width\": 250,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ \r\n                            let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                            let skip = loadOptions.skip || 0; \r\n                            let take = loadOptions.take || 20; \r\n                            var param = { name:searchValue, skip: skip, take: take\r\n            }; \r\n                            var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                            if (companyId == \u002700000000-0000-0000-0000-000000000000\u0027) {\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,\r\n                null,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                });\r\n            } else if (companyId != null) { \r\n                                param[\u0027companyId\u0027\r\n                ] = companyId;\r\n                                return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027divisions/lookup\u0027,param,\r\n                {}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All divisions\u0027, CompanyName:\u0027\u0027\r\n                    });return res;\r\n                })\r\n            }\r\n        }\",\r\n            \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027,\u0027divisions/\u0027+key+\u0027/lookup\u0027,null,{}).then( result =\u003e  { return Promise.resolve(result);})}\"\r\n    },\r\n    \"placeholder\": \"All divisions\",\r\n    \"onValueChanged\": \"function(e){ \r\n                if (e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, e.value);\r\n    } else {\r\n                    SkillsWorkflow.setDashboardFilter(\u0027Division\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n    }\r\n                SW.setComponentByValue(e.previousValue, e.value, \u0027DepartmentId\u0027);\r\n}\",\r\n            \"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DivisionId\u0027); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n}\",\r\n\"displayExpr\": \"function (data) {  \r\n    if(!data) return \u0027All divisions\u0027; \r\n    if( data.CompanyName \u0026\u0026 data.CompanyName != \u0027\u0027 ) {\r\n        return data.CompanyName + \u0027 - \u0027 + data.Name;\r\n}\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"width\": 250,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ \r\n                    let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : \u0027\u0027); \r\n                    let skip = loadOptions.skip || 0; \r\n                    let take = loadOptions.take || 20;\r\n                    var param = { name: searchValue, skip: skip, take: take\r\n}; \r\n                    var divisionId = SW.getValueFromComponent(\u0027DivisionId\u0027); \r\n                    var companyId = SW.getValueFromComponent(\u0027CompanyId\u0027); \r\n                    if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 companyId != null \u0026\u0026 companyId != \u002700000000-0000-0000-0000-000000000000\u0027) { \r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n                        param[\u0027companyId\u0027\r\n] = companyId;\r\n} else if (divisionId != null \u0026\u0026 divisionId != \u002700000000-0000-0000-0000-000000000000\u0027 \u0026\u0026 (companyId == null || companyId == \u002700000000-0000-0000-0000-000000000000\u0027)) {\r\n                        param[\u0027divisionId\u0027\r\n] = divisionId;\r\n}\r\n                    return SkillsWorkflow.executeAPI(\u0027GET\u0027, \u0027departments\u0027,param,\r\n{}).then(function(res){ res.push({Id: \u002700000000-0000-0000-0000-000000000000\u0027, Name:\u0027All departments\u0027, CompanyName: \u0027\u0027, DivisionName: \u0027\u0027\r\n});return res;\r\n})\r\n}\",\r\n    \"byKey\": \"function(key) { return SW.executeAPI(\u0027GET\u0027, \u0027departments/\u0027 + key, null, {}).then( result =\u003e  { return Promise.resolve(result); } ) }\"\r\n},\r\n\"placeholder\": \"All departments\",\r\n\"onValueChanged\": \"function(e){ \r\n                    if(e.value != null \u0026\u0026 e.value != \u0027\u0027) {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, e.value);\r\n} else {\r\n                        SkillsWorkflow.setDashboardFilter(\u0027Department\u0027, \u002700000000-0000-0000-0000-000000000000\u0027);\r\n}\r\n}\",\r\n\"onInitialized\": \"function(e){ SW.saveComponent(e.component, \u0027DepartmentId\u0027); }\",\r\n\"onOpened\": \"function (e) {  e.component._popup.option(\u0027width\u0027, 350); }\",\r\n\"itemTemplate\": \"function (data, index, e) {\r\n            debugger;\r\n            \r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.Name, \u0027style\u0027, \u0027font-weight: bold\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.CompanyName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027-\u0027, \u0027style\u0027, \u0027margin: 0px 3px; float: left\u0027);\r\n\r\n            SW.setAttribute(e, \u0027\u0027, \u0027class\u0027, \u0027ellipsis\u0027);\r\n            SW.setAttribute(e, data.DivisionName, \u0027style\u0027, \u0027max-width: 47%; float: left\u0027);\r\n}\",\r\n\"displayExpr\": \"function (data) {\r\n    if(!data) return \u0027All departments\u0027;  \r\n    if( data.CompanyName != \u0027\u0027 \u0026\u0026 data.DivisionName != \u0027\u0027 )\r\n        return data.CompanyName + \u0027 - \u0027 + data.DivisionName + \u0027 - \u0027 + data.Name;\r\n    else if( data.CompanyName != \u0027\u0027 )\r\n        return data.CompanyName + \u0027 - - \u0027 + data.Name;\r\n    else if( data.DivisionName != \u0027\u0027 )\r\n        return data.DivisionName + \u0027 - \u0027 + data.Name;\r\n    return data.Name;\r\n}\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n}\r\n]\r\n}",
      "DashboardDefinitionId": "382e9899-4114-49ba-b6b9-c2dc18319631"
    },
    {
      "Id": "3df21662-3fc5-4f04-9415-3b2f5112b918",
      "Name": "Time Distribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 2,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Client, New Business and Admin\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 32,\r\n        \"WidgetYPosition\": 2,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"? Planned\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"SELECT\\tMetricName, \\r\\n\\t\\tMetricValue  \\r\\nFROM   \\r\\n(\\t\\r\\n\\t\\tselect\\tsum(v.Capacity) as Capacity,\\r\\n\\t\\t\\t\\tsum(v.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\tsum(v.[AdministrativeHours]) as [Administrative],\\r\\n\\t\\t\\t\\tsum(v.[InternalWorkHours]) as [Internal],\\r\\n\\t\\t\\t\\tsum(v.[NewBusinessHours]) as [NewBusiness],\\r\\n\\t\\t\\t\\tsum(v.[ClientHours]) as [Client],\\r\\n\\t\\t\\t\\tsum(v.[NonWorkedHours]) as [NonWorked]\\r\\n\\t\\tfrom\\tSkillAnalyticsUtilization v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere\\tv.[Year] = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n) p  \\r\\nUNPIVOT  \\r\\n(MetricValue FOR MetricName IN ([Administrative], [Internal], [NewBusiness], [Client], [NonWorked])) AS Totals\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"year\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Totals/execute",
      "Configuration": "{\n \"type\": \"doughnut\",\n  \"series\": {\n    \"argumentField\": \"MetricName\",\n    \"valueField\": \"MetricValue\",\n    \"label\": {\n      \"visible\": true,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      },\n      \"customizeText\": \"function (e) {return e.argumentText + \u0027: \u0027 + e.valueText; }\"\n    }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\":false,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\":{\"size\":8}\n  },\n  \"resolveLabelOverlapping\":\"shift\"\n}",
      "DashboardDefinitionId": "382e9899-4114-49ba-b6b9-c2dc18319631"
    },
    {
      "Id": "4813458a-853f-4f55-b4b8-3e38efb3d9ff",
      "Name": "Utilization per User",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Client, Admin and Internal Time spent per User\",\"WidgetType\":\"pivotgrid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":14,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.Company,\\r\\n\\t\\tv.Department,\\r\\n\\t\\tv.[User],\\r\\n\\t\\tv.Capacity,\\r\\n\\t\\tv.[Hours],\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.InternalWorkHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.ClientHours,\\r\\n\\t\\tv.NonWorkedHours,\\r\\n\\t\\tv.HeadCount,\\r\\n\\t\\tisnull(v.[ClientHours], 0.0) / iif(v.Capacity \u003e 0, v.Capacity, 1.0) as UtilizationPercentage\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tv.Company,\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.[User],\\r\\n\\t\\t\\t\\tsum(v.Capacity) as Capacity,\\r\\n\\t\\t\\t\\tsum(v.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\tsum(v.[AdministrativeHours]) as [AdministrativeHours],\\r\\n\\t\\t\\t\\tsum(v.[InternalWorkHours]) as [InternalWorkHours],\\r\\n\\t\\t\\t\\tsum(v.[NewBusinessHours]) as [NewBusinessHours],\\r\\n\\t\\t\\t\\tsum(v.[ClientHours]) as [ClientHours],\\r\\n\\t\\t\\t\\tsum(v.NonWorkedHours) as [NonWorkedHours],\\r\\n\\t\\t\\t\\t(\\t\\r\\n\\t\\t\\t\\t\\tDENSE_RANK() Over (Partition By v.Company, v.Department Order By v.[User]) \\r\\n\\t\\t\\t\\t\\t+ \\r\\n\\t\\t\\t\\t\\tDENSE_RANK() Over (Partition By v.Company, v.Department Order By v.[User] desc)\\r\\n\\t\\t\\t\\t\\t- 1 \\r\\n\\t\\t\\t\\t) as HeadCount\\r\\n\\t\\tfrom\\tSkillAnalyticsUtilization v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere\\tv.[Year] = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tgroup by v.Company,\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.[User]\\r\\n) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Company_Department_User/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 250\n    },\n    \"allowSortingBySummary\": true,\n    \"allowSorting\": true,\n    \"allowFiltering\": true,\n    \"allowExpandAll\": true,\n    \"height\": 250,\n    \"showBorders\": true,\n    \"fieldPanel\": {\n        \"showColumnFields\": true,\n        \"showDataFields\": true,\n        \"showFilterFields\": true,\n        \"showRowFields\": true,\n        \"allowFieldDragging\": true,\n        \"visible\": true\n    },\n    \"wordWrapEnabled\": false,\n    \"dataSource\": {\n        \"fields\": [\n            {\n                \"caption\": \"Department\",\n                \"width\": 120,\n                \"dataField\": \"Department\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"dataField\": \"Company\",\n                \"dataType\": \"string\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"dataField\": \"Responsible\",\n                \"dataType\": \"string\",\n                \"area\": \"filter\",\n                \"expanded\": true\n            },\n            {\n                \"dataField\": \"User\",\n                \"dataType\": \"string\",\n                \"area\": \"row\",\n                \"expanded\": true\n            },\n            {\n                \"caption\": \"Capacity\",\n                \"dataField\": \"Capacity\",\n                \"area\": \"data\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"format\": \"#,###.#\"\n            },\n            {\n                \"caption\": \"Client\",\n                \"dataField\": \"ClientHours\",\n                \"dataType\": \"number\",\n                \"summaryType\": \"sum\",\n                \"area\": \"data\",\n                \"format\": \"#,###.#\"\n            },\n            {\n                \"caption\": \"New Business\",\n                \"dataField\": \"NewBusinessHours\",\n                \"dataType\": \"number\",\n                \"area\": \"data\",\n                \"summaryType\": \"sum\",\n                \"format\": \"#,###.#\"\n            },\n            {\n                \"caption\": \"Administrative\",\n                \"dataField\": \"AdministrativeHours\",\n                \"dataType\": \"number\",\n                \"area\": \"data\",\n                \"summaryType\": \"sum\",\n                \"format\": \"#,###.#\"\n            },\n            {\n                \"caption\": \"Other\",\n                \"dataField\": \"NonWorkedHours\",\n                \"dataType\": \"number\",\n                \"area\": \"data\",\n                \"summaryType\": \"sum\",\n                \"format\": \"#,###.#\"\n            },\n            {\n                \"caption\": \"Utilization %\",\n                \"dataField\": \"UtilizationPercentage\",\n                \"dataType\": \"number\",\n                \"area\": \"data\",\n                \"format\": {\n                    \"type\": \"percent\",\n                    \"precision\": 1\n                },\n                \"summaryType\": \"avg\"\n            }\n        ],\n        \"store\": null\n    },\n    \"onCellPrepared\": \"function(e) {var dataField = e.component.getDataSource().getAreaFields(\u0027data\u0027)[e.cell.dataIndex];if(e.area==\u0027data\u0027 \u0026\u0026 dataField.caption==\u0027Utilization %\u0027){if(e.cell.value\u003c0.8){e.cellElement.css(\u0027background-color\u0027,\u0027#F57E4A\u0027).css(\u0027color\u0027,\u0027#ffffff\u0027);}if(e.cell.value\u003c0.5){e.cellElement.css(\u0027background-color\u0027,\u0027#EB3573\u0027).css(\u0027color\u0027,\u0027#ffffff\u0027);}}}\"\n}",
      "DashboardDefinitionId": "382e9899-4114-49ba-b6b9-c2dc18319631"
    },
    {
      "Id": "ae46226f-2057-4fe2-b681-ef46de2cd79d",
      "Name": "Monthly Distribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Department Time per Month\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":16,\"WidgetRows\":15,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"TimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"UtilizationPercentGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.Department,\\r\\n\\t\\tv.[Month],\\r\\n\\t\\tv.Capacity,\\r\\n\\t\\tv.[Hours],\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.InternalWorkHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.ClientHours,\\r\\n\\t\\tv.NonWorkedHours,\\r\\n\\t\\tv.HeadCount,\\r\\n\\t\\tisnull(v.[ClientHours], 0.0) / iif(v.Capacity \u003e 0, v.Capacity, 1.0) as UtilizationPercentage\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect \\tv.Department,\\r\\n\\t\\t\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1) as [Month],\\r\\n\\t\\t\\t\\tsum(v.Capacity) as Capacity,\\r\\n\\t\\t\\t\\tsum(v.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\tsum(v.[AdministrativeHours]) as [AdministrativeHours],\\r\\n\\t\\t\\t\\tsum(v.[InternalWorkHours]) as [InternalWorkHours],\\r\\n\\t\\t\\t\\tsum(v.[NewBusinessHours]) as [NewBusinessHours],\\r\\n\\t\\t\\t\\tsum(v.[ClientHours]) as [ClientHours],\\r\\n\\t\\t\\t\\tsum(v.NonWorkedHours) as [NonWorkedHours],\\r\\n\\t\\t\\t\\t0 as HeadCount\\r\\n\\t\\tfrom\\tSkillAnalyticsUtilization v\\r\\n\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\twhere\\tv.[Year] = @year\\r\\n\\t\\t\\t\\tand (v.CompanyId = @Company or @Company = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (d.Division = @Division or @Division = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\t\\t\\tand (v.DepartmentId = @Department or @Department = \u002700000000-0000-0000-0000-000000000000\u0027)\\r\\n\\t\\tgroup by v.Department,\\r\\n\\t\\t\\t\\tDATEFROMPARTS(v.[Year], v.[Month], 1)\\r\\n) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"year\",\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Utilization_Per_Department_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 300\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"Month\",\n        \"ignoreEmptyPoints\": false,\n        \"aggregation\": {\n            \"enabled\": true,\n            \"method\": \"sum\"\n        }\n    },\n    \"panes\": [\n        {\n            \"name\": \"time\"\n        },\n        {\n            \"name\": \"department\"\n        }\n    ],\n    \"series\": [\n        {\n            \"pane\": \"time\",\n            \"axis\": \"time\",\n            \"type\": \"stackedarea\",\n            \"valueField\": \"ClientHours\",\n            \"name\": \"Client\"\n        },\n        {\n            \"pane\": \"time\",\n            \"axis\": \"time\",\n            \"type\": \"stackedarea\",\n            \"valueField\": \"InternalWorkHours\",\n            \"name\": \"Internal\"\n        },\n        {\n            \"pane\": \"time\",\n            \"axis\": \"time\",\n            \"type\": \"stackedarea\",\n            \"valueField\": \"AdministrativeHours\",\n            \"name\": \"Administrative\"\n        },\n        {\n            \"pane\": \"time\",\n            \"axis\": \"time\",\n            \"type\": \"stackedarea\",\n            \"valueField\": \"NewBusinessHours\",\n            \"name\": \"New Business\"\n        },\n        {\n            \"pane\": \"department\",\n            \"axis\": \"department\",\n            \"type\": \"stackedarea\",\n            \"valueField\": \"Hours\",\n            \"name\": \"Total\"\n        }\n    ],\n    \"argumentAxis\": {\n        \"argumentType\": \"dateTime\",\n        \"type\": \"continuous\"\n    },\n    \"valueAxis\": [\n        {\n            \"name\": \"time\",\n            \"position\": \"left\",\n            \"title\": {\n                \"text\": \"Time\",\n                \"font\": {\n                    \"size\": 12\n                }\n            }\n        },\n        {\n            \"name\": \"department\",\n            \"position\": \"left\",\n            \"title\": {\n                \"text\": \"Total\",\n                \"font\": {\n                    \"size\": 12\n                }\n            }\n        }\n    ],\n    \"legend\": {\n        \"visible\": true,\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}",
      "DashboardDefinitionId": "382e9899-4114-49ba-b6b9-c2dc18319631"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 6,
  "Default": false
}
