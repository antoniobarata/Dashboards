{
  "DashboardDefinitionRoles": [],
  "Id": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7",
  "Name": "Burn per Role - Fee",
  "Active": true,
  "Location": 1,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "contract",
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "88137e83-4112-4bad-9251-1459abcb71d5",
      "Name": "User Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":20,\"WidgetRows\":17,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Billable Time\",\"metricFieldValue\":\"TotalBillableTime\"},{\"visible\":true,\"metricName\":\"Non-billable Time\",\"metricFieldValue\":\"TotalNonBillableTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.[User],\\r\\n\\tsum(v.BillableTime) as BillableTime,\\r\\n\\tsum(sum(v.BillableTime)) over () as TotalBillableTime,\\r\\n\\tsum(v.NewBusinessTime) as NonBillableTime,\\r\\n\\tsum(sum(v.NewBusinessTime)) over () as TotalNonBillableTime\\r\\nfrom \\r\\n\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\tleft outer join Project p on p.Oid = v.ProjectId \\r\\nwhere\\r\\n\\tp.[Contract] = @ContractId\\r\\ngroup by\\r\\n\\tv.[User]\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Users/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"User\",\n        \"type\": \"stackedbar\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable Time\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non-billable Time\"\n        }\n    ],\n    \"size\": {\n        \"height\": 300\n    },\n    \"rotated\": true\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "65c7ecb3-15eb-4e84-85d2-31b9b6d93dd0",
      "Name": "Summary",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Time per Department and Typology Group\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":20,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ForecastHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"% Burn\",\"metricFieldValue\":\"ActualContractedPercentageGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with GetRate as (\\r\\n\\tselect \\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User],\\r\\n\\t\\tMax(pht.SellRate) as Rate\\r\\n\\tfrom\\r\\n\\t\\tPlannedHoursTotal pht\\r\\n    where  \\r\\n        pht.GCRecord is null\\r\\n\\tgroup by\\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User]\\r\\n)\\r\\nselect \\r\\n\\tv.DepartmentId,\\r\\n\\tv.DepartmentName,\\r\\n\\tv.UserTypologyGroupId,\\r\\n\\tv.UserTypologyGroup,\\r\\n\\tv.UserId,\\r\\n\\tv.UserName,\\r\\n\\tv.ContractedHours,\\r\\n\\tIIF(n.RoleId is not null, v.ContractedHoursIncome, null) as ContractedHoursIncome,\\r\\n\\tv.PlannedHours,\\r\\n\\tIIF(n.RoleId is not null, v.PlannedHoursIncome, null) as PlannedHoursIncome,\\r\\n\\tv.ForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ForecastHoursIncome, null) as ForecastHoursIncome,\\r\\n\\tv.ActualHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualHoursIncome, null) as ActualHoursIncome,\\r\\n\\tv.BillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.BillableHoursIncome, null) as BillableHoursIncome,\\r\\n\\tv.NonBillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.NonBillableHoursIncome, null) as NonBillableHoursIncome,\\r\\n\\tv.ActualPlusForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastIncome, null) as ActualPlusForecastIncome,\\r\\n\\tv.ActualBurnPercentageHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualBurnPercentageIncome, null) as ActualBurnPercentageIncome,\\r\\n\\tv.ActualPlusForecastBurnPercentage,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastBurnIncome, null) as ActualPlusForecastBurnIncome,\\r\\n\\tv.BillableHoursGrandTotal,\\r\\n\\tv.ForecastHoursGrandTotal,\\r\\n\\tv.ContractedHoursGrandTotal,\\r\\n\\tv.ActualContractedPercentageGrandTotal\\r\\nfrom (\\r\\n\\tselect\\r\\n\\t\\t\\tv.DepartmentId as DepartmentId,\\r\\n\\t\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t\\tv.UserTypologyGroupId as UserTypologyGroupId,\\r\\n\\t\\t\\tutg.[Name] as UserTypologyGroup,\\r\\n\\t\\t\\tv.[UserId] as UserId,\\r\\n\\t\\t\\tu.[Name] as UserName,\\r\\n\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\tsum(v.ForecastHoursIncome) as ForecastHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\tsum(v.NonBillableHoursIncome) as NonBillableHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) + sum(v.ForecastHours) as ActualPlusForecastHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome) as ActualPlusForecastIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) \u003e 0, sum(v.ActualHours) / sum(v.ContractedHours), 0) as ActualBurnPercentageHours,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) \u003e 0, sum(v.ActualHoursIncome) / sum(v.ContractedHoursIncome), 0) as ActualBurnPercentageIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) \u003e 0, (sum(v.ActualHours) + sum(v.ForecastHours)) / sum(v.ContractedHours), 0) as ActualPlusForecastBurnPercentage,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) \u003e 0, (sum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome)) / sum(v.ContractedHoursIncome), 0) as ActualPlusForecastBurnIncome,\\r\\n\\t\\t\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n\\t\\t\\tsum(sum(v.ForecastHours)) OVER () as ForecastHoursGrandTotal,\\r\\n\\t\\t\\tsum(sum(v.ContractedHours)) OVER () as ContractedHoursGrandTotal,\\r\\n\\t\\t\\tIIF(sum(sum(v.[ContractedHours])) OVER () \u003e 0, sum(sum(v.[BillableHours])) OVER () / sum(sum(v.[ContractedHours])) OVER (), 0.0) * 100 as ActualContractedPercentageGrandTotal\\r\\n\\t\\tfrom (\\r\\n\\t\\t\\tselect\\r\\n\\t\\t\\t\\tv.DepartmentId,\\r\\n\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\t\\tsum(v.ForecastHoursIncome) as ForecastHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHoursIncome) as NonBillableHoursIncome\\r\\n\\t\\t\\tfrom (\\r\\n\\t\\t\\t\\t\\tselect \\r\\n\\t\\t\\t\\t\\t\\tIsNull(pht.Department, IsNull(ut.Department, IsNull(u.Department,(select top 1 ut.Department from UserTypology ut where ut.UserTypologyGroup = pht.UserTypologyGroup)))) as DepartmentId,\\r\\n\\t\\t\\t\\t\\t\\tIsNull(pht.UserTypologyGroup, ut.UserTypologyGroup) as UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tIsNull(pht.[User], u.Oid) as UserId,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pht.ContractedMinutes, 0)) / 60.0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t(sum(isnull(pht.ContractedMinutes, 0)) / 60.0) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pht.PlannedMinutes, 0)) / 60.0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t(sum(isnull(pht.PlannedMinutes, 0)) / 60.0) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom \\r\\n\\t\\t\\t\\t\\t\\tPlannedHoursTotal pht\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Project p on p.Oid = pht.Project\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join [User] u on u.Oid = pht.[User]\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join [UserTypology] ut on ut.Oid = u.Typology\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = pht.Project and gru.[User] = pht.[User])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project = pht.Project and grut.[UserTypologyGroup] = pht.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\t\\tpht.GCRecord is null and\\r\\n\\t\\t\\t\\t\\t\\tp.[Contract] = @ContractId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tpht.Department,\\r\\n\\t\\t\\t\\t\\t\\tu.Department,\\r\\n\\t\\t\\t\\t\\t\\tut.Department,\\r\\n\\t\\t\\t\\t\\t\\tut.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tu.Oid,\\r\\n\\t\\t\\t\\t\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tpht.[User],\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\t\\tIsNull(u.Department, IsNull(ut.Department,(select top 1 ut.Department from UserTypology ut where ut.UserTypologyGroup = pha.UserTypologyGroupId))) as DepartmentId,\\r\\n\\t\\t\\t\\t\\t\\tIsNull(pha.UserTypologyGroupId, ut.UserTypologyGroup) as UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tIsNull(pha.UserId, u.Oid) as UserId,\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pha.[Hours], 0)) as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pha.[Hours], 0)) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom\\r\\n\\t\\t\\t\\t\\t\\tAnalytics.DatamartPlannedHours pha\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Project p on p.Oid = pha.ProjectId\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join [User] u on u.Oid = pha.[UserId]\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join [UserTypology] ut on ut.Oid = u.Typology\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = pha.ProjectId and gru.[User] = pha.[UserId])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project = pha.ProjectId and grut.[UserTypologyGroup] = pha.UserTypologyGroupId)\\r\\n\\t\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\t\\tpha.[Year] \u003e= Year(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\t\\t\\t\\tpha.[Month] \u003e= Month(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\t\\t\\t\\tp.[Contract] = @ContractId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tu.Department, \\r\\n\\t\\t\\t\\t\\t\\tut.Department,\\r\\n\\t\\t\\t\\t\\t\\tpha.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tut.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tpha.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tu.Oid,\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\t\\tv.DepartmentId,\\r\\n\\t\\t\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.ActualTime) as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.ActualTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.BillableTime) as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.BillableTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.NewBusinessTime) as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.NewBusinessTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom \\r\\n\\t\\t\\t\\t\\t\\tAnalytics.DatamartTimesheet v\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = v.ProjectId and gru.[User] = v.[UserId])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project = v.ProjectId and grut.[UserTypologyGroup] = v.UserTypologyGroupId)\\r\\n\\t\\t\\t\\t\\twhere \\r\\n\\t\\t\\t\\t\\t\\tp.[Contract] = @ContractId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tv.DepartmentId,\\r\\n\\t\\t\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t) v\\r\\n\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\tv.DepartmentId,\\r\\n\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\tv.[UserId]\\r\\n\\t\\t) v\\r\\n\\t\\t\\tleft outer join [User] u on u.Oid = v.UserId\\r\\n\\t\\t\\tleft outer join UserTypologyGroup utg on utg.Oid = v.UserTypologyGroupId\\r\\n\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\tv.DepartmentId,\\r\\n\\t\\t\\td.[Name],\\r\\n\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\tutg.[Name],\\r\\n\\t\\t\\tv.UserId,\\r\\n\\t\\t\\tu.[Name]\\r\\n) v\\r\\nleft outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = \u0027DeliverablesSellRead\u0027)\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Estimate_Service_Deliverable_TypologyGroup/execute",
      "Configuration": "{\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"filterRow\": {\r\n        \"visible\": true\r\n    },\r\n    \"height\": \"400\",\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": false,\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"columnMinWidth\": \"100\",\r\n    \"filterPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"DepartmentName\",\r\n            \"caption\": \"Department\",\r\n            \"groupIndex\": 1,\r\n            \"autoExpandGroup\": true\r\n        },\r\n        {\r\n            \"dataField\": \"UserTypologyGroup\",\r\n            \"caption\": \"Typology Group\",\r\n            \"width\": 175\r\n        },\r\n        {\r\n            \"dataField\": \"UserName\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHours\",\r\n            \"caption\": \"Contracted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHoursIncome\",\r\n            \"caption\": \"Contracted $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHours\",\r\n            \"caption\": \"Forecasted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"alignment\": \"right\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHoursIncome\",\r\n            \"caption\": \"Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedHours\",\r\n            \"caption\": \"Planned\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 100,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHours\",\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                },\r\n                {\r\n                    \"dataField\": \"BillableHoursIncome\",\r\n                    \"caption\": \"Billable $\",\r\n                    \"dataType\": \"number\",\r\n                    \"format\": {\r\n                        \"type\": \"currency\",\r\n                        \"precision\": 2\r\n                    },\r\n                    \"displayFormat\": \"{0}\",\r\n                    \"allowGrouping\": false,\r\n                    \"width\": 125\r\n                },\r\n                {\r\n                    \"dataField\": \"NonBillableHours\",\r\n                    \"caption\": \"Non Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHoursIncome\",\r\n            \"caption\": \"Actual $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"visible\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastHours\",\r\n            \"caption\": \"Actual + Forecast\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastIncome\",\r\n            \"caption\": \"Actual + Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageHours\",\r\n            \"caption\": \"Actual Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 0.9, i.value \u003c 0.9 \u0026\u0026 i.value \u003e= 0.5, i.value \u003c 0.5, true); }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageIncome\",\r\n            \"caption\": \"Actual Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                if(i.data.ActualBurnPercentageIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 0.9, i.value \u003c 0.9 \u0026\u0026 i.value \u003e= 0.5, i.value \u003c 0.5, true);                }            }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnPercentage\",\r\n            \"caption\": \"Actual + Forecast Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 0.9, i.value \u003c 0.9 \u0026\u0026 i.value \u003e= 0.5, i.value \u003c 0.5, true); }\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedContractedPercentage\",\r\n            \"caption\": \"Planned Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 0.9, i.value \u003c 0.9 \u0026\u0026 i.value \u003e= 0.5, i.value \u003c 0.5, true); }\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnIncome\",\r\n            \"caption\": \"Actual + Forecast Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                 if(i.data.ActualPlusForecastBurnIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + \u0027%\u0027, i.value \u003e= 0.9, i.value \u003c 0.9 \u0026\u0026 i.value \u003e= 0.5, i.value \u003c 0.5, true);                 }                   }\",\r\n            \"visible\": false\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === \u0027ActualBurnHours\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                    case \u0027calculate\u0027:                    options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case \u0027finalize\u0027:                    if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                            break;                }            }                    if (options.name === \u0027ActualPlusForecastBurnHours\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                    options.totalValue = [0,0];                        break;                    case \u0027calculate\u0027:                    options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case \u0027finalize\u0027:                    if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                    options.totalValue = 0;                            break;                }            }            if (options.name === \u0027PlannedBurn\u0027) {                        switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                        case \u0027calculate\u0027:                        options.totalValue[0] = options.totalValue[0] + options.value.PlannedHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case \u0027finalize\u0027:                        if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }                        if (options.name === \u0027ActualPlusForecastBurnIncome\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                    case \u0027calculate\u0027:                        options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case \u0027finalize\u0027:                        if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }            if (options.name === \u0027ActualBurnIncome\u0027) {                switch(options.summaryProcess) {                    case \u0027start\u0027:                        options.totalValue = [0,0];                        break;                    case \u0027calculate\u0027:                        options.totalValue[0] = options.totalValue[0] + options.value.ActualIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case \u0027finalize\u0027:                        if(Number(options.totalValue[1]) \u003e 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"ActualBurnIncome\",\r\n                \"showInColumn\": \"Actual Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnIncome\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"PlannedBurn\",\r\n                \"showInColumn\": \"Planned Burn %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnHours\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualBurnHours\",\r\n                \"showInColumn\": \"Actual Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"ProjectName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"All Projects\"\r\n            },\r\n            {\r\n                \"column\": \"ActualTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Planned\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecasted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedRevenue\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedActualIncomeVariation\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"name\": \"ActualBurnIncome\",\r\n                \"showInColumn\": \"Actual Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnIncome\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnHours\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualBurnHours\",\r\n                \"showInColumn\": \"Actual Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Forecasted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Contracted $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": \"true\"\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    }\r\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "e08a0cf4-70b7-4fac-a05f-3fdf6ded357b",
      "Name": "Typology Group Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 7,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Actual Time\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 51,\r\n        \"WidgetRows\": 15,\r\n        \"WidgetColumns\": 48,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Contracted Time\",\r\n                        \"metricFieldValue\": \"ContractedTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Planned Time\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Actual Time\",\r\n                        \"metricFieldValue\": \"ActualTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\tutg.[Name] as UserTypologyGroup,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\tsum(v.PlannedTime) as PlannedTime,\\r\\n\\tsum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal,\\r\\n\\tsum(v.ContractedTime) as ContractedTime,\\r\\n\\tsum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t0 as PlannedTime,\\r\\n\\t\\t0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\twhere \\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.UserTypologyGroupId\\r\\n\\tunion all\\r\\n\\tselect \\r\\n\\t\\tv.UserTypologyGroup as UserTypologyGroupId,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(v.PlannedMinutes) / 60.0 as PlannedTime,\\r\\n\\t\\tsum(v.ContractedMinutes) / 60.0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tdbo.PlannedHoursTotal v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.Project\\r\\n\\twhere\\r\\n        v.GCRecord is null and\\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.UserTypologyGroup\\r\\n) v left outer join UserTypologyGroup utg on utg.Oid = v.UserTypologyGroupId\\r\\ngroup by\\r\\n\\tutg.[Name]\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Typology Group/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"UserTypologyGroup\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"type\": \"area\",\n            \"valueField\": \"PlannedTime\",\n            \"name\": \"Planned Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\"\n        },\n        {\n            \"type\": \"line\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"point\": {\n                \"symbol\": \"triangleDown\",\n                \"color\": \"#a5bdd7\"\n            }\n        }\n    ],\n    \"size\": {\n        \"height\": 250\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"orientation\": \"horizontal\",\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\",\n        \"font\": {\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "b77c38da-5ea2-448d-b04d-5f3974452436",
      "Name": "Monthly Distribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Planned Time, Utilization \u0026 Income\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":20,\"WidgetRows\":17,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with ResourcesWithVat as (\\r\\n\\tselect \\r\\n\\t\\tsum(v.ValueWithVatIncome) as ResourcesWithVatIncome,\\r\\n\\t\\tsum(v.ValueWithVatCost) as ResourcesWithVatCost\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.EstimateResource(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join Estimate e on e.Oid = v.EstimateId\\r\\n\\twhere\\r\\n\\t\\te.[Contract] = @ContractId\\r\\n),\\r\\nPlannedAndContracted as (\\r\\n\\tselect \\r\\n\\t\\tsum(pht.ContractedMinutes) / 60.0 as ContractedTime,\\r\\n\\t\\tsum(pht.PlannedMinutes) / 60.0 as PlannedTime\\r\\n\\tfrom \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = pht.Project\\r\\n\\twhere\\r\\n\\t\\tpht.GCRecord is null and\\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n)\\r\\nselect \\r\\n\\tv.MonthYear,\\r\\n\\tv.YearMonth,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(v.ActualTimeGrandTotal) as ActualTimeGrandTotal,\\r\\n\\tsum(v.ForecastTime) as ForecastTime,\\r\\n\\tsum(v.ForecastTimeGrandTotal) as ForecastTimeGrandTotal,\\r\\n\\tsum(v.ResourcesWithVatCost) / sum(v.NumberOfLines) as ResourcesWithVatCost,\\r\\n\\tsum(v.ResourcesWithVatIncome) / sum(v.NumberOfLines) as ResourcesWithVatIncome,\\r\\n\\tsum(v.ContractedTime) as ContractedTimeGrandTotal,\\r\\n\\tsum(v.ContractedTime) / sum(v.NumberOfLines) as ContractedTime,\\r\\n\\tsum(v.PlannedTime) as PlannedTimeGrandTotal,\\r\\n\\tsum(v.PlannedTime) / sum(v.NumberOfLines) as PlannedTime\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.MonthYear,\\r\\n\\t\\tv.YearMonth,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\t\\tsum(v.ForecastTime) as ForecastTime,\\r\\n\\t\\tsum(sum(v.ForecastTime)) over () as ForecastTimeGrandTotal,\\r\\n\\t\\t--IIF(v.YearMonth \u003c concat(Year(getDate()), format(Month(getDate()), \u00270#\u0027)), sum(rwv.ResourcesWithVatCost), 0) as ResourcesWithVatCost,\\r\\n        sum(rwv.ResourcesWithVatCost) as ResourcesWithVatCost,\\r\\n\\t\\t--IIF(v.YearMonth \u003c concat(Year(getDate()), format(Month(getDate()), \u00270#\u0027)), sum(rwv.ResourcesWithVatIncome), 0) as ResourcesWithVatIncome,\\r\\n\\t\\tsum(rwv.ResourcesWithVatIncome) as ResourcesWithVatIncome,\\r\\n\\t\\tIIF(v.YearMonth \u003c concat(Year(getDate()), format(Month(getDate()), \u00270#\u0027)), sum(pc.ContractedTime), 0) as ContractedTime,\\r\\n\\t\\tIIF(v.YearMonth \u003c concat(Year(getDate()), format(Month(getDate()), \u00270#\u0027)), sum(pc.PlannedTime), 0) as PlannedTime,\\r\\n\\t\\tcount(case sum(v.ActualTime) when 0 then null else 1 end) over () as NumberOfLines\\r\\n\\tfrom (\\r\\n\\t\\tselect \\r\\n\\t\\t\\tconcat(format(v.[Month], \u00270#\u0027), \u0027/\u0027, v.[Year]) as MonthYear,\\r\\n\\t\\t\\tIIF(v.[Month] \u003e 9, concat(v.[Year], v.[Month]), concat(v.[Year], \u00270\u0027, v.[Month])) as YearMonth,\\r\\n\\t\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t\\t0 as ForecastTime\\r\\n\\t\\tfrom \\r\\n\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\t\\twhere\\r\\n\\t\\t\\tp.[Contract] = @ContractId\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\tv.[Month],\\r\\n\\t\\t\\tv.[Year]\\r\\n\\t\\tunion all\\r\\n\\t\\tselect \\r\\n\\t\\t\\tconcat(format(ph.[Month], \u00270#\u0027), \u0027/\u0027, ph.[Year]) as MonthYear,\\r\\n\\t\\t\\tIIF(ph.[Month] \u003e 9, concat(ph.[Year], ph.[Month]), concat(ph.[Year], \u00270\u0027, ph.[Month])) as YearMonth,\\r\\n\\t\\t\\t0 as ActualTime,\\r\\n\\t\\t\\tsum(ph.[Hours]) as ForecastTime\\r\\n\\t\\tfrom\\r\\n\\t\\t\\tAnalytics.PlannedHours(@CurrentUserId) ph\\r\\n\\t\\t\\t\\tleft outer join Project p on p.Oid = ph.ProjectId\\r\\n\\t\\twhere\\r\\n\\t\\t\\tph.[Year] \u003e= Year(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\tph.[Month] \u003e= Month(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\tp.[Contract] = @ContractId\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\tph.[Month],\\r\\n\\t\\t\\tph.[Year]\\r\\n\\t) v, ResourcesWithVat rwv, PlannedAndContracted pc\\r\\n\\tgroup by\\r\\n\\t\\tv.MonthYear,\\r\\n\\t\\tv.YearMonth\\r\\n) v\\r\\ngroup by\\r\\n\\tv.MonthYear,\\r\\n\\tv.YearMonth\\r\\norder by\\r\\n\\tv.YearMonth\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 300\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"MonthYear\",\n        \"ignoreEmptyPoints\": false\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"argumentAxis\": {\n        \"type\": \"discrete\",\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    },\n    \"panes\": [\n        {\n            \"name\": \"Value\"\n        },\n        {\n            \"name\": \"Time\"\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"Value\",\n            \"pane\": \"Value\",\n            \"title\": \"Value\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        },\n        {\n            \"name\": \"Time\",\n            \"pane\": \"Time\",\n            \"title\": \"Time\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        }\n    ],\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatIncome\",\n            \"name\": \"Income\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatCost\",\n            \"name\": \"Cost\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ForecastTime\",\n            \"name\": \"Forecast\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"pane\": \"Time\"\n        }\n    ]\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "f07dc1fe-2b22-48ba-9d04-6aac7bd58082",
      "Name": "Department Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Utilization\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 16,\r\n        \"WidgetYPosition\": 37,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Actual\",\r\n                        \"metricFieldValue\": \"ActualTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Planned\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Contracted\",\r\n                        \"metricFieldValue\": \"ContractedTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\td.[Name] as DepartmentName,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\tsum(v.PlannedTime) as PlannedTime,\\r\\n\\tsum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal,\\r\\n\\tsum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.DepartmentId,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t0 as PlannedTime,\\r\\n\\t\\t0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\twhere \\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.DepartmentId\\r\\n\\tunion all\\r\\n\\tselect \\r\\n\\t\\tv.Department as DepartmentId,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(v.PlannedMinutes) / 60.0 as PlannedTime,\\r\\n\\t\\tsum(v.ContractedMinutes) / 60.0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tdbo.PlannedHoursTotal v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.Project\\r\\n\\twhere\\r\\n        v.GCRecord is null and\\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.Department\\r\\n) v left outer join Department d on d.Oid = v.DepartmentId\\r\\ngroup by\\r\\n\\td.[Name]\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DepartmentName\",\n        \"valueField\": \"ActualTime\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "9a1a0199-fe3b-494a-8042-88f79ec3887a",
      "Name": "Typology Group Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 6,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Utilization\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 32,\r\n        \"WidgetYPosition\": 37,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Actual\",\r\n                        \"metricFieldValue\": \"ActualTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Planned\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Contracted\",\r\n                        \"metricFieldValue\": \"ContractedTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\tutg.[Name] as UserTypologyGroup,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\tsum(v.PlannedTime) as PlannedTime,\\r\\n\\tsum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal,\\r\\n\\tsum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t0 as PlannedTime,\\r\\n\\t\\t0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\twhere \\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.UserTypologyGroupId\\r\\n\\tunion all\\r\\n\\tselect \\r\\n\\t\\tv.UserTypologyGroup as UserTypologyGroupId,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(v.PlannedMinutes) / 60.0 as PlannedTime,\\r\\n\\t\\tsum(v.ContractedMinutes) / 60.0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tdbo.PlannedHoursTotal v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.Project\\r\\n\\twhere\\r\\n        v.GCRecord is null and\\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.UserTypologyGroup\\r\\n) v left outer join UserTypologyGroup utg on utg.Oid = v.UserTypologyGroupId\\r\\ngroup by\\r\\n\\tutg.[Name]\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"UserTypologyGroup\",\n        \"valueField\": \"ActualTime\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    },
    {
      "Id": "ac767795-2992-4c40-ade5-f4fdd023579c",
      "Name": "Division Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Utilization\",\r\n        \"WidgetType\": \"pie\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 37,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 16,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Actual\",\r\n                        \"metricFieldValue\": \"ActualTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Planned\",\r\n                        \"metricFieldValue\": \"PlannedTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Contracted\",\r\n                        \"metricFieldValue\": \"ContractedTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\td.[Name] as DivisionName,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\tsum(v.PlannedTime) as PlannedTime,\\r\\n\\tsum(sum(v.PlannedTime)) over () as PlannedTimeGrandTotal,\\r\\n\\tsum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.DivisionId,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t0 as PlannedTime,\\r\\n\\t\\t0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.ProjectId\\r\\n\\twhere \\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\tv.DivisionId\\r\\n\\tunion all\\r\\n\\tselect \\r\\n\\t\\td.Division as DivisionId,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(v.PlannedMinutes) / 60.0 as PlannedTime,\\r\\n\\t\\tsum(v.ContractedMinutes) / 60.0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tdbo.PlannedHoursTotal v\\r\\n\\t\\t\\tleft outer join Department d on d.Oid = v.Department\\r\\n\\t\\t\\tleft outer join Project p on p.Oid = v.Project\\r\\n\\twhere\\r\\n        v.GCRecord is null and\\r\\n\\t\\tp.[Contract] = @ContractId\\r\\n\\tgroup by\\r\\n\\t\\td.Division\\r\\n) v left outer join Division d on d.Oid = v.DivisionId\\r\\ngroup by\\r\\n\\td.[Name]\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DivisionName\",\n        \"valueField\": \"ActualTime\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "4f8f9f47-f20b-4122-ac2e-d3233949f2d7"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 18,
  "Default": false
}
