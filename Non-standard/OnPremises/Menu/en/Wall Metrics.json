{
  "DashboardDefinitionRoles": [

  ],
  "Id": "953f6be2-c363-4cbc-b628-d6e3828d1b6f",
  "Name": "Wall Metrics On Premises",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "65cfb17e-5164-409f-889b-01311913ce36",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":15,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\r\\n    v.[Name] as [User], \\r\\n    v.CreatedBy as UserId, \\r\\n    v.Day, \\r\\n    v.[HasImage], \\r\\n    sum(v.Done) as Done, \\r\\n    sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect d.CreatedBy, u.[Name], u.[HasImage],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate ) < @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(wst.[Status] > 5, 1, 0)) as Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n        left outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [User] u on u.[Oid] = d.[CreatedBy]\\r\\nwhere e.[GCRecord] is null and d.CreatedBy is not null and \\r\\n\\t\\t(u.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(u.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(u.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\\r\\ngroup by d.CreatedBy, d.AgreedDate, u.[Name], u.[HasImage]\\r\\n) as v\\r\\ngroup by v.CreatedBy, v.Day, v.[Name], v.[HasImage]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"ProjectOid\",\"ClientOid\",\"UserOid\",\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"onContentReady\":\"function prepareDataSource(e) {\\r\\n    var dataSource = e.component.getDataSource();\\r\\n    if (typeof dataSource === 'undefined') return;\\r\\n    if (this.r) return;\\r\\n    var q = dataSource.store().createQuery();\\r\\n    dataSource._items.forEach((e) => { \\r\\n                                        e.Delayed = 0;\\r\\n                                        e.MondayDone = 0;\\r\\n                                        e.MondayToDo = 0;\\r\\n                                        e.TuesdayDone = 0;\\r\\n                                        e.TuesdayToDo = 0;\\r\\n                                        e.WednesdayDone = 0;\\r\\n                                        e.WednesdayToDo = 0;\\r\\n                                        e.ThursdayDone = 0;\\r\\n                                        e.ThursdayToDo = 0;\\r\\n                                        e.FridayDone = 0;\\r\\n                                        e.FridayToDo = 0;\\r\\n                                        if (e.Day === 0) {\\r\\n                                            e.Delayed = e.ToDo;\\r\\n                                        } else if (e.Day === 1) {\\r\\n                                            e.MondayDone = e.Done;\\r\\n                                            e.MondayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 2) {\\r\\n                                            e.TuesdayDone = e.Done;\\r\\n                                            e.TuesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 3) {\\r\\n                                            e.WednesdayDone = e.Done;\\r\\n                                            e.WednesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 4) {\\r\\n                                            e.ThursdayDone = e.Done;\\r\\n                                            e.ThursdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 5) {\\r\\n                                            e.FridayDone = e.Done;\\r\\n                                            e.FridayToDo = e.ToDo;\\r\\n                                        }\\r\\n    });\\r\\n    var data = dataSource._items;\\r\\n    var resultData = groupByUser(data);\\r\\n    e.component.option('dataSource', resultData);\\r\\n    this.r = true;\\r\\n    function groupByUser(data) {\\r\\n        var objectResult = {};\\r\\n        data.forEach(row => {\\r\\n            if (!objectResult[row.UserId]) {\\r\\n                objectResult[row.UserId] = {\\r\\n                    UserId: row.UserId,\\r\\n                    User: row.User,\\r\\n                    HasImage: row.HasImage,\\r\\n                    Delayed: row.Delayed,\\r\\n                    MondayDone: row.MondayDone,\\r\\n                    MondayToDo: row.MondayToDo,\\r\\n                    TuesdayDone: row.TuesdayDone,\\r\\n                    TuesdayToDo: row.TuesdayToDo,\\r\\n                    WednesdayDone: row.WednesdayDone,\\r\\n                    WednesdayToDo: row.WednesdayToDo,\\r\\n                    ThursdayDone: row.ThursdayDone,\\r\\n                    ThursdayToDo: row.ThursdayToDo,\\r\\n                    FridayDone: row.FridayDone,\\r\\n                    FridayToDo: row.FridayToDo\\r\\n                };\\r\\n            } else {\\r\\n                objectResult[row.UserId] = {\\r\\n                    ...objectResult[row.UserId],\\r\\n                    ...objectResult[row.User],\\r\\n                    ...objectResult[row.HasImage],\\r\\n                    Delayed: objectResult[row.UserId].Delayed + row.Delayed,\\r\\n                    MondayDone: objectResult[row.UserId].MondayDone + row.MondayDone,\\r\\n                    MondayToDo: objectResult[row.UserId].MondayToDo + row.MondayToDo,\\r\\n                    TuesdayDone: objectResult[row.UserId].TuesdayDone + row.TuesdayDone,\\r\\n                    TuesdayToDo: objectResult[row.UserId].TuesdayToDo + row.TuesdayToDo,\\r\\n                    WednesdayDone: objectResult[row.UserId].WednesdayDone + row.WednesdayDone,\\r\\n                    WednesdayToDo: objectResult[row.UserId].WednesdayToDo + row.WednesdayToDo,\\r\\n                    ThursdayDone: objectResult[row.UserId].ThursdayDone + row.ThursdayDone,\\r\\n                    ThursdayToDo: objectResult[row.UserId].ThursdayToDo + row.ThursdayToDo,\\r\\n                    FridayDone: objectResult[row.UserId].FridayDone + row.FridayDone,\\r\\n                    FridayToDo: objectResult[row.UserId].FridayToDo + row.FridayToDo\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n        var arrayResult = [];\\r\\n        Object.values(objectResult).forEach((value) => arrayResult.push(value));\\r\\n        return arrayResult;\\r\\n    }\\r\\n}\",\"stateStoring\":{\"enabled\":false},\"height\":\"213\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"export\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"scrolling\":{\"mode\":\"virtual\",\"rowRenderingMode\":\"virtual\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"\",\"format\":\"#,##0\",\"cellTemplate\":\"function(e, i) {SK.showImage(e, 'user', 'small', i.data['HasImage'], i.data['User'], i.data['UserId'])}\",\"width\":30},{\"dataField\":\"User\",\"name\":\"User\",\"caption\":\"User\",\"width\":\"100%\"},{\"dataField\":\"Delayed\",\"name\":\"Delayed\",\"caption\":\"Delayed\",\"alignment\":\"center\",\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\"width\":80},{\"name\":\"Monday\",\"caption\":\"Monday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['MondayToDo'        ];                var done = i.data['MondayDone'        ];                var aux = done + ' / ' + toDo;                e.append(aux);    }\"},{\"name\":\"Tuesday\",\"caption\":\"Tuesday\",\"width\":80,\"headerCellTemplate\":\"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['TuesdayToDo'    ];                var done = i.data['TuesdayDone'    ];                var aux = done + ' / ' + toDo;                e.append(aux);}\"},{\"caption\":\"Wednesday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+2);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['WednesdayToDo'];                var done = i.data['WednesdayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"},{\"caption\":\"Thursday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+3);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['ThursdayToDo'];                var done = i.data['ThursdayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"},{\"caption\":\"Friday\",\"headerCellTemplate\":\"function (element, info) {                var today = new Date();                today.setDate(today.getDate()+4);                var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});                SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\"width\":80,\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['FridayToDo'];                var done = i.data['FridayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"}]}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "41f1d5b9-b5bd-4f6d-83af-05ec89103c9d",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":24,\"WidgetYPosition\":6,\"WidgetRows\":9,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\r\\n    v.[Name] as Client, v.Client as ClientId, v.Day, v.[HasImage], sum(v.Done) as Done, sum(v.ToDo) as ToDo\\r\\nfrom (\\r\\nselect cc.Oid as Client, cc.[Name], cc.[HasImage],\\r\\n\\t\\tcase \\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate ) < @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day,\\r\\n\\t\\tsum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)) as ToDo,\\r\\n\\t\\tsum(iif(wst.[Status] > 5, 1, 0)) as Done\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n        left outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [CommercialClient] cc on cc.[Oid] = d.[Client]\\r\\n        left outer join [User] u on u.[Oid] = d.[CreatedBy]\\r\\nwhere e.[GCRecord] is null and d.CreatedBy is not null and \\r\\n        d.AgreedDate < @ToDate and\\r\\n\\t\\t(d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\\r\\ngroup by cc.Oid, cc.[Name], cc.[HasImage], d.AgreedDate\\r\\n) as v\\r\\nwhere (v.Done != 0 or v.ToDo != 0) \\r\\ngroup by v.[Name], v.Client, v.Day, v.[HasImage]\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"ProjectOid\",\"ClientOid\",\"UserOid\",\"startDate\",\"endDate\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"onContentReady\": \"function prepareDataSource(e) {\\r\\n    var dataSource = e.component.getDataSource();\\r\\n    if (typeof dataSource === 'undefined') return;\\r\\n    if (this.r) return;\\r\\n    var q = dataSource.store().createQuery();\\r\\n    dataSource._items.forEach((e) => { \\r\\n                                        e.Delayed = 0;\\r\\n                                        e.MondayDone = 0;\\r\\n                                        e.MondayToDo = 0;\\r\\n                                        e.TuesdayDone = 0;\\r\\n                                        e.TuesdayToDo = 0;\\r\\n                                        e.WednesdayDone = 0;\\r\\n                                        e.WednesdayToDo = 0;\\r\\n                                        e.ThursdayDone = 0;\\r\\n                                        e.ThursdayToDo = 0;\\r\\n                                        e.FridayDone = 0;\\r\\n                                        e.FridayToDo = 0;\\r\\n                                        if (e.Day === 0) {\\r\\n                                            e.Delayed = e.ToDo;   \\r\\n                                        } else if (e.Day === 1) {\\r\\n                                            e.MondayDone = e.Done;\\r\\n                                            e.MondayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 2) {\\r\\n                                            e.TuesdayDone = e.Done;\\r\\n                                            e.TuesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 3) {\\r\\n                                            e.WednesdayDone = e.Done;\\r\\n                                            e.WednesdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 4) {\\r\\n                                            e.ThursdayDone = e.Done;\\r\\n                                            e.ThursdayToDo = e.ToDo;\\r\\n                                        } else if (e.Day === 5) {\\r\\n                                            e.FridayDone = e.Done;\\r\\n                                            e.FridayToDo = e.ToDo;\\r\\n                                        }\\r\\n    });\\r\\n    var data = dataSource._items;\\r\\n    var resultData = groupByUser(data);\\r\\n    e.component.option('dataSource', resultData);\\r\\n    this.r = true;\\r\\n    function groupByUser(data) {\\r\\n        var objectResult = {};\\r\\n        data.forEach(row => {\\r\\n            if (!objectResult[row.ClientId]) {\\r\\n                objectResult[row.ClientId] = {\\r\\n                    ClientId: row.ClientId,\\r\\n                    Client: row.Client,\\r\\n                    HasImage: row.HasImage,\\r\\n                    Delayed: row.Delayed,\\r\\n                    MondayDone: row.MondayDone,\\r\\n                    MondayToDo: row.MondayToDo,\\r\\n                    TuesdayDone: row.TuesdayDone,\\r\\n                    TuesdayToDo: row.TuesdayToDo,\\r\\n                    WednesdayDone: row.WednesdayDone,\\r\\n                    WednesdayToDo: row.WednesdayToDo,\\r\\n                    ThursdayDone: row.ThursdayDone,\\r\\n                    ThursdayToDo: row.ThursdayToDo,\\r\\n                    FridayDone: row.FridayDone,\\r\\n                    FridayToDo: row.FridayToDo\\r\\n                };\\r\\n            } else {\\r\\n                objectResult[row.ClientId] = {\\r\\n                    ...objectResult[row.ClientId],\\r\\n                    ...objectResult[row.Client],\\r\\n                    ...objectResult[row.HasImage],\\r\\n                    Delayed: objectResult[row.ClientId].Delayed + row.Delayed,\\r\\n                    MondayDone: objectResult[row.ClientId].MondayDone + row.MondayDone,\\r\\n                    MondayToDo: objectResult[row.ClientId].MondayToDo + row.MondayToDo,\\r\\n                    TuesdayDone: objectResult[row.ClientId].TuesdayDone + row.TuesdayDone,\\r\\n                    TuesdayToDo: objectResult[row.ClientId].TuesdayToDo + row.TuesdayToDo,\\r\\n                    WednesdayDone: objectResult[row.ClientId].WednesdayDone + row.WednesdayDone,\\r\\n                    WednesdayToDo: objectResult[row.ClientId].WednesdayToDo + row.WednesdayToDo,\\r\\n                    ThursdayDone: objectResult[row.ClientId].ThursdayDone + row.ThursdayDone,\\r\\n                    ThursdayToDo: objectResult[row.ClientId].ThursdayToDo + row.ThursdayToDo,\\r\\n                    FridayDone: objectResult[row.ClientId].FridayDone + row.FridayDone,\\r\\n                    FridayToDo: objectResult[row.ClientId].FridayToDo + row.FridayToDo\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n        var arrayResult = [];\\r\\n        Object.values(objectResult).forEach((value) => arrayResult.push(value));\\r\\n        return arrayResult;\\r\\n    }\\r\\n}\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"height\": \"213\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SK.showImage(e, 'client', 'small', i.data['HasImage'], i.data['Client'], i.data['ClientId'])}\",\r\n            \"width\": 40\r\n        },\r\n        {\r\n            \"dataField\": \"Client\",\r\n            \"name\": \"Client\",\r\n            \"caption\": \"Client\",\r\n            \"width\": \"100%\"\r\n        },\r\n        {\r\n            \"dataField\": \"Delayed\",\r\n            \"caption\": \"Delayed\",\r\n            \"alignment\": \"center\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:rgb(247, 65, 45); color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"width\": 80\r\n        },\r\n        {\r\n            \"caption\": \"Monday\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) {                 SW.setAttribute(e, i.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');             }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['MondayToDo'];                var done = i.data['MondayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);            }\"\r\n        },\r\n        {\r\n            \"name\": \"Tuesday\",\r\n            \"caption\": \"Tuesday\",\r\n            \"width\": 80,\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['TuesdayToDo'];                var done = i.data['TuesdayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);            }\"\r\n        },\r\n        {\r\n            \"caption\": \"Wednesday\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+2);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['WednesdayToDo'];                var done = i.data['WednesdayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"\r\n        },\r\n        {\r\n            \"caption\": \"Thursday\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+3);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['ThursdayToDo'];                var done = i.data['ThursdayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"\r\n        },\r\n        {\r\n            \"caption\": \"Friday\",\r\n            \"headerCellTemplate\": \"function (element, info) {            var today = new Date();            today.setDate(today.getDate()+4);            var date = today.toLocaleDateString(undefined,{day:'2-digit'}) + ' ' + today.toLocaleDateString(undefined,{month:'short'});            SW.setAttribute(element, info.column.caption, 'style', 'background-color:#0072C6; color:white; border-radius: 4px; line-height: 25px; width: 70px; font-weight: 700');}\",\r\n            \"width\": 80,\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['FridayToDo'];                var done = i.data['FridayDone'];                var aux = done + ' / ' + toDo;                e.append(aux);}\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "690246df-4b83-4b1e-a940-256780bd0add",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 4,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\t\\r\\n\\t\\tucdd.Company as Companies,\\r\\n\\t\\tucdd.Division as Divisions,\\r\\n\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\t\\r\\n\\t\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\t\\r\\n\\t\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\r\\n\\tcount(e.Subject) as countLate\\r\\nfrom \\r\\n\\tCurrentUserPermissions cup, \\r\\n\\tDeliverable d\\r\\n\\t\\tleft outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere \\r\\n\\tConvert(Date, d.AgreedDate) < @FromDate \\r\\n    and (wst.[Status] = 4 or wst.[Status] = 5)\\r\\n\\tand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\tand u.Company = cup.Companies\\r\\n\\tand u.Division = cup.Divisions\\r\\n\\tand u.Department = cup.Departments\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": false,\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Delayed\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color: rgb(247, 65, 45); color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"dataField\": \"countLate\",\r\n            \"cellTemplate\": \"function(e, i) {                if(i.data.countLate != 0) {                    SW.setAttribute(e, i.data.countLate, 'style', 'font-size: 15px; font-weight: 700');                } else {                    SW.setAttribute(e, '0', 'style', 'font-size: 15px; font-weight: 700');                }            }\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "c438f2b0-c700-4b98-b497-28e05b7b0514",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 8,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 24,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as ThursdayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as ThursdayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere Convert(Date, d.AgreedDate) = DATEADD(day, 3, @FromDate)\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Thursday\",\r\n            \"headerCellTemplate\": \"function (element, info) {\r\n                SW.setAttribute(element, info.column.caption, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');\r\n                }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['ThursdayToDo'];                var done = i.data['ThursdayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "f8f05374-62dd-4403-a55e-30204cbe81ae",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 6,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 12,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as TuesdayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as TuesdayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere Convert(Date, d.AgreedDate) = DATEADD(day, 1, @FromDate)\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"scrolling1\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Tuesday\",\r\n            \"headerCellTemplate\": \"function(e, i) {                 SW.setAttribute(e, i.column.caption, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['TuesdayToDo'];                var done = i.data['TuesdayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')    }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "dc9b43ef-9b5a-4a52-8583-5588b11d7a0e",
      "Name": "Last 10 Weeks",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"rangeselector\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":2,\"WidgetRows\":4,\"WidgetColumns\":37,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select DATEADD(week, DATEDIFF(day, 0, getdate())/7-19, 0) as Week\\r\\nunion all\\r\\nselect DATEADD(week, DATEDIFF(day, 0, getdate())/7+1, 0) as Week\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"size\": {\r\n        \"height\": 130\r\n    },\r\n    \"title1\": {\r\n        \"text\": \"Last 10 Weeks\",\r\n        \"horizontalAlignment\": \"left\",\r\n        \"font\": {\r\n            \"size\": 17,\r\n            \"family\": \"Varela Round\",\r\n            \"weight\": 400\r\n        }\r\n    },\r\n    \"containerBackgroundColor\": \"#e0e0e0\",\r\n    \"selectedRangeColor\": \"#f5564a\",\r\n    \"dataSourceField\": \"Week\",\r\n    \"scale\": {\r\n        \"minorTickInterval\": \"week\",\r\n        \"tickInterval\": \"week\",\r\n        \"valueType\": \"datetime\",\r\n        \"maxRange\": {\r\n            \"weeks\": 1\r\n        },\r\n        \"marker\": {\r\n            \"separatorHeight\": 0,\r\n            \"textLeftIndent\": 0,\r\n            \"textTopIndent\": 0,\r\n            \"topIndent\": 0\r\n        }\r\n    },\r\n    \"sliderMarker\": {\r\n        \"format\": \"monthAndDay\",\r\n        \"color\": \"#da5859\"\r\n    },\r\n    \"value\": {\r\n        \"length\": {\r\n            \"weeks\": 1\r\n        }\r\n    }\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "1fbfe79c-8336-4013-8cf3-62f916f88cbb",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 6,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":6,\"WidgetRows\":18,\"WidgetColumns\":24,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect \\td.CreatedBy as UserId, \\r\\n\\t\\tu.[Name] as [User], \\r\\n\\t\\tu.[HasImage] as UserHasImage,\\r\\n\\t\\te.Subject as Name,\\r\\n\\t\\tp.[Name] as Project, \\r\\n\\t\\tconvert(Date, d.AgreedDate) as Date,\\r\\n\\t\\tcc.Name as Client,\\r\\n\\t\\tcc.HasImage as ClientHasImage,\\r\\n\\t\\tcc.Oid as ClientId,\\r\\n        case \\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) < @FromDate then 0\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = @FromDate then 1\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 1, @FromDate) then 2\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 2, @FromDate) then 3\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 3, @FromDate) then 4\\r\\n\\t\\t\\twhen Convert(Date, d.AgreedDate) = DATEADD(day, 4, @FromDate) then 5\\r\\n\\t\\tend as Day\\r\\nfrom [CommercialClient] cc, CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n        left outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join Project p on p.[Oid] = d.Project\\r\\n        left outer join [User] u on u.[Oid] = d.CreatedBy\\r\\nwhere \\tcc.Oid = d.Client and\\r\\n\\t\\t(wst.[Status] = 4 or wst.[Status] = 5)and\\r\\n\\t\\td.AgreedDate < @ToDate and\\r\\n\\t\\t((u.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000')) and\\r\\n\\t\\t((u.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000')) and\\r\\n\\t\\t((u.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000'))\\r\\n\\t\\tand u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\\r\\ngroup by d.CreatedBy, u.[Name], u.[HasImage], e.Subject, p.[Name], cc.[Name], cc.[HasImage], cc.Oid, Convert(Date, d.AgreedDate)\\r\\norder by Convert(Date, d.AgreedDate) desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\",\"startDate\",\"endDate\",\"ClientOid\",\"ProjectOid\",\"UserOid\"]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"height\":\"485\",\"searchPanel\":{\"visible\":false},\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":false,\"rowAlternationEnabled\":false,\"showBorders\":false,\"columns\":[{\"dataField\":\"ClientId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, 'client', 'medium',i.data['ClientHasImage'], i.data['Client'], i.data['ClientId']) }\",\"width\":50},{\"dataField\":\"Project\",\"name\":\"Project\",\"caption\":\"Project\",\"width\":150},{\"dataField\":\"UserId\",\"caption\":\"\",\"cellTemplate\":\"function(e, i) { SK.showImage(e, 'user', 'small',i.data['UserHasImage'], i.data['User'], i.data['UserId']) }\",\"width\":30},{\"dataField\":\"User\",\"name\":\"Name\",\"caption\":\"Executor\",\"width\":150},{\"dataField\":\"Name\",\"name\":\"Name\",\"caption\":\"Job\",\"width\":\"100%\"},{\"dataField\":\"Date\",\"caption\":\"Date\",\"dataType\":\"date\",\"format\":\"d MMM\",\"cellTemplate\":\"function(e, i) {                var showDate = i.text;                if (i.data.Day == 0) {                    SW.setAttribute(e, showDate, 'style', 'background-color:rgb(247,                65,                45); color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            } else {                    SW.setAttribute(e, showDate, 'style', 'background-color:#0072C6; color: white; border-radius: 4px; width: 60px; line-height: 25px; font-weight: 600')            }        }\",\"alignment\":\"center\",\"width\":70}]}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "964daaff-a57f-4970-8e3e-80b9a44e5581",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 5,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 6,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as MondayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as MondayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere Convert(Date, d.AgreedDate) = @FromDate\\r\\n        and (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\t    and ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"caption\": \"Monday\",\r\n            \"headerCellTemplate\": \"function(e, i) { SW.setAttribute(e, i.column.caption, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700'); }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                var toDo = i.data['MondayToDo'];                var done = i.data['MondayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "6ecf49f2-ee74-425e-b433-8d15ebae31cd",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 7,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 18,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as WednesdayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as WednesdayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere Convert(Date, d.AgreedDate) = DATEADD(day, 2, @FromDate)\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\"stateStoring\":{\"enabled\":false},\"searchPanel\":{\"visible\":false},\"width\":\"120\",\"height\":\"83\",\"columnChooser\":{\"enabled\":false},\"onToolbarPreparing\":\"null\",\"export\":{\"enabled\":false},\"groupPanel\":{\"visible\":false},\"grouping\":{\"autoExpandAll\":false},\"selection\":{\"mode\":\"none\"},\"sorting\":{\"mode\":\"none\"},\"allowColumnReordering\":\"true\",\"rowAlternationEnabled\":\"true\",\"showBorders\":false,\"columns\":[{\"caption\":\"Wednesday\",\"headerCellTemplate\":\"function (element, info) {                SW.setAttribute(element, info.column.caption, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');            }\",\"alignment\":\"center\",\"cellTemplate\":\"function(e, i) {                 var toDo = i.data['WednesdayToDo'];                var done = i.data['WednesdayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700')            }\"}]}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "62019501-8b00-4c68-83ee-99617016c09b",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 2,
      "Order": 11,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":38,\"WidgetYPosition\":24,\"WidgetRows\":4,\"WidgetColumns\":8,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select top 1 \\r\\n    CURRENT_TIMESTAMP as [Date]\\r\\nfrom CommercialClient\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"100%\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"onContentReady\": \"function (e) {         if(window.refreshTimeout) clearTimeout(window.refreshTimeout);        window.refreshTimeout = setTimeout( function() { SW.refreshDashboard();    },    60000)}\",\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Date\",\r\n            \"caption\": \"Last Refresh\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM H:mm\",\r\n            \"headerCellTemplate\": \"function (e, i) {            var final = SW.setAttribute(e, i.column.caption, 'style', 'font-size: 15px; font-weight: 700');            e.append(final);    }\",\r\n            \"cellTemplate\": \"function(e, i) {             SW.setAttribute(e, i.text, 'style', 'font-size: 18px; font-weight: 700');}\",\r\n            \"alignment\": \"center\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"null\"\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "e52751b2-e66e-48c6-bfcd-dae2b234a25d",
      "Name": "Client, Project and User filter",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"tag\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":37,\"WidgetYPosition\":0,\"WidgetRows\":6,\"WidgetColumns\":11,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  'Client' as GroupName, \\r\\n        'ClientOid' as GroupId, \\r\\n        c.Name, \\r\\n        c.Oid \\r\\nfrom    CommercialClient c\\r\\nunion all\\r\\nselect  'Project' as GroupName, \\r\\n        'ProjectOid' as GroupId, \\r\\n        p.Name,\\r\\n\\t\\tp.Oid\\r\\nfrom    Project p\\r\\nwhere p.[Name] <> ''\\r\\nunion all\\r\\nselect  'User' as GroupName, \\r\\n        'UserOid' as GroupId, \\r\\n        u.Name, \\r\\n        u.Oid \\r\\nfrom    SecuritySystemUser ssu ,[User] u\\r\\nwhere   ssu.Oid = u.Oid and\\r\\n        ssu.GCRecord is null and\\r\\n        ssu.IsActive = 1\",\"mapping\":{\"groupExpr\":\"GroupName\",\"groupId\":\"GroupId\",\"displayExpr\":\"Name\",\"valueExpr\":\"Oid\"}}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"width\": 250\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "a4923fdc-107f-4057-ad0c-e07724f47a91",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 1,
      "Order": 9,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"\",\r\n        \"WidgetType\": \"grid\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 30,\r\n        \"WidgetYPosition\": 24,\r\n        \"WidgetRows\": 4,\r\n        \"WidgetColumns\": 6,\r\n        \"WidgetHeader\": {\r\n            \"showTitle\": false,\r\n            \"showSubTitle\": false,\r\n            \"WidgetMetrics\": {\r\n                \"visible\": false,\r\n                \"Metrics\": []\r\n            },\r\n            \"WidgetPeriodChooser\": {\r\n                \"visible\": false,\r\n                \"type\": \"\",\r\n                \"startDate\": null,\r\n                \"endDate\": null\r\n            }\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with CurrentUserPermissions as (\\r\\n\\tselect\\tucdd.Company as Companies,\\r\\n\\t\\t\\tucdd.Division as Divisions,\\r\\n\\t\\t\\tucdd.Department as Departments\\r\\n\\tfrom\\tSkillUsersCompaniesDivisionsDepartments ucdd\\r\\n\\twhere\\tucdd.[User] = @CurrentUserId\\r\\n)\\r\\nselect IsNull(sum(iif(wst.[Status] = 4 or wst.[Status] = 5, 1, 0)), 0) as FridayToDo,\\r\\n\\t\\tIsNull(sum(iif(wst.[Status] > 5, 1, 0)), 0) as FridayDone\\r\\nfrom CurrentUserPermissions cup, Deliverable d\\r\\n        left outer join [WorkflowState] ws on ws.[Oid] = d.[WorkflowState]\\r\\n\\t\\tleft outer join [WorkflowStateType] wst on wst.[Oid] = ws.[WorkflowStateType]\\r\\n        left outer join [Event] e on d.[Oid] = e.[Oid]\\r\\n        left outer join [User] u on u.Oid = d.CreatedBy\\r\\nwhere Convert(Date, d.AgreedDate) = DATEADD(day, 4, @FromDate)\\r\\nand (d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000') and\\r\\n\\t\\t(d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n        and u.Company = cup.Companies\\r\\n\\t\\tand u.Division = cup.Divisions\\r\\n\\t\\tand u.Department = cup.Departments\\r\\n        and ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or d.Client in (@ClientOid))\\r\\n    and ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or d.Project in (@ProjectOid))\\r\\n\\tand ('00000000-0000-0000-0000-000000000000' in (@UserOid) or d.CreatedBy in (@UserOid))\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": [\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"startDate\",\r\n                \"endDate\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\",\r\n                \"UserOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"width\": \"120\",\r\n    \"height\": \"83\",\r\n    \"searchPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": false\r\n    },\r\n    \"onToolbarPreparing\": \"null\",\r\n    \"export\": {\r\n        \"enabled\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"sorting\": {\r\n        \"mode\": \"none\"\r\n    },\r\n    \"allowColumnReordering\": \"true\",\r\n    \"rowAlternationEnabled\": \"true\",\r\n    \"showBorders\": false,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Friday\",\r\n            \"headerCellTemplate\": \"function (element, info) {\r\n                SW.setAttribute(element, info.column.caption, 'style', 'background-color: #0072C6; color: white; border-radius: 4px; line-height: 33px; font-size: 18px; font-weight: 700');        }\",\r\n            \"alignment\": \"center\",\r\n            \"cellTemplate\": \"function(e, i) {                 var toDo = i.data['FridayToDo'];                var done = i.data['FridayDone'];                var aux = done + ' / ' + toDo;                SW.setAttribute(e, aux, 'style', 'font-size: 15px; font-weight: 700');            }\"\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    },
    {
      "Id": "f958c47e-103a-4375-a7c0-f0334a491987",
      "Name": "Filters",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":37,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"queryempty\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": \"3\",\r\n    \"onContentReady\": \"function setFilters(e) {\\r\\n    setTimeout(function () {\\r\\n\r\n    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');\\r\\n\r\n    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');\\r\\n\r\n    SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');\\r\\n    },\\r\\n        1000)\\r\\n}\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             var searchValue = (                            loadOptions.searchValue != null ? loadOptions.searchValue : '');                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                             return SkillsWorkflow.getMyCompanies('',                            0,                            0).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All companies'                                });return res;                            });                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n                },\r\n                \"placeholder\": \"All companies\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"onValueChanged\": \"function(e){                 if( e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('Company', e.value);            } else {                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');            }                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DivisionId\",\r\n            \"label\": {\r\n                \"text\": \"Division\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                             let skip = loadOptions.skip || 0;                             let take = loadOptions.take || 20;                             var param = { name:searchValue, skip: skip, take: take            };                             var companyId = SW.getValueFromComponent('CompanyId');                             if (companyId == '00000000-0000-0000-0000-000000000000') {                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',                null,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            } else if (companyId != null) {                                 param['companyId'                ] = companyId;                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All divisions'                    });return res;                })            }        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n                },\r\n                \"placeholder\": \"All divisions\",\r\n                \"onValueChanged\": \"function(e){                 if (e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('Division', e.value);    } else {                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');    }                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DepartmentId\",\r\n            \"label\": {\r\n                \"text\": \"Department\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 250,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                     let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                     let skip = loadOptions.skip || 0;                     let take = loadOptions.take || 20;                    var param = { name: searchValue, skip: skip, take: take    };                     var divisionId = SW.getValueFromComponent('DivisionId');                     var companyId = SW.getValueFromComponent('CompanyId');                     if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') {                         param['divisionId'        ] = divisionId;                        param['companyId'        ] = companyId;    } else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {                        param['divisionId'        ] = divisionId;    }                    return SkillsWorkflow.executeAPI('GET', 'departments',param,    {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'All departments'        });return res;    });}\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n                },\r\n                \"placeholder\": \"All departments\",\r\n                \"onValueChanged\": \"function(e){         if(e.value != null && e.value != '') {            SkillsWorkflow.setDashboardFilter('Department', e.value);} else {            SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "953f6be2-c363-4cbc-b628-d6e3828d1b6f"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 1,
  "Default": false
}
