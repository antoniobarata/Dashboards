{
  "DashboardDefinitionRoles": [],
  "Id": "c2d6909c-2457-4a96-aad5-89ef403bd974",
  "Name": "Timesheet",
  "Active": true,
  "Location": 0,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "{}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "93de867b-31c6-4fe1-b957-152b29a0fed3",
      "Name": "Top 10 Departmentos",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais Não-Faturáveis\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":14,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With Vacations As\\r\\n                                (\\r\\n                                   select   uv.Department,\\r\\n                                            sum(uv.[Hours]) as [Hours]\\r\\n                                   from     SkillUserVacation uv\\r\\n                                   where\\t1=1\\r\\n                                            /*[DateFilter]*/ and uv.[Date] >= @FromDate and uv.[Date] < @ToDate /*[/DateFilter]*/\\r\\n                                    group by uv.Department\\r\\n                                )\\r\\n                                select   t.Department,\\r\\n                                      (\\r\\n                                         t.AdministrativeHours + \\r\\n                                         t.InternalWorkHours + \\r\\n                                         t.NewBusinessHours +\\r\\n                                         isnull(v.[Hours], 0.0)\\r\\n                                      ) as NonBillable\\r\\n                                from\\r\\n                                (\\r\\n                                   select   t.Department,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as AdministrativeHours,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 0 and \\r\\n                                               (\\r\\n                                                  (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n                                                  (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n                                               )\\r\\n                                               then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as NewBusinessHours,\\r\\n                                         sum(\\r\\n                                            case \\r\\n                                               when t.IsAdministrative = 0 and \\r\\n                                               (\\r\\n                                                  (t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n                                               ) \\r\\n                                               then (t.[Hours] / 60.0) \\r\\n                                               else 0 \\r\\n                                            end\\r\\n                                         ) as InternalWorkHours\\r\\n                                   from   SkillTimesheetReport t\\r\\n                                   where  1=1\\r\\n                                          /*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) >= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  and (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n                                   group by t.Department\\r\\n                                ) t\\r\\n                                left outer join Vacations v on (v.Department = t.Department)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"],\"Sort\":{\"Type\":2,\"FieldName\":\"NonBillable\"},\"Top\":{\"Count\":10}}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_NonBillable_Per_Department/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Department\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"NonBillable\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"Department\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText}\",\n      \"font\": {\n        \"size\": 8\n      }\n    }\n  }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "ee7070f1-0470-4955-98c3-1fd358484787",
      "Name": "Top 10 Usuários",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":0,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Admin\",\"metricFieldValue\":\"AdministrativeHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.EmployeeId,\\r\\n\\t\\tv.EmployeeName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.EmployeeId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.EmployeeId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.EmployeeId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.EmployeeId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[UserId] as EmployeeId,\\r\\n\\t\\t\\t\\tt.[User] as EmployeeName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tt.[User],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                        sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) >= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n\\t\\t\\t\\tgroup by t.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tt.[User]\\r\\n\\t\\t) t\\r\\n\\t\\t\\tleft outer join \\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tselect\\tuv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[User],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfrom\\tSkillAnalyticsLeaves uv\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = uv.DepartmentId\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(uv.[Year], uv.[Month], 1) >= @FromDate and DATEFROMPARTS(uv.[Year], uv.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgroup by uv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[User]\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\tuv on (uv.[UserId] = t.UserId)\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"],\"Sort\":{\"Type\":2,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_User/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 150\n    },\n    \"palette\": \"Material\",\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"EmployeeName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"TotalHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"customizeText\": \"function(t){return t.valueText.split(' - ')[0]}\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"EmployeeName\"\n    }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "db206ca9-96b8-4e86-afa2-239258cde490",
      "Name": "Cliente, Projecto e User",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"tag\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":37,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":11,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\t\\t\\twith t as\\r\\n(\\r\\n    select  d.Client,\\r\\n            d.Project,\\r\\n            d.Oid\\r\\n    from    Deliverable d,\\r\\n            [WorkflowState] ws, \\r\\n            [WorkflowStateType] wst\\r\\n    where \\tws.[Oid] = d.[WorkflowState] and\\r\\n            wst.[Oid] = ws.[WorkflowStateType] and\\r\\n            wst.[Status] = 4 and\\r\\n            cast(d.AgreedDate as date) <= cast(GetDate() as date) and\\r\\n            ((d.[Company]  = @Company or @Company = '00000000-0000-0000-0000-000000000000')) and\\r\\n            ((d.[Division] = @Division or @Division = '00000000-0000-0000-0000-000000000000')) and\\r\\n            ((d.[Department] = @Department or @Department = '00000000-0000-0000-0000-000000000000'))\\r\\n)\\r\\nselect  distinct\\r\\n        'Client' as GroupName, \\r\\n        'ClientOid' as GroupId, \\r\\n        c.NameAndExternalId as Name, \\r\\n        c.Oid as Oid\\r\\nfrom    CommercialClient c, t\\r\\nwhere   c.Oid = t.Client\\r\\nunion all\\r\\nselect  distinct \\r\\n        'Project' as GroupName, \\r\\n        'ProjectOid' as GroupId, \\r\\n        p.NameAndExternalId,\\r\\n\\t\\tp.Oid\\r\\nfrom    Project p, t\\r\\nwhere   p.Oid = t.Project\",\"mapping\":{\"groupExpr\":\"GroupName\",\"groupId\":\"GroupId\",\"displayExpr\":\"Name\",\"valueExpr\":\"Oid\"}}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[\"Company\",\"Division\",\"Department\"]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"align\": \"right\",\r\n    \"width\": \"250\",\r\n    \"placeholder\": \"Pesquisa por cliente e projecto\"\r\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "41fc4bb9-41dd-4322-86ed-2709cb169607",
      "Name": "",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"form\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#e0e0e0\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":2,\"WidgetColumns\":37,\"WidgetHeader\":{\"showTitle\":false,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"colCount\": \"4\",\r\n    \"items\": [\r\n        {\r\n            \"label\": {\r\n                \"text\": \"Ano\"\r\n            },\r\n            \"dataField\": \"Year\",\r\n            \"editorType\": \"dxNumberBox\",\r\n            \"editorOptions\": {\r\n                \"showSpinButtons\": true,\r\n                \"value\": 2020,\r\n                \"width\": 65,\r\n                \"placeholder\": \"ano\",\r\n                \"onContentReady\": \"function(e){ setTimeout(function() { SkillsWorkflow.setDashboardFilter('year', 2020); SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000'); SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}, 1000) }\",\r\n                \"onValueChanged\": \"function(e){ if(e.value != null) { SkillsWorkflow.setDashboardFilter('year', e.value); } }\"\r\n            },\r\n            \"noDataText\": \"Please wait...\"\r\n        },\r\n        {\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Companhia\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             var searchValue = (                            loadOptions.searchValue != null ? loadOptions.searchValue : '');                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);                             return SkillsWorkflow.getMyCompanies('',                    0,                    0).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'Todas as Companhias'                        });return res;                    });                }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','companies/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);}) }\"\r\n                },\r\n                \"placeholder\": \"Todas as Companhias\",\r\n                \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\",\r\n                \"onValueChanged\": \"function(e){                 if( e.value != null && e.value != '' ) {                    SkillsWorkflow.setDashboardFilter('Company', e.value);            } else {                    SkillsWorkflow.setDashboardFilter('Company', '00000000-0000-0000-0000-000000000000');            }                SW.setComponentByValue(e.previousValue, e.value, 'DivisionId');        }\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component,'CompanyId');}\"\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DivisionId\",\r\n            \"label\": {\r\n                \"text\": \"Divisão\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                             let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                             let skip = loadOptions.skip || 0;                             let take = loadOptions.take || 20;                             var param = { name:searchValue, skip: skip, take: take            };                             var companyId = SW.getValueFromComponent('CompanyId');                             if (companyId == '00000000-0000-0000-0000-000000000000') {                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',                null,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'Todas as Divisões', CompanyName:''                    });return res;                });            } else if (companyId != null) {                                 param['companyId'                ] = companyId;                                return SkillsWorkflow.executeAPI('GET', 'divisions/lookup',param,                {}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'Todas as Divisões', CompanyName:''                    });return res;                })            }        }\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET','divisions/'+key+'/lookup',null,{}).then( result =>  { return Promise.resolve(result);})}\"\r\n                },\r\n                \"placeholder\": \"Todas as Divisões\",\r\n                \"onValueChanged\": \"function(e){                 if (e.value != null && e.value != '') {                    SkillsWorkflow.setDashboardFilter('Division', e.value);    } else {                    SkillsWorkflow.setDashboardFilter('Division', '00000000-0000-0000-0000-000000000000');    }                SW.setComponentByValue(e.previousValue, e.value, 'DepartmentId');}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DivisionId'); }\",\r\n                \"itemTemplate\": \"function (data, index, e) {            SW.setAttribute(e, '', 'class', 'ellipsis');            SW.setAttribute(e, data.Name, 'style', 'font-weight: bold');            SW.setAttribute(e, '', 'class', 'ellipsis');            SW.setAttribute(e, data.CompanyName, 'style', 'max-width: 47%; float: left');}\",\r\n                \"displayExpr\": \"function (data) {      if(!data) return 'Todas as Divisões';     if( data.CompanyName && data.CompanyName != '' ) {        return data.CompanyName + ' - ' + data.Name;}    return data.Name;}\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        },\r\n        {\r\n            \"dataField\": \"DepartmentId\",\r\n            \"label\": {\r\n                \"text\": \"Departamento\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"width\": 200,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){                     let searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');                     let skip = loadOptions.skip || 0;                     let take = loadOptions.take || 20;                    var param = { name: searchValue, skip: skip, take: take};                     var divisionId = SW.getValueFromComponent('DivisionId');                     var companyId = SW.getValueFromComponent('CompanyId');                     if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && companyId != null && companyId != '00000000-0000-0000-0000-000000000000') {                         param['divisionId'] = divisionId;                        param['companyId'] = companyId;} else if (divisionId != null && divisionId != '00000000-0000-0000-0000-000000000000' && (companyId == null || companyId == '00000000-0000-0000-0000-000000000000')) {                        param['divisionId'] = divisionId;}                    return SkillsWorkflow.executeAPI('GET', 'departments',param,{}).then(function(res){ res.push({Id: '00000000-0000-0000-0000-000000000000', Name:'Todos os Departamentos', CompanyName: '', DivisionName: ''});return res;})}\",\r\n                    \"byKey\": \"function(key) { return SW.executeAPI('GET', 'departments/' + key, null, {}).then( result =>  { return Promise.resolve(result); } ) }\"\r\n                },\r\n                \"placeholder\": \"Todos os Departamentos\",\r\n                \"onValueChanged\": \"function(e){                     if(e.value != null && e.value != '') {                        SkillsWorkflow.setDashboardFilter('Department', e.value);} else {                        SkillsWorkflow.setDashboardFilter('Department', '00000000-0000-0000-0000-000000000000');}}\",\r\n                \"onInitialized\": \"function(e){ SW.saveComponent(e.component, 'DepartmentId'); }\",\r\n                \"onOpened\": \"function (e) {  e.component._popup.option('width', 350); }\",\r\n                \"itemTemplate\": \"function (data, index, e) {                                    SW.setAttribute(e, '', 'class', 'ellipsis');            SW.setAttribute(e, data.Name, 'style', 'font-weight: bold');            SW.setAttribute(e, '', 'class', 'ellipsis');            SW.setAttribute(e, data.CompanyName, 'style', 'max-width: 47%; float: left');            SW.setAttribute(e, '-', 'style', 'margin: 0px 3px; float: left');            SW.setAttribute(e, '', 'class', 'ellipsis');            SW.setAttribute(e, data.DivisionName, 'style', 'max-width: 47%; float: left');}\",\r\n                \"displayExpr\": \"function (data) {    if(!data) return 'Todos os Departamentos';      if( data.CompanyName != '' && data.DivisionName != '' )        return data.CompanyName + ' - ' + data.DivisionName + ' - ' + data.Name;    else if( data.CompanyName != '' )        return data.CompanyName + ' - - ' + data.Name;    else if( data.DivisionName != '' )        return data.DivisionName + ' - ' + data.Name;    return data.Name;}\",\r\n                \"valueExpr\": \"Id\",\r\n                \"disabled\": true\r\n            }\r\n        }\r\n    ]\r\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "141eaf99-e18f-4f71-82fe-5878f1ecfb6a",
      "Name": "Top 10 Grupos de Tipologia",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":0,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Leaves\",\"metricFieldValue\":\"TimeOffHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.TypologyGroupId,\\r\\n\\t\\tv.TypologyGroupName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.TypologyGroupId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.TypologyGroupId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.TypologyGroupId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.TypologyGroupId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[TypologyGroupId],\\r\\n\\t\\t\\t\\tt.[TypologyGroup] as TypologyGroupName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours      \\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\tt.[TypologyGroup],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) >= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n\\t\\t\\t\\tgroup by t.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\tt.[TypologyGroup]\\r\\n\\t\\t) t\\r\\n\\t\\t\\tleft outer join \\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tselect\\tuv.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[TypologyGroup],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfrom\\tSkillAnalyticsLeaves uv\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = uv.DepartmentId\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhere\\t1 = 1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(uv.[Year], uv.[Month], 1) >= @FromDate and DATEFROMPARTS(uv.[Year], uv.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (uv.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tgroup by uv.[TypologyGroupId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuv.[TypologyGroup]\\r\\n\\t\\t\\t\\t\\t\\t\\t) uv on (uv.[TypologyGroupId] = t.TypologyGroupId)\\r\\n) v\\r\\norder by v.TotalHours desc\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"],\"Sort\":{\"Type\":1,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 150\n    },\n    \"palette\": \"Material\",\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"TypologyGroupName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"TotalHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"overlappingBehavior\": \"stagger\",\n            \"font\": {\n                \"size\": 8\n            }\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"TypologyGroupName\"\n    }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "6bed86df-6cf0-402c-a554-65bb8403e26d",
      "Name": "Divisão não-Faturável",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":14,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With Vacations As\\r\\n                                (\\r\\n\\t                                select\\tsum(uv.[Hours]) as [Hours]\\r\\n\\t                                from\\tSkillUserVacation uv\\r\\n                                    where   1=1\\r\\n                                            /*[DateFilter]*/ and uv.[Date] >= @FromDate and uv.[Date] < @ToDate /*[/DateFilter]*/\\r\\n                                ),\\r\\n                                ActualHours As\\r\\n                                (\\r\\n\\t                                select\\tt.*,\\r\\n\\t\\t\\t                                v.[Hours] as VacationsHours\\r\\n\\t                                from\\r\\n\\t                                (\\r\\n\\t\\t                                select\\tsum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as AdministrativeHours,\\r\\n\\t\\t\\t\\t                                sum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when  t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n\\t\\t\\t\\t\\t\\t                                )\\r\\n\\t\\t\\t\\t\\t\\t                                then (t.[Hours] / 60.0)  \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as NewBusinessHours,\\r\\n\\t\\t\\t\\t                                sum(\\r\\n\\t\\t\\t\\t\\t                                case \\r\\n\\t\\t\\t\\t\\t\\t                                when t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                (t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n\\t\\t\\t\\t\\t\\t                                ) \\r\\n\\t\\t\\t\\t\\t\\t                                then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t                                else 0 \\r\\n\\t\\t\\t\\t\\t                                end\\r\\n\\t\\t\\t\\t                                ) as InternalWorkHours\\r\\n\\t\\t                                from\\tSkillTimesheetReport t\\r\\n                                        where   1=1\\r\\n                                                /*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) >= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n                                    ) t, Vacations v\\t\\t\\r\\n                                )\\r\\n                                select 'Administrative' as TimeType, ac.AdministrativeHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select 'New Business' as TimeType, ac.NewBusinessHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select 'Leaves' as TimeType, ac.VacationsHours as [Time] from ActualHours ac\\r\\n                                union all\\r\\n                                select 'Internal' as TimeType, ac.InternalWorkHours as [Time] from ActualHours ac\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_NonBillable/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 0.5\n        },\n        \"format\": {\n     \r\n     \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true\n  }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "80b93b2d-5d50-4543-aab6-7898914bd578",
      "Name": "Período",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 7,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Horas Reais - Meses Selecionados\",\r\n        \"WidgetType\": \"rangeselector\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#e0e0e0\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 26,\r\n        \"WidgetRows\": 10,\r\n        \"WidgetColumns\": 48,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"startDate\": \"2018-01-01\",\r\n                \"endDate\": \"2019-12-31\",\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select\\tv.WeekStart, \\r\\n\\t\\tv.[Year], \\r\\n\\t\\tv.[Month], \\r\\n\\t\\tv.YearWeek, \\r\\n\\t\\tsum(v.Hours) as [Hours] \\r\\nfrom\\tSkillAnalyticsTimeUtilization v\\r\\n\\t\\t\\tleft outer join Department d on d.Oid = v.DepartmentId\\r\\nwhere\\t1 = 1\\r\\n\\t\\t/*[DateFilter]*/ and v.[Year] >= Year(@FromDate) /*[/DateFilter]*/\\r\\n\\t\\tand v.[Year] = @year\\r\\n\\t\\tand (v.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\tand (v.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or v.ClientId in (@ClientOid)) \\r\\n\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or v.ProjectId in (@ProjectOid))\\r\\ngroup by v.WeekStart, \\r\\n\\t\\tv.[Year], \\r\\n\\t\\tv.[Month], \\r\\n\\t\\tv.YearWeek\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"year\",\r\n                \"Company\",\r\n                \"Division\",\r\n                \"Department\",\r\n                \"ClientOid\",\r\n                \"ProjectOid\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Hours_Per_YearWeek/execute",
      "Configuration": "{\n \"margin\": {\n    \"top\": 0\n  },\n  \"size\": {\n    \"height\": 150\n  },\n  \"containerBackgroundColor\":\"#e0e0e0\",\n  \"selectedRangeColor\": \"#f5564a\",\n  \"chart\": {\n    \"commonSeriesSettings\": {\n      \"type\": \"line\",\n      \"argumentField\": \"WeekStart\"\n    },\n    \"series\": [\n      {\n        \"valueField\": \"Hours\"\n      }\n    ]\n  },\n  \"scale\": {\n    \"minorTickInterval\": \"month\",\n    \"tickInterval\": \"month\",\n    \"valueType\": \"datetime\"\n  },\n  \"sliderMarker\": {\n    \"format\": \"month\",\n    \"color\": \"#da5859\"\n  },\n  \"value\": [\n    \"2018/01/01\",\n    \"2018/02/01\"\n  ]\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "1d1d3940-c046-40be-aca9-ad79a50e7bda",
      "Name": "Top 10 Clientes",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Total\",\"metricFieldValue\":\"GlobalTotalHours\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\tv.ClientId,\\r\\n\\t\\tv.ClientName,\\r\\n\\t\\tv.DirectHours,\\r\\n\\t\\tv.NewBusinessHours,\\r\\n\\t\\tv.AdministrativeHours,\\r\\n\\t\\tv.TimeOffHours,\\r\\n\\t\\tv.TotalHours,\\r\\n\\t\\tsum(DirectHours) over (order by v.ClientId) as DirectHoursRunningTotal,\\r\\n\\t\\tsum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n\\t\\tsum(NewBusinessHours) over (order by v.ClientId) as NewBusinessHoursRunningTotal,\\r\\n\\t\\tsum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n\\t\\tsum(AdministrativeHours) over (order by v.ClientId) as AdministrativeHoursRunningTotal,\\r\\n\\t\\tsum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n\\t\\tsum(TimeOffHours) over (order by v.ClientId) as TimeOffHoursRunningTotal,\\r\\n\\t\\tsum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n\\t\\tsum(TotalHours) over () as GlobalTotalHours\\r\\nfrom\\r\\n(\\r\\n\\t\\tselect\\tt.[ClientId], \\r\\n\\t\\t\\t\\tt.[Client] as ClientName,\\r\\n\\t\\t\\t\\tisnull(t.DirectHours, 0.0) as DirectHours,\\r\\n\\t\\t\\t\\tisnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n\\t\\t\\t\\tisnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n\\t\\t\\t\\tisnull(null, 0.0) as TimeOffHours,\\r\\n\\t\\t\\t\\tisnull(t.[Hours], 0.0) + isnull(null, 0.0) as TotalHours\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tt.[ClientId],\\r\\n\\t\\t\\t\\t\\t\\tt.[Client],\\r\\n\\t\\t\\t\\t\\t\\tsum(t.[Hours]) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t(sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(t.NewBusinessHours) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(AdministrativeHours) as AdministrativeHours\\r\\n\\t\\t\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Department d on d.Oid = t.DepartmentId\\r\\n\\t\\t\\t\\twhere\\t1 = 1 \\r\\n\\t\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) between @FromDate and @ToDate /*[/DateFilter]*/ \\r\\n\\t\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (d.Division = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\t\\tand (t.DepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n\\t\\t\\t\\tgroup by t.[ClientId],\\r\\n\\t\\t\\t\\t\\t\\tt.[Client]\\r\\n\\t\\t) t\\r\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"],\"Sort\":{\"Type\":2,\"FieldName\":\"TotalHours\"},\"Top\":{\"Count\":10}}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_Client/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n\"palette\": \"Material\",\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"ClientName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"TotalHours\"\n  },\n  \"seriesTemplate\": {\n    \"nameField\": \"ClientName\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"overlappingBehavior\":\"stagger\",\n      \"customizeText\":\"function(t){return t.valueText.split(' - ')[0].substring(0,20)}\",\n      \"font\": {\n      \r\n  \"size\": 8\n      }\n    }\n  }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    },
    {
      "Id": "671cd298-0b19-4e66-b565-bf207b4a0344",
      "Name": "Faturáveis vs não-Faturáveis",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Reais\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":14,\"WidgetRows\":12,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"Total\",\"metricValue\":\"14,450\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With Vacations As (\\r\\n\\tselect\\tsum(uv.[Hours]) as [Hours]\\r\\n\\tfrom    SkillUserVacation uv\\r\\n\\twhere\\t1=1\\r\\n\\t\\t\\t/*[DateFilter]*/ and uv.[Date] >= @FromDate and uv.[Date] < @ToDate /*[/DateFilter]*/                                ),\\r\\nActualHours as (\\r\\n\\tselect\\t(t.AdministrativeHours + t.InternalWorkHours + t.NewBusinessHours + v.[Hours]) as NonBillable,\\r\\n\\t\\t\\tt.[BillableHours] as Billable\\r\\n\\t\\tfrom\\r\\n\\t\\t(\\r\\n\\t\\t\\tselect   sum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 1 then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as AdministrativeHours,\\r\\n\\t\\t\\t\\t\\tsum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n                                                (\\r\\n                                                   (t.JobBillable = 0 or t.JobBillable is null) and \\r\\n                                                   (t.ProjectBillable = 0 or t.ProjectBillable is null)\\r\\n                                                )\\r\\n                                                then (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\tsum( \\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(t.ProjectBillable = 1 and (t.JobBillable = 0 or t.JobBillable is null))\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as InternalWorkHours,\\r\\n\\t\\t\\t\\t\\tsum(\\r\\n\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(t.ProjectBillable = 1 or t.JobBillable = 1)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t) as BillableHours\\r\\n\\t\\t\\tfrom\\tSkillTimesheetReport t\\r\\n\\t\\t\\twhere\\t1=1\\r\\n\\t\\t\\t\\t\\t/*[DateFilter]*/ and DATEFROMPARTS(t.[Year], t.[Month], 1) >= @FromDate and DATEFROMPARTS(t.[Year], t.[Month], 1) < @ToDate /*[/DateFilter]*/\\r\\n\\t\\t\\t\\t\\tand (t.CompanyId = @Company or @Company = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\tand (t.UserDivisionId = @Division or @Division = '00000000-0000-0000-0000-000000000000')\\r\\n\\t\\t\\t\\t\\tand (t.UserDepartmentId = @Department or @Department = '00000000-0000-0000-0000-000000000000') \\r\\n\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ClientOid) or t.ClientId in (@ClientOid)) \\r\\n\\t\\t\\t\\t\\tand ('00000000-0000-0000-0000-000000000000' in (@ProjectOid) or t.ProjectId in (@ProjectOid))\\r\\n\\t\\t) t, Vacations v\\r\\n)\\r\\nselect\\t'Billable' as TimeType, \\r\\n\\t\\tah.Billable as [Time] \\r\\nfrom\\tActualHours ah\\r\\nunion all\\r\\nselect\\t'Non Billable' as TimeType, \\r\\n\\t\\tah.NonBillable as [Time] \\r\\nfrom\\tActualHours ah\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"startDate\",\"endDate\",\"Company\",\"Division\",\"Department\",\"ClientOid\",\"ProjectOid\"]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Hours_Billable_NonBillable/execute",
      "Configuration": "{\n\"size\":{\"height\":150},\n  \"palette\": \"Material\",\n  \"series\": [\n    {\n      \"argumentField\": \"TimeType\",\n      \"valueField\": \"Time\",\n      \"label\": {\n        \"position\":\"inside\",\n        \"visible\": true,\n        \"connector\": {\n          \"visible\": false,\n          \"width\": 1\n        },\n        \"format\": {\n          \"type\": \"fixedPoint\",\n          \"precision\": 1,\n          \"percentPrecision\": 1\n        },\n        \"customizeText\": \"function (point) {return point.percentText;}\"\n      }\n    }\n  ],\n  \"legend\": {\n    \"visible\": true\n  }\n}",
      "DashboardDefinitionId": "c2d6909c-2457-4a96-aad5-89ef403bd974"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 1,
  "Default": false
}
