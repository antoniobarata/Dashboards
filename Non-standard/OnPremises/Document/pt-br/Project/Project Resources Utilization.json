{
  "DashboardDefinitionRoles": [],
  "Id": "1d4dac88-49f2-4955-957c-a7d36c57a337",
  "Name": "Utiliza??o",
  "Active": true,
  "Location": 1,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "project",
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "8345efdf-e209-43dc-9fca-1029c682527b",
      "Name": "Distribui??o Mensal",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas Planejadas, Utiliza??o & Valor\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":23,\"WidgetRows\":13,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Consumido\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"Planejado\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"Contratado\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with met as\\r\\n(\\r\\n    select  est.Oid as EstimateOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by est.Oid) as Months\\r\\n    from    Contract cnt, Estimate est, YearDay yrd, Project prj\\r\\n    where   est.Contract = cnt.Oid and\\r\\n            yrd.Day between cast(est.Date as date) and cast(est.Expiration as date) and\\r\\n            Day(yrd.Day) = Day(est.Date) and\\r\\n\\t\\t\\tprj.Oid = @ProjectId and\\r\\n            cnt.Oid = prj.Contract \\r\\n),\\r\\nmpj as\\r\\n(\\r\\n    select  prj.Oid as ProjectOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by prj.Oid) as Months\\r\\n    from    Project prj, YearDay yrd\\r\\n    where   yrd.Day between cast(prj.BeginDate as date) and cast(prj.EndDate as date) and\\r\\n            Day(yrd.Day) = Day(prj.BeginDate) and\\r\\n            prj.Oid = @ProjectId\\r\\n)\\r\\nselect  [Date], \\r\\n        sum(ResourcesWithVatIncome) as ResourcesWithVatIncome,\\r\\n        sum(ResourcesWithVatCost) as ResourcesWithVatCost,\\r\\n        sum(ContractedTime) as ContractedTime,\\r\\n        sum(PlannedTime) as PlannedTime,\\r\\n        sum(ForecastTime) as ForecastTime,\\r\\n        sum(ActualTime) as ActualTime,\\r\\n        sum(sum(ContractedTime)) over() as ContractedTimeGrandTotal,\\r\\n        sum(sum(PlannedTime)) over() as PlannedTimeGrandTotal,\\r\\n        sum(sum(ForecastTime)) over() as ForecastTimeGrandTotal,\\r\\n        sum(sum(ActualTime)) over() as ActualTimeGrandTotal\\r\\nfrom    (\\r\\n            select  [Date],\\r\\n                    sum(ResourcesWithVatIncome) / max(Months) as ResourcesWithVatIncome,\\r\\n                    sum(ResourcesWithVatCost) / max(Months) as ResourcesWithVatCost,\\r\\n                    sum(ContractedTime) / max(Months) as ContractedTime,\\r\\n                    0 as PlannedTime,\\r\\n                    0 as ForecastTime,\\r\\n                    0 as ActualTime\\r\\n            from    (\\r\\n                    select  est.Oid as EstimateOid,\\r\\n                            sum(edt.ValueWithVatIncome * eit.Retainer) as ResourcesWithVatIncome,\\r\\n                            sum(edt.ValueWithVatCost * eit.Retainer) as ResourcesWithVatCost,\\r\\n                            sum(edt.Hours * eit.Retainer) as ContractedTime\\r\\n                    from    Estimate est, EstimateItem eit, EstimateItemDetail edt, Contract cnt, Project prj\\r\\n                    where   est.Contract = cnt.Oid and\\r\\n                            eit.Estimate = est.Oid and\\r\\n                            edt.EstimateItem = eit.Oid and\\r\\n                            edt.Type = 2 and\\r\\n\\t\\t\\t\\t\\t\\t\\tprj.Oid = @ProjectId and\\r\\n\\t\\t\\t\\t\\t\\t\\tcnt.Oid = prj.Contract\\r\\n                    group by est.Oid\\r\\n                    ) t, met\\r\\n            where   met.EstimateOid = t.EstimateOid\\r\\n            group by t.EstimateOid, [Date]  \\r\\n            union all\\r\\n            select  [Date],\\r\\n                    0 as ResourcesWithVatIncome,\\r\\n                    0 as ResourcesWithVatCost,\\r\\n                    0 as ContractedTime,\\r\\n                    sum(PlannedTime) / max(Months) as PlannedTime,\\r\\n                    0 as ForecastTime,\\r\\n                    0 as ActualTime\\r\\n            from    (\\r\\n                    select  prj.Oid as ProjectOid,\\r\\n                            sum(pht.PlannedMinutes / 60.0) as PlannedTime\\r\\n                    from    PlannedHoursTotal pht, Project prj\\r\\n                    where   prj.Oid = pht.Project and\\r\\n                            prj.Oid = @ProjectId and\\r\\n                            pht.GCRecord is null\\r\\n                    group by prj.Oid\\r\\n                    ) t, mpj\\r\\n            where   mpj.ProjectOid = t.ProjectOid\\r\\n            group by t.ProjectOid, [Date]  \\r\\n            union all\\r\\n            select  datefromparts(Year(pha.Date), Month(pha.Date), 1) as [Date],\\r\\n                    0 as ResourcesWithVatIncome,\\r\\n                    0 as ResourcesWithVatCost,\\r\\n                    0 as ContractedTime,\\r\\n                    0 as PlannedTime,\\r\\n                    sum(pha.AdjustmentMinutes / 60.0) as ForecastTime,\\r\\n                    0 as ActualTime\\r\\n            from    PlannedHoursAdjustment pha, Project prj, Contract cnt\\r\\n            where   prj.Oid = pha.Project and\\r\\n\\t\\t\\t\\t\\tprj.Oid = @ProjectId and\\r\\n                    pha.GCRecord is null \\r\\n            group by Year(pha.Date), Month(pha.Date)\\r\\n            union all\\r\\n            select  datefromparts(Year(tim.[Date]), Month(tim.[Date]), 1) as [Date],\\r\\n                    0 as ResourcesWithVatIncome,\\r\\n                    0 as ResourcesWithVatCost,\\r\\n                    0 as ContractedTime,\\r\\n                    0 as PlannedTime,\\r\\n                    0 as ForecastTime,\\r\\n                    sum(DurationHours + DurationMinutes / 60.0) as ActualTime\\r\\n            from    Timesheet tim, Project prj\\r\\n            where   prj.Oid = tim.Project and\\r\\n                    prj.Oid = @ProjectId\\r\\n            group by Year(tim.[Date]), Month(tim.[Date])\\r\\n        ) t\\r\\ngroup by [Date]\\r\\n\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 270\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"Date\"\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"argumentAxis\": {\n        \"argumentType\": \"datetime\",\n        \"type\": \"discrete\",\n        \"label\": {\n            \"format\": \"month\",\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    },\n    \"panes\": [\n        {\n            \"name\": \"Value\"\n        },\n        {\n            \"name\": \"Time\"\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"Value\",\n            \"pane\": \"Value\",\n            \"title\": \"Valor\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        },\n        {\n            \"name\": \"Time\",\n            \"pane\": \"Time\",\n            \"title\": \"Horas\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        }\n    ],\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatIncome\",\n            \"name\": \"Income\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatCost\",\n            \"name\": \"Cost\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ForecastTime\",\n            \"name\": \"Forecast\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"pane\": \"Time\"\n        }\n    ]\n}",
      "DashboardDefinitionId": "1d4dac88-49f2-4955-957c-a7d36c57a337"
    },
    {
      "Id": "8bf78798-6b16-484b-8885-5184b4213937",
      "Name": "Utiliza??o por Usu?rio",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas consumidas\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":36,\"WidgetRows\":13,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Horas Fatur?veis\",\"metricFieldValue\":\"TotalBillableTime\"},{\"visible\":true,\"metricName\":\"Horas n?o Fatur?veis\",\"metricFieldValue\":\"TotalNonBillableTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  [User],\\r\\n        ContractedTime,\\r\\n        BillableTime,\\r\\n        NonBillableTime,\\r\\n        sum(BillableTime) over() as TotalBillableTime,\\r\\n        sum(NonBillableTime) over() as TotalNonBillableTime\\r\\nfrom    (\\r\\n        select  [User],\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(BillableTime) as BillableTime,\\r\\n                sum(NonBillableTime) as NonBillableTime\\r\\n        from    (\\r\\n                select  usr.Name as [User],\\r\\n                        edt.Hours as ContractedTime,\\r\\n                        0 as BillableTime,\\r\\n                        0 as NonBillableTime\\r\\n                from    Project prj, Estimate est, EstimateItem eit, \\r\\n                        EstimateItemDetail edt left join [User] usr on usr.Oid = edt.[User]\\r\\n                where   est.Contract = prj.Contract and\\r\\n                        eit.Estimate = est.Oid and\\r\\n                        edt.EstimateItem = eit.Oid and\\r\\n                        edt.Type = 2 and\\r\\n\\t\\t\\t\\t\\t\\tprj.Oid = @ProjectId\\r\\n                union all\\r\\n                select  usr.Name as [User],\\r\\n                        0 as ContractedTime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, DurationHours + DurationMinutes / 60.0, 0) as Billabletime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, 0, DurationHours + DurationMinutes / 60.0) as NonBillabletime\\r\\n                from    Timesheet tim, [User] usr\\r\\n                where   tim.Project = @ProjectId and \\r\\n                        usr.Oid = tim.CreatedBy\\r\\n                ) t\\r\\n        group by [User]\\r\\n        ) t\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Users/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"User\",\n        \"type\": \"stackedbar\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable Time\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non-billable Time\"\n        }\n    ],\n    \"size\": {\n        \"height\": 250\n    },\n    \"rotated\": true\n}",
      "DashboardDefinitionId": "1d4dac88-49f2-4955-957c-a7d36c57a337"
    },
    {
      "Id": "46ed9533-8510-47e0-ad05-6275c8c1bd4b",
      "Name": "Utiliza??o por Cargo(s)",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 4,
      "Parameters": "[\n    {\n        \"WidgetSubTitle\": \"Horas consumidas\",\n        \"WidgetType\": \"chart\",\n        \"WidgetFilterField\": \"\",\n        \"WidgetColor\": \"#efefef\",\n        \"WidgetFrameStyle\": {},\n        \"WidgetXPosition\": 0,\n        \"WidgetYPosition\": 36,\n        \"WidgetRows\": 13,\n        \"WidgetColumns\": 32,\n        \"WidgetHeader\": {\n            \"showContextInfo\": false,\n            \"WidgetPeriodChooser\": {\n                \"type\": \"year\",\n                \"visible\": false\n            },\n            \"WidgetMetrics\": {\n                \"visible\": true,\n                \"Metrics\": [\n                    {\n                        \"visible\": true,\n                        \"metricName\": \"Consumido\",\n                        \"metricFieldValue\": \"TotalActualTime\"\n                    },\n                    {\n                        \"visible\": true,\n                        \"metricName\": \"Planejado\",\n                        \"metricFieldValue\": \"TotalPlannedTime\"\n                    },\n                    {\n                        \"visible\": true,\n                        \"metricName\": \"Contratado\",\n                        \"metricFieldValue\": \"TotalContractedTime\"\n                    }\n                ]\n            },\n            \"showSubTitle\": true,\n            \"showTitle\": true\n        },\n        \"WidgetDataSources\": {\n            \"main\": {\n                \"type\": \"querytext\",\n                \"value\": \"select  TypologyGroup,\\r\\n        ContractedTime,\\r\\n        PlannedTime,\\r\\n        ActualTime,\\r\\n        sum(ContractedTime) over() as TotalContractedTime,\\r\\n        sum(PlannedTime) over() as TotalPlannedTime,\\r\\n        sum(ActualTime) over() as TotalActualTime\\r\\nfrom    (\\r\\n        select  TypologyGroup,\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(PlannedTime) as PlannedTime,\\r\\n                sum(ActualTime) as ActualTime\\r\\n        from    (\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                edt.Hours * eit.Retainer as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                0 as ActualTime\\r\\n                        from    Estimate est, EstimateItem eit, Project prj, EstimateItemDetail edt, UserTypologyGroup utg\\r\\n                        where   est.Contract = prj.Contract and\\r\\n                                eit.Estimate = est.Oid and\\r\\n                                edt.EstimateItem = eit.Oid and\\r\\n                                utg.Oid = edt.UserTypologyGroup and\\r\\n                                edt.Type = 2 and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tprj.Oid = @ProjectId\\r\\n                        union all\\r\\n\\t\\t\\t\\t\\t\\tselect\\tisnull(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0 as ContractedTime,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(isnull(pht.PlannedMinutes, 0) / 60.0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0 as ActualTime\\r\\n\\t\\t\\t\\t\\t\\tfrom\\tPlannedHoursTotal pht\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tleft join [User] u ON (u.Oid = pht.[User])\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tleft join [UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tleft join [UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tleft join [UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\t\\twhere\\tpht.Project = @ProjectId and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tpht.GCRecord is null\\r\\n\\t\\t\\t\\t\\t\\tgroup by isnull(utgp.[Name], utg.[Name])\\r\\n                        union all\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                0 as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                DurationHours + DurationMinutes / 60.0 as ActualTime\\r\\n                        from    Timesheet tim, Project prj, [User] usr, UserTypology ust, UserTypologyGroup utg\\r\\n                        where   tim.Project = prj.Oid and \\r\\n                                usr.Oid = tim.CreatedBy and\\r\\n                                ust.Oid = usr.Typology and\\r\\n                                utg.Oid = ust.UserTypologyGroup and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tprj.Oid = @ProjectId\\r\\n                ) t\\r\\n        group by TypologyGroup\\r\\n        ) t\\r\\n\"\n            }\n        },\n        \"Filters\": {},\n        \"QueryConfiguration\": {\n            \"PreviousPeriod\": {\n                \"Show\": false,\n                \"KeyFieldName\": \"\",\n                \"Type\": 0\n            },\n            \"RequiredFilters\": []\n        }\n    }\n]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Typology Group/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"TypologyGroup\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"type\": \"area\",\n            \"valueField\": \"PlannedTime\",\n            \"name\": \"Planejado\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Consumido\"\n        },\n        {\n            \"type\": \"line\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contratado\",\n            \"point\": {\n                \"symbol\": \"triangleDown\",\n                \"color\": \"#a5bdd7\"\n            }\n        }\n    ],\n    \"size\": {\n        \"height\": 250\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"orientation\": \"horizontal\",\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\",\n        \"font\": {\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "1d4dac88-49f2-4955-957c-a7d36c57a337"
    },
    {
      "Id": "eb75e958-f023-4fb3-9bc9-ab4bd0f16859",
      "Name": "Resumo",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Horas por Departamento e por Cargo\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":23,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Horas Consumidas\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"Horas Planejadas\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"Horas Contratadas\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"R$ Consumidos\",\"metricFieldValue\":\"BillableHoursIncomeGrandTotal\"},{\"visible\":true,\"metricName\":\"R$ Planejados\",\"metricFieldValue\":\"PlannedHoursIncomeGrandTotal\"},{\"visible\":true,\"metricName\":\"R$ Contratados\",\"metricFieldValue\":\"ContractedHoursIncomeGrandTotal\"},{\"visible\":true,\"metricName\":\"% Consumido / Contratado\",\"metricFieldValue\":\"ActualContractedPercentageGrandTotal\"},{\"visible\":true,\"metricName\":\"Contrato\",\"metricFieldValue\":\"ContractName\"},{\"visible\":true,\"metricName\":\"Tipo\",\"metricFieldValue\":\"ContractType\"},{\"visible\":true,\"metricName\":\"Respons?vel\",\"metricFieldValue\":\"UserName\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with ContractEstimateRates as\\r\\n(\\r\\n\\tselect\\teid.Department, eid.UserTypologyGroup, eid.[User], Max(eid.UnitPriceIncome) as UnitPriceIncome\\r\\n\\tfrom\\tEstimate e,\\r\\n\\t\\t\\tEstimateItem ei,\\r\\n\\t\\t\\tEstimateItemDetail eid,\\r\\n\\t\\t\\tProject p\\r\\n\\twhere\\te.GCRecord is null and\\r\\n\\t\\t\\tei.Estimate = e.Oid and\\r\\n\\t\\t\\teid.EstimateItem = ei.Oid and \\r\\n\\t\\t\\teid.[Type] = 2 and\\r\\n\\t\\t\\te.[Contract] = p.Contract and\\r\\n\\t\\t\\tp.Oid = @ProjectId and\\r\\n\\t\\t\\tcast(getdate() as Date) between e.[Date] and e.Expiration\\r\\n\\tgroup by eid.Department, eid.UserTypologyGroup, eid.[User]\\r\\n)\\r\\nselect\\tv.[Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\tv.[TypologyGroup],\\r\\n\\t\\tc.[Name] as ContractName, \\r\\n\\t\\tssu.[UserName] as UserName,\\r\\n\\t\\tjt.[Name] as ContractType,\\r\\n\\t\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n\\t\\tsum(v.ActualHoursCost) as ActualHoursCost,\\r\\n\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\tsum(v.[BillableHours]) as BillableHours,\\r\\n\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t(sum(v.ContractedHoursIncome) - sum(v.ActualHoursCost)) as ContractedActualIncomeVariation,\\r\\n\\t\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\t\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\t\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n\\t\\tsum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n\\t\\tsum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal,\\r\\n\\t\\tsum(sum(v.ContractedHoursIncome)) OVER () as ContractedHoursIncomeGrandTotal,\\r\\n\\t\\tsum(sum(v.PlannedHoursIncome)) OVER () as PlannedHoursIncomeGrandTotal,\\r\\n\\t\\tsum(sum(v.BillableHoursIncome)) OVER () as BillableHoursIncomeGrandTotal,\\r\\n\\t\\tIIF(sum(sum(v.[ContractedHours])) OVER () > 0, sum(sum(v.[BillableHours])) OVER () / sum(sum(v.[ContractedHours])) OVER (), 0.0) * 100 as ActualContractedPercentageGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tselect\\tdp.[Name] as [Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\tutg.[Name] as [TypologyGroup],\\r\\n\\t\\t\\t0 as [ActualHours],\\r\\n\\t\\t\\t0 as ActualHoursCost,\\r\\n\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\tsum(eid.[Hours] * ei.Retainer) as ContractedHours,\\r\\n\\t\\t\\tsum(eid.[Hours] * ei.Retainer * ISNULL(eid.UnitPriceIncome, 0)) as ContractedHoursIncome,\\r\\n\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t0 as PlannedHoursIncome\\r\\n\\tfrom\\tProject p,\\r\\n\\t\\t\\tEstimate e,\\r\\n\\t\\t\\tEstimateItem ei,\\r\\n\\t\\t\\tEstimateItemDetail eid,\\r\\n\\t\\t\\tDepartment dp,\\r\\n\\t\\t\\tUserTypologyGroup utg,\\r\\n\\t\\t\\tWorkflowState ws,\\r\\n\\t\\t\\tWorkflowStateType wst\\r\\n\\twhere\\tp.Oid = @ProjectId and\\r\\n\\t\\t\\te.GCRecord is null and\\r\\n\\t\\t\\te.[Contract] = p.Contract and\\r\\n\\t\\t\\tws.Oid = e.WorkflowState and\\r\\n\\t\\t\\twst.Oid = ws.WorkflowStateType and\\r\\n\\t\\t\\twst.Status = 10 and\\r\\n\\t\\t\\tei.Estimate = e.Oid and\\r\\n\\t\\t\\teid.EstimateItem = ei.Oid and\\r\\n\\t\\t\\teid.[Type] = 2 and\\r\\n\\t\\t\\tdp.Oid = eid.Department and\\r\\n\\t\\t\\tutg.Oid = eid.UserTypologyGroup\\r\\n\\tgroup by dp.[Name], utg.[Name]\\r\\n\\tunion all\\r\\n\\tselect\\tt.[Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\tt.[TypologyGroup],\\r\\n\\t\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\t\\tsum(ISNULL(t.TotalUserCost, 0)) as ActualHoursCost,\\r\\n\\t\\t\\tsum(t.[Hours] * ISNULL(t.UnitPriceIncome, 0)) as ActualHoursIncome,\\r\\n\\t\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(t.UnitPriceIncome, 0)) as BillableHoursIncome,\\r\\n\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t0 as PlannedHoursIncome\\r\\n\\t\\t\\tfrom (\\r\\n\\t\\t\\t\\t\\tselect\\tt.UserDepartmentId as DepartmentId,\\r\\n\\t\\t\\t\\t\\t\\t\\tt.Department,\\r\\n\\t\\t\\t\\t\\t\\t\\tutg.Oid as TypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\t\\tp.Oid as ProjectId,\\r\\n\\t\\t\\t\\t\\t\\t\\tutg.[Name] as TypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\t\\tisnull(eidu.UnitPriceIncome, isnull(eidt.UnitPriceIncome, 0)) as UnitPriceIncome,\\r\\n\\t\\t\\t\\t\\t\\t\\tiif(t.IsAdministrative = 1, (t.[Hours] / 60.0), 0) as AdministrativeHours,\\r\\n\\t\\t\\t\\t\\t\\t\\tiif(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(jc.Billable, 0) = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(pc.Billable, 0) = 0\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 1 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t\\t) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\t\\tiif(\\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(pc.Billable = 1 and isnull(jc.Billable, 0) = 0)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t\\t) as InternalWorkHours,\\r\\n\\t\\t\\t\\t\\t\\t\\tiif(\\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcase\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(pc.Billable = 1 or jc.Billable = 1)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t\\t) as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t\\t(t.[Hours] / 60.0) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\t\\tt.TotalUserCost\\r\\n\\t\\t\\t\\t\\tfrom\\tdbo.SkillTimesheetExpanded t\\r\\n\\t\\t\\t\\t\\t\\t\\tinner join Project p ON (p.Oid = t.ProjectId and p.Oid = @ProjectId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join ProjectClassification pc on (pc.Oid = p.Classification)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Deliverable d on (d.Oid = t.DeliverableId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join JobClassification jc on (jc.Oid = d.Classification)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join UserTypology tp on (tp.Oid = t.UserTypologyId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join UserTypologyGroup utg on (utg.Oid = tp.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join ContractEstimateRates eidu on (eidu.Department = t.UserDepartmentId AND eidu.UserTypologyGroup = utg.Oid AND eidu.[User] = t.CreatedBy)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join ContractEstimateRates eidt on (eidt.Department = t.UserDepartmentId AND eidt.UserTypologyGroup = utg.Oid AND eidt.[User] is null)\\r\\n\\t) t\\r\\n\\tgroup by\\r\\n\\t\\t\\tt.[Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\tt.[TypologyGroup]\\r\\n\\tunion all\\r\\n\\tselect\\tdep.Name as [Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\tutg.[Name] as [TypologyGroup],\\r\\n\\t\\t\\t0 as [ActualHours],\\r\\n\\t\\t\\t0 as ActualHoursCost,\\r\\n\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\tsum((isnull(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours,\\r\\n\\t\\t\\tsum((isnull(pht.PlannedMinutes, 0) / 60.0) * pht.SellRate) as PlannedHoursIncome\\r\\n\\tfrom\\tPlannedHoursTotal pht,\\r\\n\\t\\t\\tUserTypologyGroup utg,\\r\\n\\t\\t\\tDepartment dep,\\r\\n\\t\\t\\t(\\r\\n\\t\\t\\t\\tselect\\tutgdp.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tmax(utgdp.Department) as Department \\r\\n\\t\\t\\t\\tfrom\\t[UserTypologyGroupDepartment] utgdp \\r\\n\\t\\t\\t\\tgroup by utgdp.UserTypologyGroup\\r\\n\\t\\t\\t) utgpdp,\\r\\n\\t\\t\\tProject p\\r\\n\\twhere\\tpht.GCRecord is null and\\r\\n\\t\\t\\tutg.Oid = pht.UserTypologyGroup and\\r\\n\\t\\t\\tutgpdp.UserTypologyGroup = utg.Oid and\\r\\n\\t\\t\\tdep.Oid = utgpdp.Department and\\r\\n\\t\\t\\tp.Oid = pht.Project and\\r\\n\\t\\t\\tp.Oid = @ProjectId \\r\\n\\tgroup by dep.Name, utg.Name\\r\\n) v, Project p, [Contract] c\\r\\n\\t\\tleft outer join SecuritySystemUser ssu on ssu.Oid = c.[Owner]\\r\\n\\t\\tleft outer join JobType jt on jt.Oid = c.JobType\\r\\nwhere\\tc.Oid = p.Contract and\\r\\n\\t\\tp.Oid = @ProjectId\\r\\ngroup by v.Department, v.TypologyGroup, c.[Name], ssu.[UserName], jt.[Name]\\r\\n\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Estimate_Service_Deliverable_TypologyGroup/execute",
      "Configuration": "{\n    \"stateStoring\": {\n        \"enabled\": false\n    },\n    \"selection\": {\n        \"mode\": \"none\"\n    },\n    \"columnsAutoWidth\": true,\n    \"allowColumnResizing\": \"true\",\n    \"columnResizingMode\": \"nextColumn\",\n    \"columnMinWidth\": \"50\",\n    \"scrolling\": {\n        \"mode\": \"virtual\"\n    },\n    \"columns\": [\n        {\n            \"dataField\": \"Department\",\n            \"caption\": \"Departmento\",\n            \"groupIndex\": 1,\n            \"autoExpandGroup\": true\n        },\n        {\n            \"dataField\": \"TypologyGroup\",\n            \"caption\": \"Grupo de Cargos\"\n        },\n        {\n            \"dataField\": \"ActualContractedPercentage\",\n            \"caption\": \"% Consumido / Contratado\",\n            \"dataType\": \"number\",\n            \"format\": \"percent\",\n            \"alignment\": \"center\",\n            \"allowGrouping\": false,\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + ' %', i.value >= 1.0, (i.value >= 0.5 && i.value < 1.0), i.value < 0.5, true); }\"\n        },\n        {\n            \"dataField\": \"PlannedHours\",\n            \"caption\": \"Planejado\",\n            \"dataType\": \"number\",\n            \"format\": \"#,##0.00\",\n            \"allowGrouping\": false\n        },\n        {\n            \"dataField\": \"PlannedHoursIncome\",\n            \"caption\": \"R$ Planejados\",\n            \"dataType\": \"number\",\n            \"format\": {\n                \"type\": \"currency\",\n                \"precision\": 2\n            },\n            \"displayFormat\": \"{0}\",\n            \"allowGrouping\": false\n        },\n        {\n            \"dataField\": \"ActualPlannedPercentage\",\n            \"caption\": \"% Consumido / Planejado\",\n            \"dataType\": \"number\",\n            \"format\": \"percent\",\n            \"allowGrouping\": false,\n            \"alignment\": \"center\",\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + ' %', i.value >= 1.0, (i.value >= 0.5 && i.value < 1.0), i.value < 0.5, true); }\"\n        },\n        {\n            \"dataField\": \"ActualHours\",\n            \"caption\": \"Consumido\",\n            \"dataType\": \"number\",\n            \"format\": \"#,##0.00\",\n            \"allowGrouping\": false\n        },\n        {\n            \"dataField\": \"ActualHoursCost\",\n            \"caption\": \"R$ Usu?rios\",\n            \"dataType\": \"number\",\n            \"format\": {\n                \"type\": \"currency\",\n                \"precision\": 2\n            },\n            \"displayFormat\": \"{0}\",\n            \"allowGrouping\": false\n        },\n        {\n            \"dataField\": \"ActualHoursIncome\",\n            \"caption\": \"R$ Consumidos\",\n            \"dataType\": \"number\",\n            \"format\": {\n                \"type\": \"currency\",\n                \"precision\": 2\n            },\n            \"displayFormat\": \"{0}\",\n            \"allowGrouping\": false\n        }\n    ],\n    \"summary\": {\n        \"calculateCustomSummary\": \"function(options) {        if(options.name == 'ActualPlannedPercentageSummary') {            switch(options.summaryProcess) {                case 'start':                  options.totalValue = [          0,          0        ];                  break;                case 'calculate':                  options.totalValue[          0        ] = options.totalValue[          0        ] + options.value.ActualHours;                  options.totalValue[          1        ] = options.totalValue[          1        ] + options.value.PlannedHours;                  break;                case 'finalize':                  if(Number(options.totalValue[          1        ]) > 0)                    options.totalValue = options.totalValue[          0        ] / options.totalValue[          1        ];                  else                    options.totalValue = 0;                  break;      }    }        if(options.name == 'ActualContractedPercentageSummary') {            switch(options.summaryProcess) {                case 'start':                  options.totalValue = [          0,          0        ];                  break;                case 'calculate':                  options.totalValue[          0        ] = options.totalValue[          0        ] + options.value.ActualHours;                  options.totalValue[          1        ] = options.totalValue[          1        ] + options.value.ContractedHours;                  break;                case 'finalize':                  if(Number(options.totalValue[          1        ]) > 0)                    options.totalValue = options.totalValue[          0        ] / options.totalValue[          1        ];                  else                    options.totalValue = 0;                  break;      }    }  }\",\n        \"totalItems\": [\n            {\n                \"name\": \"ActualPlannedPercentageSummary\",\n                \"showInColumn\": \"ActualPlannedPercentage\",\n                \"displayFormat\": \"{0}\",\n                \"valueFormat\": {\n                    \"type\": \"percent\",\n                    \"precision\": 1\n                },\n                \"summaryType\": \"custom\"\n            },\n            {\n                \"name\": \"ActualContractedPercentageSummary\",\n                \"showInColumn\": \"ActualContractedPercentage\",\n                \"displayFormat\": \"{0}\",\n                \"valueFormat\": {\n                    \"type\": \"percent\",\n                    \"precision\": 1\n                },\n                \"summaryType\": \"custom\"\n            },\n            {\n                \"column\": \"Department\",\n                \"summaryType\": \"count\"\n            },\n            {\n                \"column\": \"TypologyGroup\",\n                \"summaryType\": \"count\"\n            },\n            {\n                \"column\": \"ActualHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"ActualHoursCost\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"ActualHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"PlannedHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"PlannedHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"ContractedHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"ContractedHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\"\n            },\n            {\n                \"column\": \"ContractedActualIncomeVariation\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\"\n            }\n        ],\n        \"groupItems\": [\n            {\n                \"name\": \"ActualPlannedPercentageSummary\",\n                \"showInColumn\": \"ActualPlannedPercentage\",\n                \"displayFormat\": \"{0}\",\n                \"valueFormat\": {\n                    \"type\": \"percent\",\n                    \"precision\": 1\n                },\n                \"summaryType\": \"custom\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"name\": \"ActualContractedPercentageSummary\",\n                \"showInColumn\": \"ActualContractedPercentage\",\n                \"displayFormat\": \"{0}\",\n                \"valueFormat\": {\n                    \"type\": \"percent\",\n                    \"precision\": 1\n                },\n                \"summaryType\": \"custom\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"Department\",\n                \"summaryType\": \"count\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"TypologyGroup\",\n                \"summaryType\": \"count\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ActualHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ActualHoursCost\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ActualHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"PlannedHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"PlannedHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ContractedHours\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": \"#,##0.00\",\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ContractedHoursIncome\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            },\n            {\n                \"column\": \"ContractedActualIncomeVariation\",\n                \"summaryType\": \"sum\",\n                \"valueFormat\": {\n                    \"type\": \"currency\",\n                    \"precision\": 2\n                },\n                \"displayFormat\": \"{0}\",\n                \"showInGroupFooter\": true\n            }\n        ]\n    },\n    \"height\": \"620\"\n}",
      "DashboardDefinitionId": "1d4dac88-49f2-4955-957c-a7d36c57a337"
    },
    {
      "Id": "15b91fc5-425c-46db-ae0e-cd398dd334b0",
      "Name": "Contribui??o por Cargo(s)",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Utiliza??o\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":23,\"WidgetRows\":13,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Consumido\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"Planejado\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"Contratado\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with ContractEstimateRates As\\r\\n(\\r\\n\\tselect\\teid.Department, eid.UserTypologyGroup, eid.[User], Max(eid.UnitPriceIncome) as UnitPriceIncome\\r\\n\\tfrom\\tEstimate e,\\r\\n\\t\\t\\tEstimateItem ei,\\r\\n\\t\\t\\tEstimateItemDetail eid,\\r\\n\\t\\t\\tProject p\\r\\n\\twhere\\tp.Oid = @ProjectId and\\r\\n\\t\\t\\te.GCRecord is null and\\r\\n\\t\\t\\tei.Estimate = e.Oid and\\r\\n\\t\\t\\teid.EstimateItem = ei.Oid and \\r\\n\\t\\t\\teid.[Type] = 2 and \\r\\n\\t\\t\\te.[Contract] = p.Contract and \\r\\n\\t\\t\\tcast(getdate() as Date) between e.[Date] and e.Expiration\\r\\n\\tgroup by eid.Department, eid.UserTypologyGroup, eid.[User]\\r\\n)\\r\\nselect\\tv.[TypologyGroup],\\r\\n\\t\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n\\t\\tsum(v.[BillableHours]) as BillableHours,\\r\\n\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\tiif(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\t\\tiif(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\t\\tsum(sum(v.[BillableHours])) over () as BillableHoursGrandTotal,\\r\\n\\t\\tsum(sum(v.[PlannedHours])) over () as PlannedHoursGrandTotal,\\r\\n\\t\\tsum(sum(v.[ContractedHours])) over () as ContractedHoursGrandTotal\\r\\nfrom\\t(\\r\\n\\t\\tselect\\tutg.[Name] as [TypologyGroup],\\r\\n\\t\\t\\t\\t0 as [ActualHours],\\r\\n\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\tsum(eid.[Hours] * ei.retainer) as ContractedHours,\\r\\n\\t\\t\\t\\t0 as PlannedHours\\r\\n\\t\\tfrom\\tProject p,\\r\\n\\t\\t\\t\\tEstimate e,\\r\\n\\t\\t\\t\\tEstimateItem ei,\\r\\n\\t\\t\\t\\tEstimateItemDetail eid,\\r\\n\\t\\t\\t\\tUserTypologyGroup utg\\r\\n\\t\\twhere\\tp.Oid = @ProjectId and\\r\\n\\t\\t\\t\\te.[Contract] = p.Contract and\\r\\n\\t\\t\\t\\tei.Estimate = e.Oid and\\r\\n\\t\\t\\t\\teid.EstimateItem = ei.Oid and\\r\\n\\t\\t\\t\\teid.[Type] = 2 and\\r\\n\\t\\t\\t\\tutg.Oid = eid.UserTypologyGroup\\r\\n\\t\\tgroup by utg.[Name]\\r\\n\\t\\tunion all\\r\\n\\t\\tselect\\tt.[TypologyGroup],\\r\\n\\t\\t\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\t\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\t\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * isnull(eidu.UnitPriceIncome, isnull(eidt.UnitPriceIncome, 0))) as BillableHoursIncome,\\r\\n\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t0 as PlannedHours\\r\\n\\t\\tfrom\\tSkillAnalyticsTimeUtilization t\\r\\n\\t\\t\\t\\tleft join ContractEstimateRates eidu on (eidu.Department = t.DepartmentId and eidu.UserTypologyGroup = t.TypologyGroupId and eidu.[User] = t.UserId)\\r\\n\\t\\t\\t\\tleft join ContractEstimateRates eidt on (eidt.Department = t.DepartmentId and eidt.UserTypologyGroup = t.TypologyGroupId and eidt.[User] is null)\\r\\n\\t\\twhere\\tt.[TypologyGroup] is not null and\\r\\n\\t\\t\\t\\tt.ProjectId = @ProjectId\\r\\n\\t\\tgroup by t.[TypologyGroup]\\r\\n\\t\\tunion all\\r\\n\\t\\tselect\\tisnull(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n\\t\\t\\t\\t0 as [ActualHours],\\r\\n\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\tsum(isnull(pht.PlannedMinutes, 0) / 60.0) as PlannedHours\\r\\n\\t\\tfrom\\tPlannedHoursTotal pht\\r\\n\\t\\t\\t\\tleft join [User] u ON (u.Oid = pht.[User])\\r\\n\\t\\t\\t\\tleft join [UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n\\t\\t\\t\\tleft join [UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n\\t\\t\\t\\tleft join [UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup)\\r\\n\\t\\twhere\\tpht.GCRecord is null and\\r\\n\\t\\t\\t\\tpht.Project = @ProjectId\\r\\n\\t\\tgroup by isnull(utgp.[Name], utg.[Name])\\r\\n) v\\r\\ngroup by v.TypologyGroup\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n  \"type\": \"doughnut\",\n  \"series\": {\n    \"argumentField\": \"TypologyGroup\",\n    \"valueField\": \"BillableHours\",\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n                \"mode\": \"topN\",\n                \"topCount\": 10\n            }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\": {\n      \"size\": 8,\n      \"family\": \"Varela Round\"\n    }\n  }\n}",
      "DashboardDefinitionId": "1d4dac88-49f2-4955-957c-a7d36c57a337"
    }
  ],
  "QueryText": "",
  "UseStore": false,
  "StoreEntity": null,
  "Version": 1,
  "Default": false
}
