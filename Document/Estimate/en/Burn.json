{
    "DashboardDefinitionRoles": [],
    "Id": "d86c3b19-e871-495d-8cfb-23c2c179f018",
    "Name": "Burn Dashboard",
    "Active": true,
    "Location": 1,
    "DocumentId": "64ed3a9c-74c3-447c-8fdf-0c6395873309",
    "DocumentName": "Estimate",
    "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"} ,\"update\":{\"endpoint\":\"\",\"model\":{} } ,\"create\":{\"endpoint\":\"\",\"model\":{} } ,\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"} ]} ,\"remove\":{\"endpoint\":\"\"} ,\"lookup\":{\"endpoint\":\"\"} ,\"lookupById\":{\"endpoint\":\"\"} } ,\"layout\":{\"create\":{} ,\"read\":{} ,\"patch\":{} } ,\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"} ,\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false} } ",
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "a2d8ebb1-9e71-41a3-b3a3-0cb9ae0b657d",
            "Name": "Revenue Burn",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Planned Revenue vs Actual Cost\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"300\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Revenue\",\"metricFieldValue\":\"ForecastSellGrandTotal\"} ,{\"visible\":true,\"metricName\":\"# Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.[Year],\\r\\n\\t\\t\\t                                v.[Month],\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\tv.[Year] is null and v.[Month] is null \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.[Year],\\r\\n\\t\\t\\t                                v.[Month]\\r\\n                                )\\r\\n                                select\\tv.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n                                            select\\tconcat(FORMAT(pym.[Month], \u00270#\u0027), \u0027/\u0027, pym.[Year]) as MonthYear,\\r\\n\\t\\t                                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t                                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillable), 0) as ActualBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (), 0) AS ActualBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableCost), 0) as ActualBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (), 0) AS ActualBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableSell), 0) as ActualBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (), 0) AS ActualBillableSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillable), 0) as ActualNonBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (), 0) AS ActualNonBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableCost), 0) as ActualNonBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (), 0) AS ActualNonBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableSell), 0) as ActualNonBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (), 0) AS ActualNonBillableSellGrandTotal,\\r\\n                                                        isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n                                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                cast(concat(v.[Year], FORMAT(v.[Month], \u00270#\u0027)) as int) = pym.YearMonth),\\r\\n\\t\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n                                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t                                                p.Client = cc.Oid\\r\\n\\t\\t                                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                                                group by pym.[Year],\\r\\n\\t\\t                                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t                                ) v,\\r\\n\\t                                PlannedAndContracted pc\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 300\n  } ,\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"MonthYear\",\n    \"ignoreEmptyPoints\": false\n  } ,\n  \"panes\": [\n    {\n      \"name\": \"accumulated\"\n    } ,\n    {\n      \"name\": \"monthly\"\n    } \n  ],\n  \"series\": [\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"area\",\n      \"valueField\": \"ForecastSell\",\n      \"name\": \"Planned Revenue\"\n    } ,\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualCost\",\n      \"name\": \"Actual Cost\",\n      \"point\": {\n        \"size\": 6\n      } \n    } ,\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"area\",\n      \"valueField\": \"ForecastSellRunningTotal\",\n      \"name\": \"# Planned Revenue\"\n    } ,\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualCostRunningTotal\",\n      \"name\": \"# Actual Cost\",\n      \"point\": {\n        \"size\": 6\n      } \n    } \n  ],\n  \"valueAxis\": [\n    {\n      \"name\": \"monthly\",\n      \"position\": \"left\"\n    } ,\n    {\n      \"name\": \"accumulated\",\n      \"position\": \"left\"\n    } \n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  } \n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } ,
        {
            "Id": "42f53240-d4db-42bf-b37d-3c30a22eb3c1",
            "Name": "Department Burn",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":250,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Total\",\"metricFieldValue\":\"DirectHoursGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.*,\\r\\n                       sum(DirectHours) over (order by v.DepartmentId) as DirectHoursRunningTotal,\\r\\n                       sum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n                       sum(NewBusinessHours) over (order by v.DepartmentId) as NewBusinessHoursRunningTotal,\\r\\n                       sum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n                       sum(AdministrativeHours) over (order by v.DepartmentId) as AdministrativeHoursRunningTotal,\\r\\n                       sum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n                       sum(TimeOffHours) over (order by v.DepartmentId) as TimeOffHoursRunningTotal,\\r\\n                       sum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n                       sum(TotalHours) over () as GlobalTotalHours\\r\\n                    from\\r\\n                    (\\r\\n                       select t.[DepartmentId],\\r\\n                             t.[Department] as DepartmentName,\\r\\n                             isnull(t.DirectHours, 0.0) as DirectHours,\\r\\n                             isnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n                             isnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n                             isnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n                             isnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n                       from\\r\\n                       (\\r\\n                          select t.[DepartmentId],\\r\\n                                t.[Department],\\r\\n                                sum(t.[Hours]) as [Hours],\\r\\n                                (sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                                sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n                                sum(AdministrativeHours) as AdministrativeHours\\r\\n                          from   SkillAnalyticsTimeUtilization t\\r\\n                          where\\t 1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                          group by t.[DepartmentId],\\r\\n                                t.[Department]\\r\\n                       ) t\\r\\n                       left outer join \\r\\n                       (\\r\\n                          select uv.[DepartmentId],\\r\\n                                uv.[Department],\\r\\n                                sum(uv.[Hours]) as TimeOffHours\\r\\n                          from   SkillAnalyticsLeaves uv\\r\\n\\t                      where\\t 1 = 1\\r\\n                          group by uv.[DepartmentId],\\r\\n                                uv.[Department]\\r\\n                       )\\r\\n                       uv on (uv.[DepartmentId] = t.DepartmentId)\\r\\n                    ) v\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_Department/execute",
            "Configuration": "{\n  \"rotated\": true,\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"DepartmentName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"DirectHours\"\n  } ,\n  \"argumentAxis\": {\n    \"label\": {\n      \"visible\": true\n    } \n  } ,\n  \"seriesTemplate\": {\n    \"nameField\": \"DepartmentName\"\n  } ,\n  \"size\": {\n    \"height\": 250\n  } \n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } ,
        {
            "Id": "f42b4481-cb34-40bd-8248-3f42943b6a33",
            "Name": "Time Burn",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Forecast vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":300,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ForecastTimeGrandTotal\"} ,{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.[Year],\\r\\n\\t\\t\\t                                v.[Month],\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\tv.[Year] is null and v.[Month] is null \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.[Year],\\r\\n\\t\\t\\t                                v.[Month]\\r\\n                                )\\r\\n                                select\\tv.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n                                            select\\tconcat(FORMAT(pym.[Month], \u00270#\u0027), \u0027/\u0027, pym.[Year]) as MonthYear,\\r\\n\\t\\t                                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t                                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillable), 0) as ActualBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (), 0) AS ActualBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableCost), 0) as ActualBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (), 0) AS ActualBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableSell), 0) as ActualBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (), 0) AS ActualBillableSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillable), 0) as ActualNonBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (), 0) AS ActualNonBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableCost), 0) as ActualNonBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (), 0) AS ActualNonBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableSell), 0) as ActualNonBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (), 0) AS ActualNonBillableSellGrandTotal,\\r\\n                                                        isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n                                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                cast(concat(v.[Year], FORMAT(v.[Month], \u00270#\u0027)) as int) = pym.YearMonth),\\r\\n\\t\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n                                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t                                                p.Client = cc.Oid\\r\\n\\t\\t                                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                                                group by pym.[Year],\\r\\n\\t\\t                                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t                                ) v,\\r\\n\\t                                PlannedAndContracted pc\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 300\n  } ,\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"MonthYear\",\n    \"ignoreEmptyPoints\": false\n  } ,\n  \"panes\": [\n    {\n      \"name\": \"accumulated\"\n    } ,\n    {\n      \"name\": \"monthly\"\n    } \n  ],\n  \"series\": [\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"bar\",\n      \"valueField\": \"ForecastTime\",\n      \"name\": \"Forecast Time\"\n    } ,\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual Time\",\n      \"point\": {\n        \"size\": 6\n      } \n    } ,\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"bar\",\n      \"valueField\": \"ForecastTimeRunningTotal\",\n      \"name\": \"# Forecast Time\"\n    } ,\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualTimeRunningTotal\",\n      \"name\": \"# Actual Time\",\n      \"point\": {\n        \"size\": 6\n      } \n    } \n  ],\n  \"valueAxis\": [\n    {\n      \"name\": \"monthly\",\n      \"position\": \"left\"\n    } ,\n    {\n      \"name\": \"accumulated\",\n      \"position\": \"left\"\n    } \n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  } \n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } ,
        {
            "Id": "ff120701-2927-4e62-aaa6-7cabd2f16b14",
            "Name": "Typology Group Burn",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 4,
            "Parameters": "[{\"WidgetSubTitle\":\"Forecast vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":250,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ForecastTimeGrandTotal\"} ,{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.UserTypologyGroupId as TypologyGroupId,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\t1 = 1 \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.UserTypologyGroupId\\r\\n                                )\\r\\n                                select\\t(utg.[Name]) as TypologyGroup ,\\r\\n\\t\\t                                v.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n\\t\\t\\t                                select\\tv.UserTypologyGroupId as TypologyGroupId,\\r\\n\\t\\t\\t\\t\\t                                concat(FORMAT(pym.[Month], \u00270#\u0027), \u0027/\u0027, pym.[Year]) as MonthYear,\\r\\n\\t\\t\\t\\t\\t                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(sum(v.PlannedHours)) OVER (PARTITION BY v.UserTypologyGroupId), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n\\t\\t\\t                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and\\r\\n\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.[Year] = pym.[Year] and v.[Month] = pym.[Month])\\r\\n\\t\\t\\t\\t\\t\\t                                )\\r\\n\\t\\t\\t\\t\\t                                ),\\r\\n\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n\\t\\t\\t                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t\\t\\t\\t                                p.Client = cc.Oid\\r\\n\\t\\t\\t\\t\\t                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t\\t\\t                                group by v.UserTypologyGroupId, \\r\\n\\t\\t\\t\\t\\t                                pym.[Year],\\r\\n\\t\\t\\t\\t\\t                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t\\t                                ) v,\\r\\n\\t\\t                                PlannedAndContracted pc,\\r\\n\\t\\t                                UserTypologyGroup utg \\r\\n                                where\\tv.TypologyGroupId = utg.Oid and\\r\\n\\t\\t                                v.TypologyGroupId = pc.TypologyGroupId\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Typology_Group_Per_Year_Month/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 250\n  } ,\n  \"commonSeriesSettings\": {\n    \"ignoreEmptyPoints\": false,\n    \"argumentField\": \"MonthYear\",\n    \"valueField\": \"ActualTime\",\n    \"type\": \"line\",\n    \"point\": {\n      \"size\": 6\n    } ,\n    \"border\": {\n      \"visible\": true\n    } \n  } ,\n  \"commonAxisSettings\": {\n    \"grid\": {\n      \"visible\": true\n    } ,\n    \"discreteAxisDivisionMode\": \"crossLabels\"\n  } ,\n  \"commonPaneSettings\": {\n    \"border\": {\n      \"visible\": true\n    } \n  } ,\n  \"seriesTemplate\": {\n    \"nameField\": \"TypologyGroup\"\n  } ,\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  } \n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } ,
        {
            "Id": "b43f5a90-5ba3-44ba-b542-a4c3eba838af",
            "Name": "User Burn",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 4,
            "Order": 6,
            "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":250,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false} ,\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Total\",\"metricFieldValue\":\"DirectHoursGrandTotal\"} ]} ,\"showSubTitle\":true,\"showTitle\":true} ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select v.*,\\r\\n                       sum(DirectHours) over (order by v.EmployeeId) as DirectHoursRunningTotal,\\r\\n                       sum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n                       sum(NewBusinessHours) over (order by v.EmployeeId) as NewBusinessHoursRunningTotal,\\r\\n                       sum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n                       sum(AdministrativeHours) over (order by v.EmployeeId) as AdministrativeHoursRunningTotal,\\r\\n                       sum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n                       sum(TimeOffHours) over (order by v.EmployeeId) as TimeOffHoursRunningTotal,\\r\\n                       sum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n                       sum(TotalHours) over () as GlobalTotalHours\\r\\n                    from\\r\\n                    (\\r\\n                       select t.[UserId] as EmployeeId,\\r\\n                             t.[User] as EmployeeName,\\r\\n                             isnull(t.DirectHours, 0.0) as DirectHours,\\r\\n                             isnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n                             isnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n                             isnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n                             isnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n                       from\\r\\n                       (\\r\\n                          select t.[UserId],\\r\\n                                t.[User],\\r\\n                                sum(t.[Hours]) as [Hours],\\r\\n                                (sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                                sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n                                sum(AdministrativeHours) as AdministrativeHours\\r\\n                          from   SkillAnalyticsTimeUtilization t\\r\\n\\t                      where\\t 1 = 1\\r\\n                                /*[ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                          group by t.[UserId],\\r\\n                                t.[User]\\r\\n                       ) t\\r\\n                       left outer join \\r\\n                       (\\r\\n                          select uv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuv.[User],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n                          from   SkillAnalyticsLeaves uv\\r\\n\\t                      where\\t 1 = 1\\r\\n                        group by uv.[UserId],\\r\\n                                uv.[User]\\r\\n                       )\\r\\n                       uv on (uv.[UserId] = t.UserId)\\r\\n                    ) v\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_User/execute",
            "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"EmployeeName\",\n    \"type\": \"bar\",\n    \"ignoreEmptyPoints\": true,\n    \"valueField\": \"DirectHours\"\n  } ,\n  \"argumentAxis\": {\n    \"label\": {\n      \"visible\": true\n    } \n  } ,\n  \"seriesTemplate\": {\n    \"nameField\": \"EmployeeName\"\n  } ,\n\"size\": {\n\"height\": 250\n} ,\n  \"palette\": [\n    \"#da5859\",\n    \"#f09777\",\n    \"#a5d7d0\",\n    \"#fbc987\",\n    \"#a5bdd7\",\n    \"#e97c82\",\n    \"#81d4fa\",\n    \"#c5e1a5\",\n    \"#ce93d8\",\n    \"#fff59d\"\n  ],\n  \"legend\": {\n    \"visible\": false\n  } ,\n  \"tooltip\": {\n    \"enabled\": true,\n \"customizeTooltip\": \"function(e){  \\n\\t\\treturn {     \\n\\t\\t\\t\u0027text\u0027: \u0027\u003cspan style=\\\"font-size: 14px; color: #808080;\\\"\u003e\u0027 +  e.argumentText + \u0027\u003c/span\u003e\u003cbr/\u003e\u003cspan style=\\\"color: \u0027+ e.point.getColor() +\u0027\\\"\u003e\u0027 +  Math.round(Math.abs(e.valueText)*100)/100 + \u0027\u003c/span\u003e\u0027    \\n\\t\\t} ;   } \"\n  } \n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } ,
        {
            "Id": "29c843b0-b471-4191-8492-f7019c023bef",
            "Name": "Projects",
            "Active": true,
            "UseQuery": false,
            "Query": "",
            "Size": 12,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"ProjectId\",\"WidgetColor\":\"\",\"WidgetHeight\":150,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":false,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]} ,\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null} } ,\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT \\r\\n\\tv.ProjectId,\\r\\n\\tv.ProjectName,\\r\\n\\tSUM(v.ActualTime) as ActualTime,\\r\\n\\tSUM(v.PlannedTime) as PlannedTime,\\r\\n\\tSUM(v.ContractedTime) as ContractedTime,\\r\\n\\tSUM(v.ContractedRevenue) as ContractedRevenue,\\r\\n\\tIIF(SUM(v.PlannedTime) \u003e 0, (SUM(v.ActualTime) / SUM(v.PlannedTime)), 0) as PlannedBurnPercentage,\\r\\n\\tIIF(SUM(v.ContractedTime) \u003e 0, (SUM(v.ActualTime) / SUM(v.ContractedTime)), 0) as ContractedBurnPercentage\\r\\nFROM\\r\\n(\\r\\n\\tSELECT \\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project as ProjectName,\\r\\n\\t\\tSUM(v.ActualTime) as ActualTime,\\r\\n\\t\\t0.0 as PlannedTime,\\r\\n\\t\\t0.0 as ContractedTime,\\r\\n\\t\\t0.0 as ContractedRevenue\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\tWHERE \\r\\n\\t\\tv.ProjectId IN (SELECT DISTINCT e.ProjectId from Analytics.Estimate(@CurrentUserId) e WHERE e.Oid = @EstimateId)\\r\\n\\tGROUP BY\\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project as ProjectName,\\r\\n\\t\\t0.0 as ActualTime,\\r\\n\\t\\tSUM(v.[Hours]) as PlannedTime,\\r\\n\\t\\t0.0 as ContractedTime,\\r\\n\\t\\t0.0 as ContractedRevenue\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.PlannedHoursTotal(@CurrentUserId) v\\r\\n\\tWHERE \\r\\n\\t\\tv.ProjectId IN (SELECT DISTINCT e.ProjectId from Analytics.Estimate(@CurrentUserId) e WHERE e.Oid = @EstimateId)\\r\\n\\tGROUP BY\\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project\\r\\n\\tUNION ALL\\r\\n\\tSELECT \\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project as ProjectName,\\r\\n\\t\\t0.0 as ActualTime,\\r\\n\\t\\t0.0 as PlannedTime,\\r\\n\\t\\tSUM(v.[ContractedHours]) as ContractedTime,\\r\\n\\t\\tSUM(v.[ContractedHours] * v.Rate) as ContractedRevenue\\r\\n\\tFROM\\r\\n\\t\\tAnalytics.PlannedHoursTotal(@CurrentUserId) v\\r\\n\\tWHERE \\r\\n\\t\\tv.ProjectId IN (SELECT DISTINCT e.ProjectId from Analytics.Estimate(@CurrentUserId) e WHERE e.Oid = @EstimateId)\\r\\n\\t\\tAND v.JobId is null\\r\\n\\tGROUP BY\\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.Project\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.ProjectId,\\r\\n\\tv.ProjectName\\r\\n\",\"mapping\":\"\"} } ,\"Filters\":{} ,\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0} ,\"RequiredFilters\":[\"estimateId\"]} } ]",
            "DashboardComponentType": {
                "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            } ,
            "AnalyticsApiUrl": "",
            "Configuration": "{\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    } ,\r\n    \"filterRow\": {\r\n        \"visible\": true\r\n    } ,\r\n    \"height\": 250,\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": true,\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"columnMinWidth\": 50,\r\n    \"filterPanel\": {\r\n        \"visible\": false\r\n    } ,\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    } ,\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    } ,\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"ProjectName\",\r\n            \"caption\": \"Project\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"ContractedTime\",\r\n            \"caption\": \"Contracted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"PlannedTime\",\r\n            \"caption\": \"Planned\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"ActualTime\",\r\n            \"caption\": \"Actual\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"ContractedBurnPercentage\",\r\n            \"caption\": \"Contracted Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"PlannedBurnPercentage\",\r\n            \"caption\": \"Planned Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false\r\n        } ,\r\n        {\r\n            \"dataField\": \"ContractedRevenue\",\r\n            \"caption\": \"Contracted Revenue\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            } ,\r\n            \"allowGrouping\": false\r\n        } \r\n    ],\r\n    \"summary\": {\r\n        \"totalItems\": [\r\n            {\r\n                \"column\": \"ProjectName\",\r\n                \"summaryType\": \"count\"\r\n            } ,\r\n            {\r\n                \"column\": \"ActualTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0} \"\r\n            } ,\r\n            {\r\n                \"column\": \"ActualCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                } ,\r\n                \"displayFormat\": \"{0} \"\r\n            } ,\r\n            {\r\n                \"column\": \"PlannedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0} \"\r\n            } ,\r\n            {\r\n                \"column\": \"ContractedRevenue\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                } ,\r\n                \"displayFormat\": \"{0} \"\r\n            } ,\r\n            {\r\n                \"column\": \"ContractedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0} \"\r\n            } \r\n        ]\r\n    } \r\n} ",
            "DashboardDefinitionId": "d86c3b19-e871-495d-8cfb-23c2c179f018"
        } 
    ],
    "Version": 4,
    "Default": true,
    "Dependencies": {
        "DashboardSdk": "1.0.0",
        "Analytics": "1.0.0",
        "SkillsWorkflow": "1.0.0"
    } 
} 
