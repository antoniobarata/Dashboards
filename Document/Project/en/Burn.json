{"DashboardDefinitionRoles":[{"AccessRoleId":"9192b3d9-3b6b-469a-bcf4-01accd8ec5b4","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b","AccessRoleName":"Administrator"},{"AccessRoleId":"d3e36f3b-993f-4b56-8664-bc616956b733","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b","AccessRoleName":"Maintenance Profile"},{"AccessRoleId":"adebf70c-0dab-41d1-8ee8-e78bcc9b09f7","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b","AccessRoleName":"Account Profile"},{"AccessRoleId":"5c2e7024-eaf4-43fa-96d3-9ad61b011657","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b","AccessRoleName":"Finance Profile"}],"Id":"bb2f7df5-795f-4ef1-974e-92470e6ad78b","Name":"Burn Dashboard","Active":true,"Location":1,"DocumentId":"8055b90e-69d2-4346-a378-5b8f21d5ec7b","DocumentName":"Project","DocumentTypeName":null,"DocumentsConfiguration":null,"Templates":[],"DashboardDefinitionComponents":[{"Id":"57ce0c25-2976-44a4-a929-2000216ca1e7","Name":"Revenue Burn","Active":true,"UseQuery":false,"Query":null,"Size":6,"Order":3,"Parameters":"[{\"WidgetSubTitle\":\"Planned Revenue vs Actual Cost\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":24,\"WidgetYPosition\":14,\"WidgetRows\":16,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Revenue\",\"metricFieldValue\":\"ForecastSellGrandTotal\"},{\"visible\":true,\"metricName\":\"? Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.[Year],\\r\\n\\t\\t\\t                                v.[Month],\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\tv.[Year] is null and v.[Month] is null \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.[Year],\\r\\n\\t\\t\\t                                v.[Month]\\r\\n                                )\\r\\n                                select\\tv.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n                                            select\\tconcat(FORMAT(pym.[Month], '0#'), '/', pym.[Year]) as MonthYear,\\r\\n\\t\\t                                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t                                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillable), 0) as ActualBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (), 0) AS ActualBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableCost), 0) as ActualBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (), 0) AS ActualBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableSell), 0) as ActualBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (), 0) AS ActualBillableSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillable), 0) as ActualNonBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (), 0) AS ActualNonBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableCost), 0) as ActualNonBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (), 0) AS ActualNonBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableSell), 0) as ActualNonBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (), 0) AS ActualNonBillableSellGrandTotal,\\r\\n                                                        isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n                                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                cast(concat(v.[Year], FORMAT(v.[Month], '0#')) as int) = pym.YearMonth),\\r\\n\\t\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n                                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t                                                p.Client = cc.Oid\\r\\n\\t\\t                                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                                                group by pym.[Year],\\r\\n\\t\\t                                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t                                ) v,\\r\\n\\t                                PlannedAndContracted pc\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute","Configuration":"{\n    \"size\": {\n        \"height\": 250\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"MonthYear\",\n        \"ignoreEmptyPoints\": false\n    },\n    \"panes\": [\n        {\n            \"name\": \"accumulated\"\n        },\n        {\n            \"name\": \"monthly\"\n        }\n    ],\n    \"series\": [\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"area\",\n            \"valueField\": \"ForecastSell\",\n            \"name\": \"Planned Revenue\"\n        },\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualCost\",\n            \"name\": \"Actual Cost\",\n            \"point\": {\n                \"size\": 6\n            }\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"area\",\n            \"valueField\": \"ForecastSellRunningTotal\",\n            \"name\": \"? Planned Revenue\"\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualCostRunningTotal\",\n            \"name\": \"? Actual Cost\",\n            \"point\": {\n                \"size\": 6\n            }\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"monthly\",\n            \"position\": \"left\"\n        },\n        {\n            \"name\": \"accumulated\",\n            \"position\": \"left\"\n        }\n    ],\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"2014312d-c7d7-4780-9c43-41c584f97cd0","Name":"Typology Group Burn","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":4,"Parameters":"[{\"WidgetSubTitle\":\"Forecast vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":0,\"WidgetYPosition\":42,\"WidgetRows\":12,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Forecast\",\"metricFieldValue\":\"ForecastTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Billable)\",\"metricFieldValue\":\"ActualBillableGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Non Billable)\",\"metricFieldValue\":\"ActualNonBillableGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.UserTypologyGroupId as TypologyGroupId,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.UserTypologyGroupId), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\t1 = 1 \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.UserTypologyGroupId\\r\\n                                )\\r\\n                                select\\t(utg.[Name]) as TypologyGroup ,\\r\\n\\t\\t                                v.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n\\t\\t\\t                                select\\tv.UserTypologyGroupId as TypologyGroupId,\\r\\n\\t\\t\\t\\t\\t                                concat(FORMAT(pym.[Month], '0#'), '/', pym.[Year]) as MonthYear,\\r\\n\\t\\t\\t\\t\\t                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(sum(sum(v.ActualHoursBillable)) OVER () ,0) AS ActualBillableGrandTotal,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(sum(sum(v.ActualHoursNonBillable)) OVER () ,0) AS ActualNonBillableGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY v.UserTypologyGroupId, pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(sum(v.PlannedHours)) OVER (PARTITION BY v.UserTypologyGroupId), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n\\t\\t\\t                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t                                (\\r\\n\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and\\r\\n\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.[Year] = pym.[Year] and v.[Month] = pym.[Month])\\r\\n\\t\\t\\t\\t\\t\\t                                )\\r\\n\\t\\t\\t\\t\\t                                ),\\r\\n\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n\\t\\t\\t                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t\\t\\t\\t                                p.Client = cc.Oid\\r\\n\\t\\t\\t\\t\\t                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t\\t\\t                                group by v.UserTypologyGroupId, \\r\\n\\t\\t\\t\\t\\t                                pym.[Year],\\r\\n\\t\\t\\t\\t\\t                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t\\t                                ) v,\\r\\n\\t\\t                                PlannedAndContracted pc,\\r\\n\\t\\t                                UserTypologyGroup utg \\r\\n                                where\\tv.TypologyGroupId = utg.Oid and\\r\\n\\t\\t                                v.TypologyGroupId = pc.TypologyGroupId\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Burn_Rate_By_Project_Per_Typology_Group_Per_Year_Month/execute","Configuration":"{\n    \"size\": {\n        \"height\": 150\n    },\n    \"commonSeriesSettings\": {\n        \"ignoreEmptyPoints\": false,\n        \"argumentField\": \"MonthYear\",\n        \"valueField\": \"ActualTime\",\n        \"type\": \"line\",\n        \"point\": {\n            \"size\": 6\n        },\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"commonAxisSettings\": {\n        \"grid\": {\n            \"visible\": true\n        },\n        \"discreteAxisDivisionMode\": \"crossLabels\"\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"TypologyGroup\"\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"6722a737-2a93-4dd6-9070-9841aff4ca69","Name":"Time Burn","Active":true,"UseQuery":false,"Query":null,"Size":6,"Order":2,"Parameters":"[{\"WidgetSubTitle\":\"Contracted vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":14,\"WidgetRows\":16,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Contracted\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Billable)\",\"metricFieldValue\":\"ActualBillableTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Non Billable)\",\"metricFieldValue\":\"ActualNonBillableTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"With ProjectYearMonths As\\r\\n                                (\\r\\n\\t                                select @ProjectId as ProjectId, \\r\\n\\t                                ym.* \\r\\n\\t                                from YearsMonths(\\r\\n\\t                                (select p.BeginDate from Project p where p.Oid = @ProjectId), \\r\\n\\t                                (select p.EndDate from Project p where p.Oid = @ProjectId)) ym\\r\\n                                ),\\r\\n                                PlannedAndContracted AS\\r\\n                                (\\r\\n\\t                                select\\tv.[Year],\\r\\n\\t\\t\\t                                v.[Month],\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHours), 0) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHours)) OVER (), 0) AS PlannedGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.PlannedHoursSell), 0) as PlannedSell,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS PlannedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.PlannedHoursSell)) OVER (), 0) AS PlannedSellGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(v.ContractedHours), 0) as ContractedTime,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (ORDER BY v.[Year], v.[Month]), 0) AS ContractedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ContractedHours)) OVER (), 0) AS ContractedTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t                                isnull(max(v.ContractedHoursRate), 0) as ContractedRate \\r\\n\\t\\t\\t                                from\\tSkillAnalyticsBurnRate v\\r\\n\\t                                where\\tv.[Year] is null and v.[Month] is null \\r\\n\\t\\t\\t                                /*[ProjectFilter]*/ and v.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\t                                group by v.[Year],\\r\\n\\t\\t\\t                                v.[Month]\\r\\n                                )\\r\\n                                select\\tv.*,\\r\\n\\t\\t                                pc.PlannedTime,\\r\\n\\t\\t                                pc.PlannedTimeRunningTotal,\\r\\n\\t\\t                                pc.PlannedGrandTotal,\\r\\n\\t\\t                                pc.PlannedSell,\\r\\n\\t\\t                                pc.PlannedSellRunningTotal,\\r\\n\\t\\t                                pc.PlannedSellGrandTotal,\\r\\n\\t\\t                                pc.ContractedTime,\\r\\n\\t\\t                                pc.ContractedTimeRunningTotal,\\r\\n\\t\\t                                pc.ContractedTimeGrandTotal,\\r\\n\\t\\t                                pc.ContractedRate\\r\\n                                from\\r\\n\\t\\t                                (\\r\\n                                            select\\tconcat(FORMAT(pym.[Month], '0#'), '/', pym.[Year]) as MonthYear,\\r\\n\\t\\t                                                pym.YearMonth as MonthYearNumber,\\r\\n\\t\\t                                                isnull(sum(v.ActualHours), 0) as ActualTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (ORDER BY pym.YearMonth), 0) AS ActualTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHours)) OVER (), 0) AS ActualTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursCost), 0) as ActualCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursCost)) OVER (), 0) AS ActualCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursSell), 0) as ActualSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursSell)) OVER (), 0) AS ActualSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillable), 0) as ActualBillableTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillable)) OVER (), 0) AS ActualBillableTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableCost), 0) as ActualBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableCost)) OVER (), 0) AS ActualBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursBillableSell), 0) as ActualBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursBillableSell)) OVER (), 0) AS ActualBillableSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillable), 0) as ActualNonBillableTime,\\r\\n                                                        isnull(sum(sum(v.ActualHoursNonBillable)) OVER (), 0) AS ActualNonBillableTimeGrandTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillable)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableTimeRunningTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableCost), 0) as ActualNonBillableCost,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableCostRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableCost)) OVER (), 0) AS ActualNonBillableCostGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ActualHoursNonBillableSell), 0) as ActualNonBillableSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (ORDER BY pym.YearMonth), 0) AS ActualNonBillableSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ActualHoursNonBillableSell)) OVER (), 0) AS ActualNonBillableSellGrandTotal,\\r\\n                                                        isnull(sum(v.ForecastHours), 0) as ForecastTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHours)) OVER (), 0) AS ForecastTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.ForecastHoursSell), 0) as ForecastSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS ForecastSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.ForecastHoursSell)) OVER (), 0) AS ForecastSellGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHours), 0) as AllocatedTime,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedTimeRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHours)) OVER (), 0) AS AllocatedTimeGrandTotal,\\r\\n\\t\\t                                                isnull(sum(v.AllocatedHoursSell), 0) as AllocatedSell,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (ORDER BY pym.YearMonth), 0) AS AllocatedSellRunningTotal,\\r\\n\\t\\t\\t\\t\\t\\t                                isnull(sum(sum(v.AllocatedHoursSell)) OVER (), 0) AS AllocatedSellGrandTotal\\r\\n                                                from\\tProjectYearMonths pym\\r\\n\\t\\t\\t\\t\\t\\t                                left outer join SkillAnalyticsBurnRate v on \\r\\n\\t\\t\\t\\t\\t\\t\\t                                (v.ProjectId = pym.ProjectId and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Year] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                v.[Month] is not null and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t                                cast(concat(v.[Year], FORMAT(v.[Month], '0#')) as int) = pym.YearMonth),\\r\\n\\t\\t\\t\\t\\t\\t                                Project p,\\r\\n\\t\\t\\t\\t\\t\\t                                CommercialClient cc\\r\\n                                                where\\tpym.ProjectId = p.Oid and \\r\\n\\t\\t                                                p.Client = cc.Oid\\r\\n\\t\\t                                                /*[ProjectFilter]*/ and pym.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                                                group by pym.[Year],\\r\\n\\t\\t                                                pym.[Month],\\r\\n\\t\\t\\t\\t\\t\\t                                pym.YearMonth\\r\\n\\t                                ) v,\\r\\n\\t                                PlannedAndContracted pc\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute","Configuration":"{\n    \"size\": {\n        \"height\": 250\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"MonthYear\",\n        \"ignoreEmptyPoints\": false\n    },\n    \"panes\": [\n        {\n            \"name\": \"accumulated\"\n        },\n        {\n            \"name\": \"monthly\"\n        }\n    ],\n    \"series\": [\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\"\n        },\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"point\": {\n                \"size\": 6\n            }\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTimeRunningTotal\",\n            \"name\": \"? Contracted Time\"\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualTimeRunningTotal\",\n            \"name\": \"? Actual Time\",\n            \"point\": {\n                \"size\": 6\n            }\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"monthly\",\n            \"position\": \"left\"\n        },\n        {\n            \"name\": \"accumulated\",\n            \"position\": \"left\"\n        }\n    ],\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"4b53e208-9760-488c-a998-9a5ef919095c","Name":"User Burn","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":6,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":24,\"WidgetYPosition\":42,\"WidgetRows\":12,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Actual (Billable)\",\"metricFieldValue\":\"DirectHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Non Billable)\",\"metricFieldValue\":\"NewBusinessHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select [TOP_MACRO] v.*,\\r\\n                       sum(DirectHours) over (order by v.EmployeeId) as DirectHoursRunningTotal,\\r\\n                       sum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n                       sum(NewBusinessHours) over (order by v.EmployeeId) as NewBusinessHoursRunningTotal,\\r\\n                       sum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n                       sum(AdministrativeHours) over (order by v.EmployeeId) as AdministrativeHoursRunningTotal,\\r\\n                       sum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n                       sum(TimeOffHours) over (order by v.EmployeeId) as TimeOffHoursRunningTotal,\\r\\n                       sum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n                       sum(TotalHours) over () as GlobalTotalHours\\r\\n                    from\\r\\n                    (\\r\\n                       select t.[UserId] as EmployeeId,\\r\\n                             t.[User] as EmployeeName,\\r\\n                             isnull(t.DirectHours, 0.0) as DirectHours,\\r\\n                             isnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n                             isnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n                             isnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n                             isnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n                       from\\r\\n                       (\\r\\n                          select t.[UserId],\\r\\n                                t.[User],\\r\\n                                sum(t.[Hours]) as [Hours],\\r\\n                                (sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                                sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n                                sum(AdministrativeHours) as AdministrativeHours\\r\\n                          from   SkillAnalyticsTimeUtilization t\\r\\n\\t                      where\\t 1 = 1\\r\\n                                /*[ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                          group by t.[UserId],\\r\\n                                t.[User]\\r\\n                       ) t\\r\\n                       left outer join \\r\\n                       (\\r\\n                          select uv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuv.[User],\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsum(uv.[Hours]) as TimeOffHours\\r\\n                          from   SkillAnalyticsLeaves uv\\r\\n\\t                      where\\t 1 = 1\\r\\n                        group by uv.[UserId],\\r\\n                                uv.[User]\\r\\n                       )\\r\\n                       uv on (uv.[UserId] = t.UserId)\\r\\n                    ) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_User/execute","Configuration":"{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"EmployeeName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"DirectHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"EmployeeName\"\n    },\n    \"size\": {\n        \"height\": 150\n    },\n    \"palette\": [\n        \"#da5859\",\n        \"#f09777\",\n        \"#a5d7d0\",\n        \"#fbc987\",\n        \"#a5bdd7\",\n        \"#e97c82\",\n        \"#81d4fa\",\n        \"#c5e1a5\",\n        \"#ce93d8\",\n        \"#fff59d\"\n    ],\n    \"legend\": {\n        \"visible\": false\n    },\n    \"tooltip\": {\n        \"enabled\": true,\n        \"customizeTooltip\": \"function(e){  \\n\\t\\treturn {     \\n\\t\\t\\t'text': '<span style=\\\"font-size: 14px; color: #808080;\\\">' +  e.argumentText + '</span><br/><span style=\\\"color: '+ e.point.getColor() +'\\\">' +  Math.round(Math.abs(e.valueText)*100)/100 + '</span>'    \\n\\t\\t};   }\"\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"f5e4981a-c2ff-43a4-b736-bf039552f75e","Name":"Department Burn","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":5,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":24,\"WidgetYPosition\":30,\"WidgetRows\":12,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Actual (Billable)\",\"metricFieldValue\":\"DirectHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Non Billable)\",\"metricFieldValue\":\"NewBusinessHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select [TOP_MACRO] v.*,\\r\\n                       sum(DirectHours) over (order by v.DepartmentId) as DirectHoursRunningTotal,\\r\\n                       sum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n                       sum(NewBusinessHours) over (order by v.DepartmentId) as NewBusinessHoursRunningTotal,\\r\\n                       sum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n                       sum(AdministrativeHours) over (order by v.DepartmentId) as AdministrativeHoursRunningTotal,\\r\\n                       sum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n                       sum(TimeOffHours) over (order by v.DepartmentId) as TimeOffHoursRunningTotal,\\r\\n                       sum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n                       sum(TotalHours) over () as GlobalTotalHours\\r\\n                    from\\r\\n                    (\\r\\n                       select t.[DepartmentId],\\r\\n                             t.[Department] as DepartmentName,\\r\\n                             isnull(t.DirectHours, 0.0) as DirectHours,\\r\\n                             isnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n                             isnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n                             isnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n                             isnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n                       from\\r\\n                       (\\r\\n                          select t.[DepartmentId],\\r\\n                                t.[Department],\\r\\n                                sum(t.[Hours]) as [Hours],\\r\\n                                (sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                                sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n                                sum(AdministrativeHours) as AdministrativeHours\\r\\n                          from   SkillAnalyticsTimeUtilization t\\r\\n                          where\\t 1 = 1\\r\\n\\t\\t\\t\\t\\t\\t/*[ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                          group by t.[DepartmentId],\\r\\n                                t.[Department]\\r\\n                       ) t\\r\\n                       left outer join \\r\\n                       (\\r\\n                          select uv.[DepartmentId],\\r\\n                                uv.[Department],\\r\\n                                sum(uv.[Hours]) as TimeOffHours\\r\\n                          from   SkillAnalyticsLeaves uv\\r\\n\\t                      where\\t 1 = 1\\r\\n                          group by uv.[DepartmentId],\\r\\n                                uv.[Department]\\r\\n                       )\\r\\n                       uv on (uv.[DepartmentId] = t.DepartmentId)\\r\\n                    ) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_Department/execute","Configuration":"{\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"DepartmentName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"DirectHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"DepartmentName\"\n    },\n    \"size\": {\n        \"height\": 150\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"c68a4e84-f19f-490d-ac3c-d2ec15543eae","Name":"Utilization per User","Active":true,"UseQuery":false,"Query":"","Size":12,"Order":0,"Parameters":"[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours in % of User Capacity\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":14,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":true,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\t\\tt.JobId,\\r\\n\\t\\tdj.NameAndExternalId as JobName,\\r\\n\\t\\tcast(d.EntryDate as date) as StartDate,\\r\\n\\t\\tcast(dj.[Date] as date) as EndDate,\\r\\n\\t\\tdj.ProjectClassificationName as JobClassification,\\r\\n\\t\\tt.ContractedHours,\\r\\n\\t\\tt.ForecastHours,\\r\\n\\t\\tt.BillableHours,\\r\\n\\t\\tt.NonBillableHours,\\r\\n        (t.BillableHours + t.NonBillableHours) as ActualHours,\\r\\n\\t\\t(t.BillableHours + t.NonBillableHours + t.ForecastHours) as ActualPlusForecast,\\r\\n        IIF(t.ContractedHours > 0, ((t.BillableHours + t.NonBillableHours) / t.ContractedHours), 0) as ActualBurnPercentage,\\r\\n\\t\\tIIF(t.ContractedHours > 0, (((t.BillableHours + t.NonBillableHours) + t.ForecastHours) / t.ContractedHours), 0) as ActualPlusForecastBurnPercentage\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\t\\tv.JobId,\\r\\n\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours\\r\\n\\tfrom (\\r\\n\\t\\tselect \\r\\n\\t\\t\\t\\tde.JobId,\\r\\n\\t\\t\\t\\tsum(de.[Hours]) as ContractedHours,\\r\\n\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t0 as NonBillableHours\\r\\n\\t\\tfrom\\t\\r\\n\\t\\t\\t\\tAnalytics.DatamartEstimate de\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\t\\tde.JobId\\r\\n\\t\\tunion\\r\\n\\t\\tselect \\r\\n\\t\\t\\t\\tph.JobId,\\r\\n\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\tsum(ph.[Hours]) as ForecastHours,\\r\\n\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t0 as NonBillableHours\\r\\n\\t\\tfrom\\r\\n\\t\\t\\t\\tAnalytics.DatamartPlannedHours ph\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\t\\tph.JobId\\r\\n\\t\\tunion\\r\\n\\t\\tselect \\r\\n\\t\\t\\t\\tdt.JobId,\\r\\n\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\tsum(dt.BillableTime) as BillableHours,\\r\\n\\t\\t\\t\\tsum(dt.NewBusinessTime) as NonBillableHours\\r\\n\\t\\tfrom\\r\\n\\t\\t\\t\\tAnalytics.DatamartTimesheet dt\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\t\\tdt.JobId\\r\\n\\t) v\\r\\n\\tgroup by \\r\\n\\t\\t\\tv.JobId\\r\\n) t \\r\\n\\tleft outer join Analytics.DatamartJob dj on dj.Oid = t.JobId\\r\\n\\tleft outer join Deliverable d on d.Oid = t.JobId\\r\\nwhere \\r\\n\\t\\t(dj.ProjectId = @ProjectId)\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"","Configuration":"{\r\n    \"headerFilter\": {\r\n        \"visible\": true\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"paging\": {\r\n        \"enabled\": true\r\n    },\r\n    \"columnResizingMode\": \"widget\",\r\n    \"allowColumnResizing\": \"true\",\r\n    \"allowFiltering\": true,\r\n    \"columnAutoWidth\": \"true\",\r\n    \"searchPanel\": {\r\n        \"visible\": true\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"height\": \"300\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\",\r\n        \"rowRenderingMode\": \"virtual\"\r\n    },\r\n    \"columnMinWidth\": \"100\",\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"JobName\",\r\n            \"caption\": \"Job\",\r\n            \"width\": 300,\r\n            \"visibleIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"StartDate\",\r\n            \"caption\": \"Start\",\r\n            \"alignment\": \"center\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM\",\r\n            \"width\": 100,\r\n            \"visibleIndex\": 1\r\n        },\r\n        {\r\n            \"dataField\": \"EndDate\",\r\n            \"caption\": \"End\",\r\n            \"alignment\": \"center\",\r\n            \"dataType\": \"date\",\r\n            \"format\": \"d MMM\",\r\n            \"width\": 100,\r\n            \"visibleIndex\": 2\r\n        },\r\n        {\r\n            \"dataField\": \"JobClassification\",\r\n            \"caption\": \"Classification\",\r\n            \"width\": 120,\r\n            \"visibleIndex\": 3\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHours\",\r\n            \"caption\": \"Contracted\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"visibleIndex\": 4\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHours\",\r\n            \"caption\": \"Forecast\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"visibleIndex\": 5\r\n        },\r\n        {\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"visibleIndex\": 6\r\n                },\r\n                {\r\n                    \"dataField\": \"NonBillableHours\",\r\n                    \"caption\": \"Non Billable\",\r\n                    \"alignment\": \"right\",\r\n                    \"format\": \"#,##0\",\r\n                    \"visibleIndex\": 7\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecast\",\r\n            \"caption\": \"Actual + Forecast\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"visibleIndex\": 8\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentage\",\r\n            \"caption\": \"Actual Burn %\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"visibleIndex\": 9\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnPercentage\",\r\n            \"caption\": \"Actual + Forecast Burn %\",\r\n            \"alignment\": \"right\",\r\n            \"format\": \"#,##0\",\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"visibleIndex\": 9\r\n        }\r\n    ],\r\n    \"sortByGroupSummaryInfo\": [\r\n        {\r\n            \"summaryItem\": \"count\"\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === 'ActualBurn') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]) * 100;                        else                            options.totalValue = 0;                            break;                }            }            if (options.name === 'ActualForecastBurn') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecast;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]) * 100;                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"ActualForecastBurn\",\r\n                \"showInColumn\": \"Actual + Forecast Burn %\",\r\n                \"displayFormat\": \"{0}%\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualBurn\",\r\n                \"showInColumn\": \"Actual Burn %\",\r\n                \"displayFormat\": \"{0}%\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Job\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"Count: {0}\",\r\n                \"alignment\": \"left\"\r\n            },\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"alignment\": \"right\"\r\n            }\r\n        ]\r\n    }\r\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"},{"Id":"6c27c07c-4454-437b-8eaf-d71a633b978d","Name":"Division Burn","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":5,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetXPosition\":0,\"WidgetYPosition\":30,\"WidgetRows\":12,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Actual (Billable)\",\"metricFieldValue\":\"DirectHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"? Actual (Non Billable)\",\"metricFieldValue\":\"NewBusinessHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  v.*,\\r\\n                       sum(DirectHours) over (order by v.DivisionId) as DirectHoursRunningTotal,\\r\\n                       sum(DirectHours) over () as DirectHoursGrandTotal,\\r\\n                       sum(NewBusinessHours) over (order by v.DivisionId) as NewBusinessHoursRunningTotal,\\r\\n                       sum(NewBusinessHours) over () as NewBusinessHoursGrandTotal,\\r\\n                       sum(AdministrativeHours) over (order by v.DivisionId) as AdministrativeHoursRunningTotal,\\r\\n                       sum(AdministrativeHours) over () as AdministrativeHoursGrandTotal,\\r\\n                       sum(TimeOffHours) over (order by v.DivisionId) as TimeOffHoursRunningTotal,\\r\\n                       sum(TimeOffHours) over () as TimeOffHoursGrandTotal,\\r\\n                       sum(TotalHours) over () as GlobalTotalHours\\r\\n                    from\\r\\n                    (\\r\\n                       select t.DivisionId,\\r\\n                             t.Division as DivisionName,\\r\\n                             isnull(t.DirectHours, 0.0) as DirectHours,\\r\\n                             isnull(t.NewBusinessHours, 0.0) as NewBusinessHours,\\r\\n                             isnull(t.AdministrativeHours, 0.0) as AdministrativeHours,\\r\\n                             isnull(uv.TimeOffHours, 0.0) as TimeOffHours,\\r\\n                             isnull(t.[Hours], 0.0) + isnull(uv.TimeOffHours, 0.0) as TotalHours\\r\\n                       from\\r\\n                       (\\r\\n                          select di.Oid as DivisionId,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdi.[Name] as Division,\\r\\n                                sum(t.[Hours]) as [Hours],\\r\\n                                (sum(t.[Hours]) - (sum(t.NewBusinessHours) + sum(t.AdministrativeHours))) as DirectHours,\\r\\n                                sum(t.NewBusinessHours) as NewBusinessHours,\\r\\n                                sum(AdministrativeHours) as AdministrativeHours\\r\\n                          from   SkillAnalyticsTimeUtilization t, Department de, Division di\\r\\n                          where\\t 1 = 1 and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tt.DepartmentId = de.Oid and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tde.Division = di.Oid\\r\\n\\t\\t\\t\\t\\t\\t/*[ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n                          group by di.Oid,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdi.[Name]\\r\\n                       ) t\\r\\n                       left outer join \\r\\n                       (\\r\\n                          select \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdi.Oid as DivisionId,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdi.[Name] as Division,\\r\\n                                sum(uv.[Hours]) as TimeOffHours\\r\\n                          from   SkillAnalyticsLeaves uv, Department de, Division di\\r\\n\\t                      where\\t 1 = 1 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuv.DepartmentId = de.Oid and\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tde.Division = di.Oid\\r\\n                          group by di.Oid,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdi.[Name]\\r\\n                       )\\r\\n                       uv on (uv.DivisionId = t.DivisionId)\\r\\n                    ) v\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Time_Utilization_Per_Department/execute","Configuration":"{\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"DivisionName\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"DirectHours\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"DivisionName\"\n    },\n    \"size\": {\n        \"height\": 150\n    }\n}","DashboardDefinitionId":"bb2f7df5-795f-4ef1-974e-92470e6ad78b"}]}
