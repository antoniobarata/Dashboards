{
  "DashboardDefinitionRoles": [
    {
      "AccessRoleId": "9192b3d9-3b6b-469a-bcf4-01accd8ec5b4",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Administrator"
    },
    {
      "AccessRoleId": "ba424738-30fc-4359-9b1e-d5a1d6a0a989",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Group Account Director Profile"
    },
    {
      "AccessRoleId": "02f354ae-dbdc-4f27-be5d-8ad944e62ba6",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Department Lead Profile"
    },
    {
      "AccessRoleId": "d3e36f3b-993f-4b56-8664-bc616956b733",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Maintenance Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "e217ad1e-2d75-4f54-ba5d-c560ec6b4301",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "HR Profile"
    },
    {
      "AccessRoleId": "02f354ae-dbdc-4f27-be5d-8ad944e62ba6",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Department Lead Profile"
    },
    {
      "AccessRoleId": "9192b3d9-3b6b-469a-bcf4-01accd8ec5b4",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Administrator"
    },
    {
      "AccessRoleId": "9192b3d9-3b6b-469a-bcf4-01accd8ec5b4",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Administrator"
    },
    {
      "AccessRoleId": "5c2e7024-eaf4-43fa-96d3-9ad61b011657",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "c97bd32b-79cc-434f-8f24-d7356fde3c18",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Support Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "d3e36f3b-993f-4b56-8664-bc616956b733",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Maintenance Profile"
    },
    {
      "AccessRoleId": "9192b3d9-3b6b-469a-bcf4-01accd8ec5b4",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Administrator"
    },
    {
      "AccessRoleId": "ba424738-30fc-4359-9b1e-d5a1d6a0a989",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Group Account Director Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "5c2e7024-eaf4-43fa-96d3-9ad61b011657",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Profile"
    },
    {
      "AccessRoleId": "5c2e7024-eaf4-43fa-96d3-9ad61b011657",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Profile"
    },
    {
      "AccessRoleId": "c97bd32b-79cc-434f-8f24-d7356fde3c18",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Support Profile"
    },
    {
      "AccessRoleId": "d3e36f3b-993f-4b56-8664-bc616956b733",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Maintenance Profile"
    },
    {
      "AccessRoleId": "4a6dc5d0-7bc1-4501-9cf3-e49288a8e5f1",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Confidential Profile"
    },
    {
      "AccessRoleId": "4a6dc5d0-7bc1-4501-9cf3-e49288a8e5f1",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Confidential Profile"
    },
    {
      "AccessRoleId": "5c2e7024-eaf4-43fa-96d3-9ad61b011657",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Finance Profile"
    },
    {
      "AccessRoleId": "e217ad1e-2d75-4f54-ba5d-c560ec6b4301",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "HR Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "adebf70c-0dab-41d1-8ee8-e78bcc9b09f7",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Account Profile"
    },
    {
      "AccessRoleId": "d3e36f3b-993f-4b56-8664-bc616956b733",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
      "AccessRoleName": "Maintenance Profile"
    }
  ],
  "Id": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda",
  "Name": "Burn - Project",
  "Active": true,
  "Location": 1,
  "DocumentId": "8055b90e-69d2-4346-a378-5b8f21d5ec7b",
  "DocumentName": "Project",
  "DocumentTypeName": null,
  "DocumentsConfiguration": "[{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false},\"fields\":[]}]",
  "Templates": [

  ],
  "DashboardDefinitionComponents": [
    {
      "Id": "5d6d330e-3f4d-4a92-abfb-06052c8239fa",
      "Name": "Time Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Contracted vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":18,\"WidgetRows\":16,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedTime\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with Contracted as (\\r\\n\\tselect \\r\\n\\t\\tsum(pht.ContractedMinutes) / 60.0 as ContractedTime\\r\\n\\tfrom \\r\\n\\t\\tPlannedHoursTotal pht\\r\\n\\twhere\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tand pht.Project = @ProjectId\\r\\n)\\r\\nselect\\r\\n\\tv.Project,\\r\\n\\tv.MonthYear,\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(sum(v.ActualTime)) over (order by v.YearMonth) as ActualTimeRunningTotal,\\r\\n\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\tc.ContractedTime as ContractedTime\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.ProjectId as Project,\\r\\n\\t\\tconcat(format(v.[Month], '0#'), '/', v.[Year]) as MonthYear,\\r\\n\\t\\tconcat(v.[Year], v.[Month]) as YearMonth,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\twhere \\r\\n\\t\\tv.ProjectId = @ProjectId\\r\\n\\tgroup by\\r\\n\\t\\tv.ProjectId,\\r\\n\\t\\tv.[Year],\\r\\n\\t\\tv.[Month]\\r\\n) v, Contracted c\\r\\ngroup by\\r\\n\\tv.Project,\\r\\n\\tv.MonthYear,\\r\\n\\tv.YearMonth,\\r\\n\\tc.ContractedTime\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 250\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"MonthYear\",\n        \"ignoreEmptyPoints\": false\n    },\n    \"panes\": [\n        {\n            \"name\": \"accumulated\"\n        },\n        {\n            \"name\": \"monthly\"\n        }\n    ],\n    \"series\": [\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\"\n        },\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"point\": {\n                \"size\": 6\n            }\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"# Contracted Time\"\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualTimeRunningTotal\",\n            \"name\": \"# Actual Time\",\n            \"point\": {\n                \"size\": 6\n            }\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"monthly\",\n            \"position\": \"left\"\n        },\n        {\n            \"name\": \"accumulated\",\n            \"position\": \"left\"\n        }\n    ],\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "edf3b74f-201a-4f08-b9f1-095ccf8b7e5b",
      "Name": "Typology Group Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Forecast vs Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":47,\"WidgetRows\":14,\"WidgetColumns\":24,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual (Billable)\",\"metricFieldValue\":\"BillableTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Actual (Non Billable)\",\"metricFieldValue\":\"NonBillableTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select\\r\\n\\tv.UserTypologyGroupId,\\r\\n\\tv.UserTypologyGroupName,\\r\\n\\tv.MonthYear,\\r\\n\\tv.ActualTime,\\r\\n\\tv.ActualTimeGrandTotal,\\r\\n    v.BillableTimeGrandTotal,\\r\\n    v.NonBillableTimeGrandTotal,\\r\\n\\tv.ContractedTime,\\r\\n\\tv.ContractedTimeGrandTotal\\r\\nfrom (\\r\\n\\tselect\\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tconcat(format(v.[Month], '0#'), '/', v.[Year]) as MonthYear,\\r\\n\\t\\tIsNull(utg.[Name], 'Without typology') as UserTypologyGroupName,\\r\\n\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\tsum(sum(v.ActualTime)) over () as ActualTimeGrandTotal,\\r\\n\\t\\tsum(sum(v.BillableTime)) over () as BillableTimeGrandTotal,\\r\\n\\t\\tsum(sum(v.NonBillableTime)) over () as NonBillableTimeGrandTotal,\\r\\n\\t\\tsum(v.ContractedTime) as ContractedTime,\\r\\n\\t\\tsum(sum(v.ContractedTime)) over () as ContractedTimeGrandTotal\\r\\n\\tfrom (\\r\\n\\t\\tselect \\r\\n\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\tv.[Month] as [Month],\\r\\n\\t\\t\\tv.[Year] as [Year],\\r\\n\\t\\t\\tsum(v.ActualTime) as ActualTime,\\r\\n\\t\\t\\tsum(v.BillableTime) as BillableTime,\\r\\n\\t\\t\\tsum(v.NewBusinessTime) as NonBillableTime,\\r\\n\\t\\t\\t0 as ContractedTime\\r\\n\\t\\tfrom \\r\\n\\t\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\twhere \\r\\n\\t\\t\\tv.ProjectId = @ProjectId\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\tv.[Month],\\r\\n\\t\\t\\tv.[Year]\\r\\n\\t\\tunion\\r\\n\\t\\tselect \\r\\n\\t\\t\\tpht.UserTypologyGroup as UserTypologyGroupId,\\r\\n\\t\\t\\t0 as [Month],\\r\\n\\t\\t\\t0 as [Year],\\r\\n\\t\\t\\t0 as ActualTime,\\r\\n\\t\\t\\t0 as BillableTime,\\r\\n\\t\\t\\t0 as NonBillableTime,\\r\\n\\t\\t\\tsum(pht.GlobalContractedMinutes) / 60.0  as ContractedTime\\r\\n\\t\\tfrom\\r\\n\\t\\t\\tPlannedHoursTotal pht\\r\\n\\t\\twhere \\r\\n\\t\\t\\tpht.Project = @ProjectId and\\r\\n\\t\\t\\tpht.GCRecord is null\\r\\n\\t\\tgroup by\\r\\n\\t\\t\\tpht.UserTypologyGroup\\r\\n\\t) v left outer join UserTypologyGroup utg on utg.Oid = v.UserTypologyGroupId\\r\\n\\tgroup by\\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tutg.[Name],\\r\\n\\t\\tv.[Month],\\r\\n\\t\\tv.[Year]\\r\\n) v\\r\\nwhere\\r\\n\\tv.MonthYear != '00/0'\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Typology_Group_Per_Year_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 200\n    },\n    \"commonSeriesSettings\": {\n        \"ignoreEmptyPoints\": false,\n        \"argumentField\": \"MonthYear\",\n        \"valueField\": \"ActualTime\",\n        \"type\": \"line\",\n        \"point\": {\n            \"size\": 6\n        },\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"commonAxisSettings\": {\n        \"grid\": {\n            \"visible\": true\n        },\n        \"discreteAxisDivisionMode\": \"crossLabels\"\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"UserTypologyGroupName\"\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "4029cc07-9a59-4763-84e4-2d0ff682eaf4",
      "Name": "Utilization per Job",
      "Active": true,
      "UseQuery": false,
      "Query": "",
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Billable and Non-Billable Actual Hours per Job\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":18,\"WidgetColumns\":48,\"WidgetHeader\":{\"showTitle\":true,\"showSubTitle\":true,\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[]},\"WidgetPeriodChooser\":{\"visible\":false,\"type\":\"\",\"startDate\":null,\"endDate\":null}},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with GetRate as (\\r\\n\\tselect \\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User],\\r\\n\\t\\tMax(pht.SellRate) as Rate\\r\\n\\tfrom\\r\\n\\t\\tPlannedHoursTotal pht\\r\\n    where  \\r\\n        pht.GCRecord is null\\r\\n\\tgroup by\\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User]\\r\\n)\\r\\nselect \\r\\n\\tv.JobId,\\r\\n\\tIsNull(v.JobName, 'Project Level') as JobName,\\r\\n\\tv.JobType,\\r\\n\\tv.ContractedHours,\\r\\n\\tIIF(n.RoleId is not null, v.ContractedHoursIncome, null) as ContractedHoursIncome,\\r\\n\\tv.PlannedHours,\\r\\n\\tIIF(n.RoleId is not null, v.PlannedHoursIncome, null) as PlannedHoursIncome,\\r\\n\\tv.ForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ForecastHoursIncome, null) as ForecastHoursIncome,\\r\\n\\tv.ActualHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualHoursIncome, null) as ActualHoursIncome,\\r\\n\\tv.BillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.BillableHoursIncome, null) as BillableHoursIncome,\\r\\n\\tv.NonBillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.NonBillableHoursIncome, null) as NonBillableHoursIncome,\\r\\n\\tv.ActualPlusForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastIncome, null) as ActualPlusForecastIncome,\\r\\n\\tv.ActualBurnPercentageHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualBurnPercentageIncome, null) as ActualBurnPercentageIncome,\\r\\n\\tv.ActualPlusForecastBurnPercentage,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastBurnIncome, null) as ActualPlusForecastBurnIncome\\r\\nfrom (\\r\\n\\tselect\\r\\n\\t\\t\\tv.JobId as JobId,\\r\\n\\t\\t\\td.[NameAndExternalId] as JobName,\\r\\n\\t\\t\\tjt.[Name] as JobType,\\r\\n\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\tsum(v.ForecastHoursIncome) as ForecastHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\tsum(v.NonBillableHoursIncome) as NonBillableHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) + sum(v.ForecastHours) as ActualPlusForecastHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome) as ActualPlusForecastIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) > 0, sum(v.ActualHours) / sum(v.ContractedHours), 0) as ActualBurnPercentageHours,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) > 0, sum(v.ActualHoursIncome) / sum(v.ContractedHoursIncome), 0) as ActualBurnPercentageIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) > 0, (sum(v.ActualHours) + sum(v.ForecastHours)) / sum(v.ContractedHours), 0) as ActualPlusForecastBurnPercentage,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) > 0, (sum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome)) / sum(v.ContractedHoursIncome), 0) as ActualPlusForecastBurnIncome\\r\\n\\t\\tfrom (\\r\\n\\t\\t\\tselect\\r\\n\\t\\t\\t\\tv.JobId,\\r\\n\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\t\\tsum(v.ForecastHoursIncome) as ForecastHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHoursIncome) as NonBillableHoursIncome\\r\\n\\t\\t\\tfrom (\\r\\n\\t\\t\\t\\t\\tselect \\r\\n\\t\\t\\t\\t\\t\\tpht.Job as JobId,\\r\\n\\t\\t\\t\\t\\t\\tpht.UserTypologyGroup as UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tpht.[User] as UserId,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pht.ContractedMinutes, 0)) / 60.0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t(sum(isnull(pht.ContractedMinutes, 0)) / 60.0) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pht.PlannedMinutes, 0)) / 60.0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t(sum(isnull(pht.PlannedMinutes, 0)) / 60.0) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom \\r\\n\\t\\t\\t\\t\\t\\tPlannedHoursTotal pht\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = pht.Project and gru.[User] = pht.[User])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project = pht.Project and grut.[UserTypologyGroup] = pht.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\t\\tpht.GCRecord is null and\\r\\n\\t\\t\\t\\t\\t\\tpht.Project = @ProjectId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tpht.Job,\\r\\n\\t\\t\\t\\t\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tpht.[User],\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\t\\tpha.JobId,\\r\\n\\t\\t\\t\\t\\t\\tpha.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tpha.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pha.[Hours], 0)) as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(isnull(pha.[Hours], 0)) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom\\r\\n\\t\\t\\t\\t\\t\\tAnalytics.DatamartPlannedHours pha\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = pha.ProjectId and gru.[User] = pha.[UserId])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project = pha.ProjectId and grut.[UserTypologyGroup] = pha.UserTypologyGroupId)\\r\\n\\t\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\t\\tpha.[Year] >= Year(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\t\\t\\t\\tpha.[Month] >= Month(CURRENT_TIMESTAMP) and\\r\\n\\t\\t\\t\\t\\t\\tpha.ProjectId = @ProjectId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tpha.JobId,\\r\\n\\t\\t\\t\\t\\t\\tpha.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tpha.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\t\\tv.JobId,\\r\\n\\t\\t\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ContractedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as PlannedHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t\\t0 as ForecastHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.ActualTime) as ActualHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.ActualTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ActualHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.BillableTime) as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.BillableTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as BillableHoursIncome,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.NewBusinessTime) as NonBillableHours,\\r\\n\\t\\t\\t\\t\\t\\tsum(v.NewBusinessTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as NonBillableHoursIncome\\r\\n\\t\\t\\t\\t\\tfrom \\r\\n\\t\\t\\t\\t\\t\\tAnalytics.DatamartTimesheet v\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate gru on (gru.Project = v.ProjectId and gru.[User] = v.[UserId])\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join GetRate grut on (grut.Project  = v.ProjectId and grut.[UserTypologyGroup] = v.UserTypologyGroupId)\\r\\n\\t\\t\\t\\t\\twhere \\r\\n\\t\\t\\t\\t\\t\\tv.ProjectId = @ProjectId\\r\\n\\t\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\t\\tv.JobId,\\r\\n\\t\\t\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\t\\t\\tv.[UserId],\\r\\n\\t\\t\\t\\t\\t\\tgru.Rate,\\r\\n\\t\\t\\t\\t\\t\\tgrut.Rate\\r\\n\\t\\t\\t) v\\r\\n\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\tv.JobId,\\r\\n\\t\\t\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\t\\t\\tv.[UserId]\\r\\n\\t\\t) v\\r\\n\\t\\t\\tleft outer join Deliverable d on d.Oid = v.JobId\\r\\n\\t\\t\\tleft outer join JobType jt on jt.Oid = d.JobType\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\tv.JobId,\\r\\n\\t\\t\\td.[NameAndExternalId],\\r\\n\\t\\t\\tjt.[Name]\\r\\n) v\\r\\nleft outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = 'DeliverablesSellRead')\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "",
      "Configuration": "{\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"filterRow\": {\r\n        \"visible\": true\r\n    },\r\n    \"height\": \"400\",\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": false,\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"columnMinWidth\": \"100\",\r\n    \"filterPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"JobName\",\r\n            \"caption\": \"Job\",\r\n            \"width\": 250,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"JobId\",\r\n            \"caption\": \"JobId\",\r\n            \"width\": 400,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"JobType\",\r\n            \"caption\": \"Job Type\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHours\",\r\n            \"caption\": \"Contracted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHoursIncome\",\r\n            \"caption\": \"Contracted $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHours\",\r\n            \"caption\": \"Forecasted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"alignment\": \"right\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHoursIncome\",\r\n            \"caption\": \"Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedHours\",\r\n            \"caption\": \"Planned\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 100,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHours\",\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                },\r\n                {\r\n                    \"dataField\": \"BillableHoursIncome\",\r\n                    \"caption\": \"Billable $\",\r\n                    \"dataType\": \"number\",\r\n                    \"format\": {\r\n                        \"type\": \"currency\",\r\n                        \"precision\": 2\r\n                    },\r\n                    \"displayFormat\": \"{0}\",\r\n                    \"allowGrouping\": false,\r\n                    \"width\": 125\r\n                },\r\n                {\r\n                    \"dataField\": \"NonBillableHours\",\r\n                    \"caption\": \"Non Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHoursIncome\",\r\n            \"caption\": \"Actual $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"visible\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastHours\",\r\n            \"caption\": \"Actual + Forecast\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastIncome\",\r\n            \"caption\": \"Actual + Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageHours\",\r\n            \"caption\": \"Actual Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageIncome\",\r\n            \"caption\": \"Actual Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                if(i.data.ActualBurnPercentageIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true);                }            }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnPercentage\",\r\n            \"caption\": \"Actual + Forecast Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedContractedPercentage\",\r\n            \"caption\": \"Planned Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnIncome\",\r\n            \"caption\": \"Actual + Forecast Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                 if(i.data.ActualPlusForecastBurnIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true);                 }                   }\",\r\n            \"visible\": false\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === 'ActualBurnHours') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                            break;                }            }                    if (options.name === 'ActualPlusForecastBurnHours') {                switch(options.summaryProcess) {                    case 'start':                    options.totalValue = [0,0];                        break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                    options.totalValue = 0;                            break;                }            }            if (options.name === 'PlannedBurn') {                        switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                        case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.PlannedHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }                        if (options.name === 'ActualPlusForecastBurnIncome') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }            if (options.name === 'ActualBurnIncome') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"ActualBurnIncome\",\r\n                \"showInColumn\": \"Actual Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnIncome\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"PlannedBurn\",\r\n                \"showInColumn\": \"Planned Burn %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnHours\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualBurnHours\",\r\n                \"showInColumn\": \"Actual Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"ProjectName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"All Projects\"\r\n            },\r\n            {\r\n                \"column\": \"ActualTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Planned\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecasted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedRevenue\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedActualIncomeVariation\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            }\r\n        ]\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": \"true\"\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    }\r\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "e90fda0d-0863-4c9d-82aa-7416a4f456e6",
      "Name": "User Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 7,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Actual Time\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 24,\r\n        \"WidgetYPosition\": 47,\r\n        \"WidgetRows\": 14,\r\n        \"WidgetColumns\": 24,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Billable\",\r\n                        \"metricFieldValue\": \"BillableTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Non Billable\",\r\n                        \"metricFieldValue\": \"NonBillableTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\tv.UserId,\\r\\n\\tv.[User],\\r\\n\\tsum(v.ActualTime) as ActualTime,\\r\\n\\tsum(v.BillableTime) as BillableTime,\\r\\n\\tsum(sum(v.BillableTime)) over () as BillableTimeGrandTotal,\\r\\n\\tsum(v.NewBusinessTime) as NonBillableTime,\\r\\n\\tsum(sum(v.NewBusinessTime)) over () as NonBillableTimeGrandTotal\\r\\nfrom \\r\\n\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\nwhere \\r\\n\\tv.ProjectId = @ProjectId\\r\\ngroup by\\r\\n\\tv.UserId,\\r\\n\\tv.[User]\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_User/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"User\",\n        \"type\": \"bar\",\n        \"ignoreEmptyPoints\": true,\n        \"valueField\": \"ActualTime\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"seriesTemplate\": {\n        \"nameField\": \"User\"\n    },\n    \"size\": {\n        \"height\": 200\n    },\n    \"palette\": [\n        \"#da5859\",\n        \"#f09777\",\n        \"#a5d7d0\",\n        \"#fbc987\",\n        \"#a5bdd7\",\n        \"#e97c82\",\n        \"#81d4fa\",\n        \"#c5e1a5\",\n        \"#ce93d8\",\n        \"#fff59d\"\n    ],\n    \"legend\": {\n        \"visible\": false\n    },\n    \"tooltip\": {\n        \"enabled\": true,\n        \"customizeTooltip\": \"function(e){  \\n\\t\\treturn {     \\n\\t\\t\\t'text': '<span style=\\\"font-size: 14px; color: #808080;\\\">' +  e.argumentText + '</span><br/><span style=\\\"color: '+ e.point.getColor() +'\\\">' +  Math.round(Math.abs(e.value)*100)/100 + '</span>'    \\n\\t\\t};   }\"\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "30e1b91a-7762-4b38-b673-a4d35fa7164c",
      "Name": "Department Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 5,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Actual Time\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 24,\r\n        \"WidgetYPosition\": 34,\r\n        \"WidgetRows\": 13,\r\n        \"WidgetColumns\": 24,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Billable\",\r\n                        \"metricFieldValue\": \"BillableTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Non Billable\",\r\n                        \"metricFieldValue\": \"NonBillableTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\tv.Department as DepartmentName,\\r\\n\\tsum(v.BillableTime) as BillableTime,\\r\\n\\tsum(sum(v.BillableTime)) over () as BillableTimeGrandTotal,\\r\\n\\tsum(v.NewBusinessTime) as NonBillableTime,\\r\\n\\tsum(sum(v.NewBusinessTime)) over () as NonBillableTimeGrandTotal\\r\\nfrom \\r\\n\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\nwhere\\r\\n\\tv.ProjectId = @ProjectId\\r\\ngroup by\\r\\n\\tv.Department\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_Department/execute",
      "Configuration": "{\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"DepartmentName\",\n        \"type\": \"stackedBar\",\n        \"ignoreEmptyPoints\": true\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non Billable\"\n        }\n    ],\n    \"size\": {\n        \"height\": 200\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "b8c89b0e-361a-4617-a0ae-bc280ac28b50",
      "Name": "Revenue Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 3,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Planned Revenue vs Actual Cost\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 24,\r\n        \"WidgetYPosition\": 18,\r\n        \"WidgetRows\": 16,\r\n        \"WidgetColumns\": 24,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Revenue\",\r\n                        \"metricFieldValue\": \"PlannedSellGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Cost\",\r\n                        \"metricFieldValue\": \"ActualCostGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"with GetRate as (\\r\\n\\tselect \\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User],\\r\\n\\t\\tMax(pht.SellRate) as Rate\\r\\n\\tfrom\\r\\n\\t\\tPlannedHoursTotal pht\\r\\n\\twhere\\r\\n\\t\\tpht.Project is not null and pht.GCRecord is null\\r\\n\\tgroup by\\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\tpht.[User]\\r\\n)\\r\\nselect\\r\\n\\tv.Project,\\r\\n\\tv.MonthYear,\\r\\n\\tsum(v.ActualCost) as ActualCost,\\r\\n\\tsum(sum(v.ActualCost)) over (order by v.YearMonth) as ActualCostRunningTotal,\\r\\n\\tsum(sum(v.ActualCost)) over () as ActualCostGrandTotal,\\r\\n\\tsum(v.PlannedCost) as PlannedSell,\\r\\n\\tsum(sum(v.PlannedCost)) over (order by v.YearMonth) as PlannedSellRunningTotal,\\r\\n\\tsum(sum(v.PlannedCost)) over () as PlannedSellGrandTotal\\r\\nfrom (\\r\\n\\tselect \\r\\n\\t\\tv.Project,\\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tv.UserId,\\r\\n\\t\\tconcat(format(v.[Month], '0#'), '/', v.[Year]) as MonthYear,\\r\\n\\t\\tconcat(v.[Year], v.[Month]) as YearMonth,\\r\\n\\t\\tsum(v.ActualTime) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as ActualCost,\\r\\n\\t\\t0 as PlannedCost\\r\\n\\tfrom \\r\\n\\t\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\n\\t\\t\\tleft outer join GetRate gru on (gru.Project = v.ProjectId and gru.[User] = v.[UserId])\\r\\n\\t\\t\\tleft outer join GetRate grut on (grut.Project = v.ProjectId and grut.[UserTypologyGroup] = v.UserTypologyGroupId)\\r\\n\\twhere \\r\\n\\t\\tv.ProjectId = @ProjectId\\r\\n\\tgroup by\\r\\n\\t\\tv.Project,\\r\\n\\t\\tv.UserTypologyGroupId,\\r\\n\\t\\tv.UserId,\\r\\n\\t\\tv.[Year],\\r\\n\\t\\tv.[Month],\\r\\n\\t\\tgru.Rate,\\r\\n\\t\\tgrut.Rate\\r\\n\\tunion\\r\\n\\tselect \\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroupId,\\r\\n\\t\\tpht.UserId,\\r\\n\\t\\tconcat(format(Month(pht.ModifiedOn), '0#'), '/', Year(pht.ModifiedOn)) as MonthYear,\\r\\n\\t\\tconcat(Year(pht.ModifiedOn), Month(pht.ModifiedOn)) as YearMonth,\\r\\n\\t\\t0 as ActualTime,\\r\\n\\t\\tsum(pht.[Hours]) * IsNull(gru.Rate, IsNull(grut.Rate, 0)) as PlannedCost\\r\\n\\tfrom\\r\\n\\t\\tAnalytics.PlannedHoursTotal(@CurrentUserId) pht\\r\\n\\t\\t\\tleft outer join GetRate gru on (gru.Project = pht.ProjectId and gru.[User] = pht.[UserId])\\r\\n\\t\\t\\tleft outer join GetRate grut on (grut.Project = pht.ProjectId and grut.[UserTypologyGroup] = pht.UserTypologyGroupId)\\r\\n\\twhere \\r\\n\\t\\tpht.ProjectId = @ProjectId\\r\\n\\tgroup by\\r\\n\\t\\tpht.Project,\\r\\n\\t\\tpht.UserTypologyGroupId,\\r\\n\\t\\tpht.UserId,\\r\\n\\t\\tpht.ModifiedOn,\\r\\n\\t\\tgru.Rate,\\r\\n\\t\\tgrut.Rate\\r\\n) v\\r\\ngroup by\\r\\n\\tv.Project,\\r\\n\\tv.MonthYear,\\r\\n\\tv.YearMonth\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"projectId\"\r\n            ]\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 250\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"MonthYear\",\n        \"ignoreEmptyPoints\": false\n    },\n    \"panes\": [\n        {\n            \"name\": \"accumulated\"\n        },\n        {\n            \"name\": \"monthly\"\n        }\n    ],\n    \"series\": [\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"area\",\n            \"valueField\": \"PlannedSell\",\n            \"name\": \"Planned Revenue\"\n        },\n        {\n            \"pane\": \"monthly\",\n            \"axis\": \"monthly\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualCost\",\n            \"name\": \"Actual Cost\",\n            \"point\": {\n                \"size\": 6\n            }\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"area\",\n            \"valueField\": \"PlannedSellRunningTotal\",\n            \"name\": \"# Planned Revenue\"\n        },\n        {\n            \"pane\": \"accumulated\",\n            \"axis\": \"accumulated\",\n            \"type\": \"line\",\n            \"valueField\": \"ActualCostRunningTotal\",\n            \"name\": \"# Actual Cost\",\n            \"point\": {\n                \"size\": 6\n            }\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"monthly\",\n            \"position\": \"left\"\n        },\n        {\n            \"name\": \"accumulated\",\n            \"position\": \"left\"\n        }\n    ],\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    },
    {
      "Id": "ab464dda-2e95-46b2-bc14-eb9433833736",
      "Name": "Division Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 6,
      "Order": 4,
      "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Actual Time\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetFrameStyle\": {},\r\n        \"WidgetXPosition\": 0,\r\n        \"WidgetYPosition\": 34,\r\n        \"WidgetRows\": 13,\r\n        \"WidgetColumns\": 24,\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Billable\",\r\n                        \"metricFieldValue\": \"BillableTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"Total Non Billable\",\r\n                        \"metricFieldValue\": \"NonBillableTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"querytext\",\r\n                \"value\": \"select \\r\\n\\tv.Division as DivisionName,\\r\\n\\tsum(v.BillableTime) as BillableTime,\\r\\n\\tsum(sum(v.BillableTime)) over () as BillableTimeGrandTotal,\\r\\n\\tsum(v.NewBusinessTime) as NonBillableTime,\\r\\n\\tsum(sum(v.NewBusinessTime)) over () as NonBillableTimeGrandTotal\\r\\nfrom \\r\\n\\tAnalytics.Timesheet(@CurrentUserId) v\\r\\nwhere\\r\\n\\tv.ProjectId = @ProjectId\\r\\ngroup by\\r\\n\\tv.Division\"\r\n            }\r\n        },\r\n        \"Filters\": {},\r\n        \"QueryConfiguration\": {\r\n            \"PreviousPeriod\": {\r\n                \"Show\": false,\r\n                \"KeyFieldName\": \"\",\r\n                \"Type\": 0\r\n            },\r\n            \"RequiredFilters\": []\r\n        }\r\n    }\r\n]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Time_Utilization_Per_Department/execute",
      "Configuration": "{\n    \"rotated\": true,\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"DivisionName\",\n        \"type\": \"stackedBar\",\n        \"ignoreEmptyPoints\": true\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"visible\": true\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non Billable\"\n        }\n    ],\n    \"size\": {\n        \"height\": 200\n    }\n}",
      "DashboardDefinitionId": "f8fbeb8c-7c46-4829-9b05-ca7ee4520cda"
    }
  ],
  "QueryText": null,
  "UseStore": false,
  "StoreEntity": null,
  "Version": 13,
  "Default": true
}
