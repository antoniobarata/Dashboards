{"DashboardDefinitionRoles":[{"AccessRoleId":"5c2e7024-eaf4-43fa-96d3-9ad61b011657","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Finance Profile"},{"AccessRoleId":"d3e36f3b-993f-4b56-8664-bc616956b733","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Maintenance Profile"},{"AccessRoleId":"adebf70c-0dab-41d1-8ee8-e78bcc9b09f7","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Account Profile"},{"AccessRoleId":"d3e36f3b-993f-4b56-8664-bc616956b733","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Maintenance Profile"},{"AccessRoleId":"9192b3d9-3b6b-469a-bcf4-01accd8ec5b4","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Administrator"},{"AccessRoleId":"d3e36f3b-993f-4b56-8664-bc616956b733","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Maintenance Profile"},{"AccessRoleId":"adebf70c-0dab-41d1-8ee8-e78bcc9b09f7","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Account Profile"},{"AccessRoleId":"9192b3d9-3b6b-469a-bcf4-01accd8ec5b4","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Administrator"},{"AccessRoleId":"9192b3d9-3b6b-469a-bcf4-01accd8ec5b4","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Administrator"},{"AccessRoleId":"d3e36f3b-993f-4b56-8664-bc616956b733","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Maintenance Profile"},{"AccessRoleId":"adebf70c-0dab-41d1-8ee8-e78bcc9b09f7","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Account Profile"},{"AccessRoleId":"5c2e7024-eaf4-43fa-96d3-9ad61b011657","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Finance Profile"},{"AccessRoleId":"5c2e7024-eaf4-43fa-96d3-9ad61b011657","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Finance Profile"},{"AccessRoleId":"9192b3d9-3b6b-469a-bcf4-01accd8ec5b4","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Administrator"},{"AccessRoleId":"adebf70c-0dab-41d1-8ee8-e78bcc9b09f7","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Account Profile"},{"AccessRoleId":"5c2e7024-eaf4-43fa-96d3-9ad61b011657","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","AccessRoleName":"Finance Profile"}],"Id":"dddd00f6-f9d1-4280-97e9-572445cb1fb0","Name":"Burn per Role - Project","Active":true,"Location":1,"DocumentId":"00000000-0000-0000-0000-000000000000","DocumentName":"","DocumentTypeName":"project","DocumentsConfiguration":"{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}","Templates":[],"DashboardDefinitionComponents":[{"Id":"03b6b47d-b17b-49c3-8672-09cac27be500","Name":"Summary","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":1,"Parameters":"[{\"WidgetSubTitle\":\"Time per Department and Typology Group\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":17,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ForecastHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"% Burn\",\"metricFieldValue\":\"ActualContractedPercentageGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select \\r\\n\\tv.DepartmentId,\\r\\n\\tv.DepartmentName,\\r\\n\\tv.UserTypologyGroupId,\\r\\n\\tv.UserTypologyGroup,\\r\\n\\tv.UserId,\\r\\n\\tv.UserName,\\r\\n\\tv.ContractedHours,\\r\\n\\tIIF(n.RoleId is not null, v.ContractedHoursIncome, null) as ContractedHoursIncome,\\r\\n\\tv.PlannedHours,\\r\\n\\tIIF(n.RoleId is not null, v.PlannedHoursIncome, null) as PlannedHoursIncome,\\r\\n\\tv.ForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ForecastHoursIncome, null) as ForecastHoursIncome,\\r\\n\\tv.ActualHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualHoursIncome, null) as ActualHoursIncome,\\r\\n\\tv.BillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.BillableHoursIncome, null) as BillableHoursIncome,\\r\\n\\tv.NonBillableHours,\\r\\n\\tIIF(n.RoleId is not null, v.NonBillableHoursIncome, null) as NonBillableHoursIncome,\\r\\n\\tv.ActualPlusForecastHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastIncome, null) as ActualPlusForecastIncome,\\r\\n\\tv.ActualBurnPercentageHours,\\r\\n\\tIIF(n.RoleId is not null, v.ActualBurnPercentageIncome, null) as ActualBurnPercentageIncome,\\r\\n\\tv.ActualPlusForecastBurnPercentage,\\r\\n\\tIIF(n.RoleId is not null, v.ActualPlusForecastBurnIncome, null) as ActualPlusForecastBurnIncome,\\r\\n\\tv.BillableHoursGrandTotal,\\r\\n\\tv.ForecastHoursGrandTotal,\\r\\n\\tv.ContractedHoursGrandTotal,\\r\\n\\tv.ActualContractedPercentageGrandTotal\\r\\nfrom (\\r\\n\\tselect\\r\\n\\t\\t\\tv.Department as DepartmentId,\\r\\n\\t\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t\\tv.UserTypologyGroup as UserTypologyGroupId,\\r\\n\\t\\t\\tutg.[Name] as UserTypologyGroup,\\r\\n\\t\\t\\tv.[User] as UserId,\\r\\n\\t\\t\\tu.[Name] as UserName,\\r\\n\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\tsum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\tsum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\tsum(v.ForecastHoursIncome) as ForecastHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\tsum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\tsum(v.NonBillableHoursIncome) as NonBillableHoursIncome,\\r\\n\\t\\t\\tsum(v.ActualHours) + sum(v.ForecastHours) as ActualPlusForecastHours,\\r\\n\\t\\t\\tsum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome) as ActualPlusForecastIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) > 0, sum(v.ActualHours) / sum(v.ContractedHours), 0) as ActualBurnPercentageHours,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) > 0, sum(v.ActualHoursIncome) / sum(v.ContractedHoursIncome), 0) as ActualBurnPercentageIncome,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHours) > 0, (sum(v.ActualHours) + sum(v.ForecastHours)) / sum(v.ContractedHours), 0) as ActualPlusForecastBurnPercentage,\\r\\n\\t\\t\\tIIF(sum(v.ContractedHoursIncome) > 0, (sum(v.ActualHoursIncome) + sum(v.ForecastHoursIncome)) / sum(v.ContractedHoursIncome), 0) as ActualPlusForecastBurnIncome,\\r\\n\\t\\t\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n\\t\\t\\tsum(sum(v.ForecastHours)) OVER () as ForecastHoursGrandTotal,\\r\\n\\t\\t\\tsum(sum(v.ContractedHours)) OVER () as ContractedHoursGrandTotal,\\r\\n\\t\\t\\tIIF(sum(sum(v.[ContractedHours])) OVER () > 0, sum(sum(v.[BillableHours])) OVER () / sum(sum(v.[ContractedHours])) OVER (), 0.0) * 100 as ActualContractedPercentageGrandTotal\\r\\n\\t\\tfrom (\\r\\n\\t\\t\\tselect\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.UserTypologyGroup,\\r\\n\\t\\t\\t\\tv.[User],\\r\\n\\t\\t\\t\\tsum(v.[Rate]) as Rate,\\r\\n\\t\\t\\t\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\t\\t\\t\\tsum(v.ContractedHours) * sum(v.Rate) as ContractedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\t\\t\\t\\tsum(v.PlannedHours) * sum(v.Rate) as PlannedHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ForecastHours) as ForecastHours,\\r\\n\\t\\t\\t\\tsum(v.ForecastHours) * sum(v.Rate) as ForecastHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.ActualHours) as ActualHours,\\r\\n\\t\\t\\t\\tsum(v.ActualHours) * sum(v.Rate) as ActualHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.BillableHours) as BillableHours,\\r\\n\\t\\t\\t\\tsum(v.BillableHours) * sum(v.Rate) as BillableHoursIncome,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHours) as NonBillableHours,\\r\\n\\t\\t\\t\\tsum(v.NonBillableHours) * sum(v.Rate) as NonBillableHoursIncome\\r\\n\\t\\t\\tfrom (\\r\\n\\t\\t\\t\\tselect \\r\\n\\t\\t\\t\\t\\tIsNull(pht.Department, IsNull(u.Department, ut.Department)) as Department,\\r\\n\\t\\t\\t\\t\\tIsNull(pht.UserTypologyGroup, utg.Oid) as UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tpht.[User],\\r\\n\\t\\t\\t\\t\\tMax(isnull(pht.SellRate, 0)) as Rate,\\r\\n\\t\\t\\t\\t\\tsum(isnull(pht.ContractedMinutes, 0)) / 60.0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\tsum(isnull(pht.PlannedMinutes, 0)) / 60.0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t0 as NonBillableHours\\r\\n\\t\\t\\t\\tfrom \\r\\n\\t\\t\\t\\t\\tPlannedHoursTotal pht\\r\\n\\t\\t\\t\\t\\t\\tleft outer join Project p on p.Oid = pht.Project\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [User] u on u.Oid = pht.[User]\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [UserTypology] ut on ut.Oid = u.Typology\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [UserTypologyGroup] utg on utg.Oid = ut.UserTypologyGroup\\r\\n\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\tp.Oid = @ProjectId\\r\\n\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\tpht.Department,\\r\\n\\t\\t\\t\\t\\tu.Department,\\r\\n\\t\\t\\t\\t\\tut.Department,\\r\\n\\t\\t\\t\\t\\tpht.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tutg.Oid,\\r\\n\\t\\t\\t\\t\\tpht.[User]\\r\\n\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\tIsNull(u.Department, ut.Department) as Department,\\r\\n\\t\\t\\t\\t\\tIsNull(pha.UserTypologyGroup, utg.Oid) as UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tpha.[User],\\r\\n\\t\\t\\t\\t\\t0 as Rate,\\r\\n\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\tsum(isnull(pha.AdjustmentMinutes, 0)) / 60.0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\t0 as ActualHours,\\r\\n\\t\\t\\t\\t\\t0 as BillableHours,\\r\\n\\t\\t\\t\\t\\t0 as NonBillableHours\\r\\n\\t\\t\\t\\tfrom\\r\\n\\t\\t\\t\\t\\tPlannedHoursAdjustment pha\\r\\n\\t\\t\\t\\t\\t\\tleft outer join Project p on p.Oid = pha.Project\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [User] u on u.Oid = pha.[User]\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [UserTypology] ut on ut.Oid = u.Typology\\r\\n\\t\\t\\t\\t\\t\\tleft outer join [UserTypologyGroup] utg on utg.Oid = ut.UserTypologyGroup\\r\\n\\t\\t\\t\\twhere\\r\\n\\t\\t\\t\\t\\tp.Oid = @ProjectId\\r\\n\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\tu.Department,\\r\\n\\t\\t\\t\\t\\tut.Department,\\r\\n\\t\\t\\t\\t\\tutg.Oid,\\r\\n\\t\\t\\t\\t\\tpha.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tpha.[User]\\r\\n\\t\\t\\t\\tunion all\\r\\n\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\t\\tv.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tv.[User],\\r\\n\\t\\t\\t\\t\\t0 as Rate,\\r\\n\\t\\t\\t\\t\\t0 as ContractedHours,\\r\\n\\t\\t\\t\\t\\t0 as PlannedHours,\\r\\n\\t\\t\\t\\t\\t0 as ForecastHours,\\r\\n\\t\\t\\t\\t\\tsum(v.[Hours]) as ActualHours,\\r\\n\\t\\t\\t\\t\\tsum(v.[Hours] - (v.AdministrativeHours + v.NewBusinessHours)) as BillableHours,\\r\\n\\t\\t\\t\\t\\tsum(v.NewBusinessHours + v.AdministrativeHours) as NonBillableHours \\r\\n\\t\\t\\t\\tfrom (\\r\\n\\t\\t\\t\\t\\tselect\\r\\n\\t\\t\\t\\t\\t\\tIsNull(t.UserDepartmentId, IsNull(d.Department, tp.Department)) as Department,\\r\\n\\t\\t\\t\\t\\t\\tutg.Oid as UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\t\\tt.UserResponsibleId as [User],\\r\\n\\t\\t\\t\\t\\t\\tiif(t.IsAdministrative = 1, (t.[Hours] / 60.0), 0) as AdministrativeHours,\\r\\n\\t\\t\\t\\t\\t\\tIIF(\\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(jc.Billable, 0) = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tisnull(pc.Billable, 0) = 0\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 1 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t) as NewBusinessHours,\\r\\n\\t\\t\\t\\t\\t\\tIIF(\\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcase \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(pc.Billable = 1 and isnull(jc.Billable, 0) = 0)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t) as InternalWorkHours,\\r\\n\\t\\t\\t\\t\\t\\tIIF(\\r\\n\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcase\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twhen t.IsAdministrative = 0 and \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(pc.Billable = 1 or jc.Billable = 1)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen (t.[Hours] / 60.0) \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telse 0 \\r\\n\\t\\t\\t\\t\\t\\t\\t\\tend\\r\\n\\t\\t\\t\\t\\t\\t\\t) = 1, (t.[Hours] / 60.0), 0\\r\\n\\t\\t\\t\\t\\t\\t) as BillableHours,\\r\\n\\t\\t\\t\\t\\t\\t(t.[Hours] / 60.0) as [Hours],\\r\\n\\t\\t\\t\\t\\t\\tt.TotalUserCost\\r\\n\\t\\t\\t\\t\\tfrom\\t\\r\\n\\t\\t\\t\\t\\t\\tdbo.SkillTimesheetExpanded t\\r\\n\\t\\t\\t\\t\\t\\t\\tinner join Project p ON (p.Oid = t.ProjectId AND p.Oid = @ProjectId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join ProjectClassification pc on (pc.Oid = p.Classification)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join Deliverable d on (d.Oid = t.DeliverableId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join JobClassification jc on (jc.Oid = d.Classification)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join UserTypology tp on (tp.Oid = t.UserTypologyId)\\r\\n\\t\\t\\t\\t\\t\\t\\tleft outer join UserTypologyGroup utg on (utg.Oid = tp.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\t) v\\r\\n\\t\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\t\\tv.UserTypologyGroup,\\r\\n\\t\\t\\t\\t\\tv.[User]\\r\\n\\t\\t\\t) v\\r\\n\\t\\t\\tgroup by\\r\\n\\t\\t\\t\\tv.Department,\\r\\n\\t\\t\\t\\tv.UserTypologyGroup,\\r\\n\\t\\t\\t\\tv.[User]\\r\\n\\t\\t) v\\r\\n\\t\\t\\tleft outer join [User] u on u.Oid = v.[User]\\r\\n\\t\\t\\tleft outer join UserTypologyGroup utg on utg.Oid = v.UserTypologyGroup\\r\\n\\t\\t\\tleft outer join Department d on d.Oid = v.Department\\r\\n\\t\\tgroup by \\r\\n\\t\\t\\tv.Department,\\r\\n\\t\\t\\td.[Name],\\r\\n\\t\\t\\tv.UserTypologyGroup,\\r\\n\\t\\t\\tutg.[Name],\\r\\n\\t\\t\\tv.[User],\\r\\n\\t\\t\\tu.[Name]\\r\\n) v\\r\\nleft outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = 'DeliverablesSellRead')\\r\\nwhere \\r\\n    v.DepartmentId is not null\"}},\"Filters\":{},\"QueryConfiguration\":{}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Contracts_Per_Estimate_Service_Deliverable_TypologyGroup/execute","Configuration":"{\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"filterRow\": {\r\n        \"visible\": true\r\n    },\r\n    \"height\": \"300\",\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": false,\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"columnMinWidth\": \"100\",\r\n    \"filterPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"groupPanel\": {\r\n        \"visible\": false\r\n    },\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"DepartmentName\",\r\n            \"caption\": \"Department\",\r\n            \"groupIndex\": 1,\r\n            \"autoExpandGroup\": true\r\n        },\r\n        {\r\n            \"dataField\": \"UserTypologyGroup\",\r\n            \"caption\": \"Typology Group\",\r\n            \"width\": 175\r\n        },\r\n        {\r\n            \"dataField\": \"UserName\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHours\",\r\n            \"caption\": \"Contracted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHoursIncome\",\r\n            \"caption\": \"Contracted $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHours\",\r\n            \"caption\": \"Forecasted\",\r\n            \"format\": \"#,##0.00\",\r\n            \"alignment\": \"right\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHoursIncome\",\r\n            \"caption\": \"Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedHours\",\r\n            \"caption\": \"Planned\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 100,\r\n            \"allowGrouping\": false,\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHours\",\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                },\r\n                {\r\n                    \"dataField\": \"BillableHoursIncome\",\r\n                    \"caption\": \"Billable $\",\r\n                    \"dataType\": \"number\",\r\n                    \"format\": {\r\n                        \"type\": \"currency\",\r\n                        \"precision\": 2\r\n                    },\r\n                    \"displayFormat\": \"{0}\",\r\n                    \"allowGrouping\": false,\r\n                    \"width\": 125\r\n                },\r\n                {\r\n                    \"dataField\": \"NonBillableHours\",\r\n                    \"caption\": \"Non Billable\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 125,\r\n                    \"allowGrouping\": false,\r\n                    \"alignment\": \"right\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHoursIncome\",\r\n            \"caption\": \"Actual $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"visible\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastHours\",\r\n            \"caption\": \"Actual + Forecast\",\r\n            \"format\": \"#,##0.00\",\r\n            \"width\": 125,\r\n            \"allowGrouping\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastIncome\",\r\n            \"caption\": \"Actual + Forecast $\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageHours\",\r\n            \"caption\": \"Actual Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentageIncome\",\r\n            \"caption\": \"Actual Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                if(i.data.ActualBurnPercentageIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true);                }            }\"\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnPercentage\",\r\n            \"caption\": \"Actual + Forecast Burn % (Hours)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\",\r\n            \"visible\": true\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedContractedPercentage\",\r\n            \"caption\": \"Planned Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 150,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true); }\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnIncome\",\r\n            \"caption\": \"Actual + Forecast Burn % ($)\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"width\": 200,\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) {                 if(i.data.ActualPlusForecastBurnIncome != null) {                    SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 0.9, i.value < 0.9 && i.value >= 0.5, i.value < 0.5, true);                 }                   }\",\r\n            \"visible\": true\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function (options) {            if (options.name === 'ActualBurnHours') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                    else                            options.totalValue = 0;                            break;                }            }                    if (options.name === 'ActualPlusForecastBurnHours') {                switch(options.summaryProcess) {                    case 'start':                    options.totalValue = [0,0];                        break;                    case 'calculate':                    options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastHours;                    options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                    if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                    options.totalValue = 0;                            break;                }            }            if (options.name === 'PlannedBurn') {                        switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                        case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.PlannedHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }                        if (options.name === 'ActualPlusForecastBurnIncome') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecastIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }            if (options.name === 'ActualBurnIncome') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualIncome;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedIncome;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]);                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"ActualBurnIncome\",\r\n                \"showInColumn\": \"Actual Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnIncome\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"PlannedBurn\",\r\n                \"showInColumn\": \"Planned Burn %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnHours\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"name\": \"ActualBurnHours\",\r\n                \"showInColumn\": \"Actual Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\"\r\n            },\r\n            {\r\n                \"column\": \"ProjectName\",\r\n                \"summaryType\": \"count\",\r\n                \"displayFormat\": \"All Projects\"\r\n            },\r\n            {\r\n                \"column\": \"ActualTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Planned\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecasted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedTime\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedRevenue\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedActualIncomeVariation\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Billable $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast Burn $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"name\": \"ActualBurnIncome\",\r\n                \"showInColumn\": \"Actual Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnIncome\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % ($)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualPlusForecastBurnHours\",\r\n                \"showInColumn\": \"Actual + Forecast Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"name\": \"ActualBurnHours\",\r\n                \"showInColumn\": \"Actual Burn % (Hours)\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\",\r\n                \"alignment\": \"right\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Forecasted\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast $\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    },\r\n    \"columnChooser\": {\r\n        \"enabled\": \"true\"\r\n    },\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    }\r\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"3d11b8a6-e6f0-4b12-bf02-0a0920cb1a14","Name":"Monthly Distribution","Active":true,"UseQuery":false,"Query":null,"Size":8,"Order":2,"Parameters":"[{\"WidgetSubTitle\":\"Planned Time, Utilization & Income\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":17,\"WidgetRows\":17,\"WidgetColumns\":32,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with met as\\r\\n(\\r\\n    select  est.Oid as EstimateOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by est.Oid) as Months\\r\\n    from    Contract cnt, Estimate est, YearDay yrd\\r\\n    where   est.Contract = cnt.Oid and\\r\\n            yrd.Day between cast(est.Date as date) and cast(est.Expiration as date) and\\r\\n            Day(yrd.Day) = Day(est.Date)\\r\\n            /*[ContractFilter]*/ and est.Project = @ProjectId /*[/ContractFilter]*/\\r\\n),\\r\\nmpj as\\r\\n(\\r\\n    select  prj.Oid as ProjectOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by prj.Oid) as Months\\r\\n    from    Contract cnt, Project prj, YearDay yrd\\r\\n    where   prj.Contract = cnt.Oid and\\r\\n            yrd.Day between cast(prj.BeginDate as date) and cast(prj.EndDate as date) and\\r\\n            Day(yrd.Day) = Day(prj.BeginDate)\\r\\n            /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n)\\r\\nselect  v.[Date], \\r\\n        IIF(n.RoleId is not null, v.ResourcesWithVatIncome, null) as ResourcesWithVatIncome,\\r\\n        IIF(n.RoleId is not null, v.ResourcesWithVatCost, null) as ResourcesWithVatCost,\\r\\n        v.ContractedTime,\\r\\n        v.PlannedTime,\\r\\n        v.ForecastTime,\\r\\n        v.ActualTime,\\r\\n        v.ContractedTimeGrandTotal,\\r\\n        v.PlannedTimeGrandTotal,\\r\\n        v.ForecastTimeGrandTotal,\\r\\n        v.ActualTimeGrandTotal\\r\\nfrom\\r\\n(\\r\\n    select  [Date], \\r\\n            sum(ResourcesWithVatIncome) as ResourcesWithVatIncome,\\r\\n            sum(ResourcesWithVatCost) as ResourcesWithVatCost,\\r\\n            sum(ContractedTime) as ContractedTime,\\r\\n            sum(PlannedTime) as PlannedTime,\\r\\n            sum(ForecastTime) as ForecastTime,\\r\\n            sum(ActualTime) as ActualTime,\\r\\n            sum(sum(ContractedTime)) over() as ContractedTimeGrandTotal,\\r\\n            sum(sum(PlannedTime)) over() as PlannedTimeGrandTotal,\\r\\n            sum(sum(ForecastTime)) over() as ForecastTimeGrandTotal,\\r\\n            sum(sum(ActualTime)) over() as ActualTimeGrandTotal\\r\\n    from    (\\r\\n                select  [Date],\\r\\n                        sum(ResourcesWithVatIncome) / max(Months) as ResourcesWithVatIncome,\\r\\n                        sum(ResourcesWithVatCost) / max(Months) as ResourcesWithVatCost,\\r\\n                        sum(ContractedTime) / max(Months) as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    (\\r\\n                        select  est.Oid as EstimateOid,\\r\\n                                sum(edt.ValueWithVatIncome * eit.Retainer) as ResourcesWithVatIncome,\\r\\n                                sum(edt.ValueWithVatCost * eit.Retainer) as ResourcesWithVatCost,\\r\\n                                sum(edt.Hours * eit.Retainer) as ContractedTime\\r\\n                        from    Estimate est, EstimateItem eit, EstimateItemDetail edt, Contract cnt\\r\\n                        where   est.Contract = cnt.Oid and\\r\\n                                eit.Estimate = est.Oid and\\r\\n                                edt.EstimateItem = eit.Oid and\\r\\n                                edt.Type = 2\\r\\n                                /*[ContractFilter]*/ and est.Project = @ProjectId /*[/ContractFilter]*/\\r\\n                        group by est.Oid\\r\\n                        ) t, met\\r\\n                where   met.EstimateOid = t.EstimateOid\\r\\n                group by t.EstimateOid, [Date]  \\r\\n                union all\\r\\n                select  [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        sum(PlannedTime) / max(Months) as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    (\\r\\n                        select  prj.Oid as ProjectOid,\\r\\n                                sum(pht.PlannedMinutes / 60.0) as PlannedTime\\r\\n                        from    PlannedHoursTotal pht, Project prj, Contract cnt\\r\\n                        where   prj.Oid = pht.Project and\\r\\n                                prj.Contract = cnt.Oid and\\r\\n                                pht.GCRecord is null \\r\\n                                /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n                        group by prj.Oid\\r\\n                        ) t, mpj\\r\\n                where   mpj.ProjectOid = t.ProjectOid\\r\\n                group by t.ProjectOid, [Date]  \\r\\n                union all\\r\\n                select  datefromparts(Year(pha.Date), Month(pha.Date), 1) as [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        sum(pha.AdjustmentMinutes / 60.0) as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    PlannedHoursAdjustment pha, Project prj, Contract cnt\\r\\n                where   prj.Oid = pha.Project and\\r\\n                        prj.Contract = cnt.Oid and\\r\\n                        pha.GCRecord is null \\r\\n                        /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n                group by Year(pha.Date), Month(pha.Date)\\r\\n                union all\\r\\n                select  datefromparts(Year(tim.[Date]), Month(tim.[Date]), 1) as [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        sum(DurationHours + DurationMinutes / 60.0) as ActualTime\\r\\n                from    Timesheet tim, Project prj, Contract cnt\\r\\n                where   prj.Oid = tim.Project and\\r\\n                        prj.Contract = cnt.Oid\\r\\n                        /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n                group by Year(tim.[Date]), Month(tim.[Date])\\r\\n            ) t\\r\\n    group by [Date]\\r\\n) v\\r\\n    left outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = 'DeliverablesSellRead')\"}},\"Filters\":{},\"QueryConfiguration\":{}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Contracts_Per_Month/execute","Configuration":"{\n    \"size\": {\n        \"height\": 300\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"Date\"\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"argumentAxis\": {\n        \"argumentType\": \"datetime\",\n        \"type\": \"discrete\",\n        \"label\": {\n            \"format\": \"month\",\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    },\n    \"panes\": [\n        {\n            \"name\": \"Value\"\n        },\n        {\n            \"name\": \"Time\"\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"Value\",\n            \"pane\": \"Value\",\n            \"title\": \"Value\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        },\n        {\n            \"name\": \"Time\",\n            \"pane\": \"Time\",\n            \"title\": \"Time\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        }\n    ],\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatIncome\",\n            \"name\": \"Income\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatCost\",\n            \"name\": \"Cost\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ForecastTime\",\n            \"name\": \"Forecast\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"pane\": \"Time\"\n        }\n    ]\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"379fb23b-214f-4cbc-9daa-3b8098e5ee2b","Name":"Typology Group Contribution","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":6,"Parameters":"[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":34,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH ContractEstimateRates As\\r\\n(\\r\\n\\tselect \\r\\n\\t\\teid.Department, eid.UserTypologyGroup, eid.[User], Max(eid.UnitPriceIncome) as UnitPriceIncome\\r\\n\\tfrom\\r\\n\\t\\tdbo.Estimate e\\r\\n\\t\\tINNER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tINNER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2)\\r\\n\\twhere \\r\\n\\t\\te.GCRecord is null \\r\\n\\t\\tand (e.Project = @ProjectId)\\r\\n\\t\\tand cast(getdate() as Date) between e.[Date] and e.Expiration\\r\\n\\tgroup by \\r\\n\\t\\teid.Department, \\r\\n\\t\\teid.UserTypologyGroup, \\r\\n\\t\\teid.[User]\\r\\n)\\r\\nSELECT\\r\\n    v.[TypologyGroup],\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\tutg.[Name] as [TypologyGroup],\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours] * ei.retainer) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.UserTypologyGroup utg\\r\\n\\tWHERE\\r\\n\\t\\te.Project = @ProjectId\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND utg.Oid = eid.UserTypologyGroup\\r\\n\\tGROUP BY \\r\\n\\t\\tutg.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tt.[TypologyGroup],\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eidu.UnitPriceIncome, ISNULL(eidt.UnitPriceIncome, 0))) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tleft outer join ContractEstimateRates eidu on (eidu.Department = t.DepartmentId AND eidu.UserTypologyGroup = t.TypologyGroupId AND eidu.[User] = t.UserId)\\r\\n\\t\\tleft outer join ContractEstimateRates eidt on (eidt.Department = t.DepartmentId AND eidt.UserTypologyGroup = t.TypologyGroupId AND eidt.[User] is null)\\r\\n\\tWHERE\\r\\n\\t\\tt.[TypologyGroup] IS NOT NULL\\r\\n\\t\\t/*[/ContractFilter]*/ and t.ProjectId = @ProjectId /*[/ContractFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tt.[TypologyGroup]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tISNULL(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tLEFT OUTER JOIN [User] u ON (u.Oid = pht.[User])\\r\\n\\t\\tLEFT OUTER JOIN [UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup),\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ContractFilter]*/ and p.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tISNULL(utgp.[Name], utg.[Name])\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.TypologyGroup\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Contracts_Per_TypologyGroup/execute","Configuration":"{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"TypologyGroup\",\n        \"valueField\": \"BillableHours\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"91741749-bfb8-4ee1-bd5c-4b79bc00cdd7","Name":"Division Contribution","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":4,"Parameters":"[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":34,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH ContractEstimateRates As\\r\\n(\\r\\n\\tselect \\r\\n\\t\\teid.Department, eid.UserTypologyGroup, eid.[User], Max(eid.UnitPriceIncome) as UnitPriceIncome\\r\\n\\tfrom\\r\\n\\t\\tdbo.Estimate e\\r\\n\\t\\tINNER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tINNER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2)\\r\\n\\twhere \\r\\n\\t\\te.GCRecord is null \\r\\n\\t\\tand (e.Project = @ProjectId)\\r\\n\\t\\tand cast(getdate() as Date) between e.[Date] and e.Expiration\\r\\n\\tgroup by \\r\\n\\t\\teid.Department, \\r\\n\\t\\teid.UserTypologyGroup, \\r\\n\\t\\teid.[User]\\r\\n)\\r\\nSELECT\\r\\n    v.DivisionName,\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DivisionName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours] * ei.retainer) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.Division d\\r\\n\\tWHERE\\r\\n\\t\\te.Project = @ProjectId\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND d.Oid = e.Division\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tdi.[Name] as DivisionName,\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eidu.UnitPriceIncome, ISNULL(eidt.UnitPriceIncome, 0))) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tleft outer join Department de on t.DepartmentId = de.Oid\\r\\n\\t\\tleft outer join Division di on de.Division = di.Oid\\r\\n\\t\\tleft outer join ContractEstimateRates eidu on (eidu.Department = t.DepartmentId AND eidu.UserTypologyGroup = t.TypologyGroupId AND eidu.[User] = t.UserId)\\r\\n\\t\\tleft outer join ContractEstimateRates eidt on (eidt.Department = t.DepartmentId AND eidt.UserTypologyGroup = t.TypologyGroupId AND eidt.[User] is null)\\r\\n\\tWHERE\\r\\n\\t\\t/*[/ClientFilter]*/ t.ProjectId = @ProjectId /*[/ClientFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tdi.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tdi.[Name] as DivisionName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tleft outer join Department de on de.Oid = pht.Department\\r\\n\\t\\tleft outer join Division di on di.Oid = de.Division,\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ContractFilter]*/ and p.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tdi.[Name]\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.DivisionName\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Contracts_Per_TypologyGroup/execute","Configuration":"{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DivisionName\",\n        \"valueField\": \"BillableHours\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"acbdfde0-3729-49bc-a3d6-5a604e3e1c66","Name":"Typology Group Burn","Active":true,"UseQuery":false,"Query":null,"Size":12,"Order":7,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":0,\"WidgetYPosition\":48,\"WidgetRows\":15,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Contracted Time\",\"metricFieldValue\":\"TotalContractedTime\"},{\"visible\":true,\"metricName\":\"Planned Time\",\"metricFieldValue\":\"TotalPlannedTime\"},{\"visible\":true,\"metricName\":\"Actual Time\",\"metricFieldValue\":\"TotalActualTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  t.TypologyGroup,\\r\\n\\t\\tt.ContractedTime,\\r\\n\\t\\tt.PlannedTime,\\r\\n\\t\\tt.ActualTime,\\r\\n        sum(ContractedTime) over() as TotalContractedTime,\\r\\n        sum(PlannedTime) over() as TotalPlannedTime,\\r\\n        sum(ActualTime) over() as TotalActualTime\\r\\nfrom    (\\r\\n        select  TypologyGroup,\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(PlannedTime) as PlannedTime,\\r\\n                sum(ActualTime) as ActualTime\\r\\n        from    (\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                edt.Hours * eit.Retainer as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                0 as ActualTime\\r\\n                        from    Estimate est, EstimateItem eit, Contract cnt, EstimateItemDetail edt, UserTypologyGroup utg\\r\\n                        where   est.Contract = cnt.Oid and\\r\\n                                eit.Estimate = est.Oid and\\r\\n                                edt.EstimateItem = eit.Oid and\\r\\n                                utg.Oid = edt.UserTypologyGroup and\\r\\n                                edt.Type = 2\\r\\n                                /*[ContractFilter]*/ and est.Project = @ProjectId /*[/ContractFilter]*/\\r\\n                        union all\\r\\n\\t\\t\\t\\t\\t\\tSELECT\\r\\n\\t\\t\\t\\t\\t\\t\\tISNULL(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n                            0 as ContractedTime,\\r\\n                            SUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedTime,\\r\\n\\t\\t\\t\\t\\t\\t\\t0 as ActualTime\\r\\n\\t\\t\\t\\t\\t\\tFROM   \\r\\n\\t\\t\\t\\t\\t\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\t\\t\\t\\t\\t\\tLEFT OUTER JOIN [User] u ON (u.Oid = pht.[User])\\r\\n\\t\\t\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n\\t\\t\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n\\t\\t\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup),\\r\\n\\t\\t\\t\\t\\t\\t\\tdbo.Project p\\r\\n\\t\\t\\t\\t\\t\\tWHERE\\r\\n\\t\\t\\t\\t\\t\\t\\tpht.GCRecord is null\\r\\n\\t\\t\\t\\t\\t\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t\\t\\t\\t\\t\\t/*[/ContractFilter]*/ and p.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n\\t\\t\\t\\t\\t\\tGROUP BY \\r\\n\\t\\t\\t\\t\\t\\t\\tISNULL(utgp.[Name], utg.[Name])\\r\\n                        union all\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                0 as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                DurationHours + DurationMinutes / 60.0 as ActualTime\\r\\n                        from    Timesheet tim, Project prj, Contract cnt, [User] usr, UserTypology ust, UserTypologyGroup utg\\r\\n                        where   tim.Project = prj.Oid and \\r\\n                                prj.Contract = cnt.Oid and\\r\\n                                usr.Oid = tim.CreatedBy and\\r\\n                                ust.Oid = usr.Typology and\\r\\n                                utg.Oid = ust.UserTypologyGroup\\r\\n                                /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n                ) t\\r\\n        group by TypologyGroup\\r\\n        ) t\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Contract - Resources - Typology Group/execute","Configuration":"{\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"TypologyGroup\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"font\": {\n        \"size\": 8,\n        \"family\": \"Varela Round\"\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"label\": {\n      \"font\": {\n        \"family\": \"Varela Round\"\n      }\n    }\n  },\n  \"series\": [\n    {\n      \"type\": \"area\",\n      \"valueField\": \"PlannedTime\",\n      \"name\": \"Planned Time\"\n    },\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual Time\"\n    },\n    {\n      \"type\": \"line\",\n      \"valueField\": \"ContractedTime\",\n      \"name\": \"Contracted Time\",\n      \"point\": {\n    \"symbol\": \"triangleDown\",\n        \"color\":\"#a5bdd7\"\n      }\n    }\n  ],\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"orientation\":\"horizontal\",\n    \"verticalAlignment\":\"bottom\",\n    \"horizontalAlignment\":\"center\",\n    \"font\": {\n      \"family\": \"Varela Round\"\n    }\n  }\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"c10a2013-7964-4497-a227-5aba9b6f34f6","Name":"User Burn","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":3,"Parameters":"[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":32,\"WidgetYPosition\":17,\"WidgetRows\":17,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Billable Time\",\"metricFieldValue\":\"TotalBillableTime\"},{\"visible\":true,\"metricName\":\"Non-billable Time\",\"metricFieldValue\":\"TotalNonBillableTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  t.[User],\\r\\n\\t\\tt.ContractedTime,\\r\\n\\t\\tt.BillableTime,\\r\\n\\t\\tt.NonBillableTime,\\r\\n        sum(BillableTime) over() as TotalBillableTime,\\r\\n        sum(NonBillableTime) over() as TotalNonBillableTime\\r\\nfrom    (\\r\\n        select  [User],\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(BillableTime) as BillableTime,\\r\\n                sum(NonBillableTime) as NonBillableTime\\r\\n        from    (\\r\\n                select  usr.Name as [User],\\r\\n                        edt.Hours as ContractedTime,\\r\\n                        0 as BillableTime,\\r\\n                        0 as NonBillableTime\\r\\n                from    Estimate est, EstimateItem eit, Contract cnt,\\r\\n                        EstimateItemDetail edt left outer join [User] usr on usr.Oid = edt.[User]\\r\\n                where   est.Contract = cnt.Oid and\\r\\n                        eit.Estimate = est.Oid and\\r\\n                        edt.EstimateItem = eit.Oid and\\r\\n                        edt.Type = 2\\r\\n                        /*[ContractFilter]*/ and est.Project = @ProjectId /*[/ContractFilter]*/\\r\\n                union all\\r\\n                select  usr.Name as [User],\\r\\n                        0 as ContractedTime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, DurationHours + DurationMinutes / 60.0, 0) as Billabletime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, 0, DurationHours + DurationMinutes / 60.0) as NonBillabletime\\r\\n                from    Timesheet tim, Project prj, Contract cnt, [User] usr\\r\\n                where   tim.Project = prj.Oid and \\r\\n                        prj.Contract = cnt.Oid and\\r\\n                        usr.Oid = tim.CreatedBy\\r\\n                        /*[ContractFilter]*/ and prj.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n                ) t\\r\\n        group by [User]\\r\\n        ) t\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Contract - Resources - Users/execute","Configuration":"{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"User\",\n        \"type\": \"stackedbar\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable Time\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non-billable Time\"\n        }\n    ],\n    \"size\": {\n        \"height\": 300\n    },\n    \"rotated\": true\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"},{"Id":"0800ecb3-7614-4afe-964d-bc6e18ccae58","Name":"Department Contribution","Active":true,"UseQuery":false,"Query":null,"Size":4,"Order":5,"Parameters":"[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetFrameStyle\":{},\"WidgetXPosition\":16,\"WidgetYPosition\":34,\"WidgetRows\":14,\"WidgetColumns\":16,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH ContractEstimateRates As\\r\\n(\\r\\n\\tselect \\r\\n\\t\\teid.Department, eid.UserTypologyGroup, eid.[User], Max(eid.UnitPriceIncome) as UnitPriceIncome\\r\\n\\tfrom\\r\\n\\t\\tdbo.Estimate e\\r\\n\\t\\tINNER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tINNER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2)\\r\\n\\twhere \\r\\n\\t\\te.GCRecord is null \\r\\n\\t\\tand (e.Project = @ProjectId)\\r\\n\\t\\tand cast(getdate() as Date) between e.[Date] and e.Expiration\\r\\n\\tgroup by \\r\\n\\t\\teid.Department, \\r\\n\\t\\teid.UserTypologyGroup, \\r\\n\\t\\teid.[User]\\r\\n)\\r\\nSELECT\\r\\n    v.DepartmentName,\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours] * ei.retainer) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.Department d\\r\\n\\tWHERE\\r\\n\\t\\te.Project = @ProjectId\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND d.Oid = e.Department\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eidu.UnitPriceIncome, ISNULL(eidt.UnitPriceIncome, 0))) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tleft outer join Department d on t.DepartmentId = d.Oid\\r\\n\\t\\tleft outer join ContractEstimateRates eidu on (eidu.Department = t.DepartmentId AND eidu.UserTypologyGroup = t.TypologyGroupId AND eidu.[User] = t.UserId)\\r\\n\\t\\tleft outer join ContractEstimateRates eidt on (eidt.Department = t.DepartmentId AND eidt.UserTypologyGroup = t.TypologyGroupId AND eidt.[User] is null)\\r\\n\\tWHERE\\r\\n\\t\\t/*[/ClientFilter]*/ t.ProjectId = @ProjectId /*[/ClientFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tleft outer join Department d on d.Oid = pht.Department,\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ContractFilter]*/ and p.Oid = @ProjectId /*[/ContractFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.DepartmentName\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]","DashboardComponentType":{"Id":"c666ba5e-8578-4132-86a5-0f96c665000d","Name":"Generic Dashboard","ComponentTypeNumber":42},"AnalyticsApiUrl":"globalQuery/Analytics_Contracts_Per_TypologyGroup/execute","Configuration":"{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DepartmentName\",\n        \"valueField\": \"BillableHours\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 235\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}","DashboardDefinitionId":"dddd00f6-f9d1-4280-97e9-572445cb1fb0"}]}
