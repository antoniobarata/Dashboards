{
  "DashboardDefinitionRoles": [],
  "Id": "dddd00f6-f9d1-4280-97e9-572445cb1fb0",
  "Name": "Burn per Role",
  "Active": true,
  "Location": 1,
  "DocumentId": "8055b90e-69d2-4346-a378-5b8f21d5ec7b",
  "DocumentName": "Project",
  "DocumentsConfiguration": "{\"entity\":\"\",\"operations\":{\"read\":{\"endpoint\":\"\"},\"update\":{\"endpoint\":\"\",\"model\":{}},\"create\":{\"endpoint\":\"\",\"model\":{}},\"patch\":{\"endpoint\":\"\",\"model\":[{\"field\":\"\",\"caption\":\"\",\"type\":\"\"}]},\"remove\":{\"endpoint\":\"\"},\"lookup\":{\"endpoint\":\"\"},\"lookupById\":{\"endpoint\":\"\"}},\"layout\":{\"create\":{},\"read\":{},\"patch\":{}},\"customDocument\":{\"useCustomStyle\":false,\"mainColor\":\"\",\"secondaryColor\":\"\",\"imageClass\":\"\",\"namePlural\":\"\",\"name\":\"\",\"systemName\":\"\"},\"availableOptions\":{\"feed\":false,\"info\":true,\"files\":false,\"userfields\":false,\"dashboard\":false}}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "284c9149-2e88-4654-9fee-0039bd52db9e",
      "Name": "Division Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 4,
      "Parameters": "[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT\\r\\n    v.DivisionName,\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DivisionName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours]) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.Division d\\r\\n\\tWHERE\\r\\n\\t\\te.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId)\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND d.Oid = e.Division\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tdi.[Name] as DivisionName,\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eid.UnitPriceIncome, 0)) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tleft outer join Department de on t.DepartmentId = de.Oid\\r\\n\\t\\tleft outer join Division di on de.Division = di.Oid\\r\\n\\t\\tLEFT OUTER JOIN dbo.Estimate e ON (e.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId))\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2 AND (eid.Department = t.DepartmentId AND eid.UserTypologyGroup = t.TypologyGroupId))\\r\\n\\tWHERE\\r\\n\\t\\t/*[/ProjectFilter]*/ t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tdi.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tdi.[Name] as DivisionName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tleft outer join Department de on de.Oid = pht.Department\\r\\n\\t\\tleft outer join Division di on di.Oid = de.Division,\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ProjectFilter]*/ and p.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tdi.[Name]\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.DivisionName\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DivisionName\",\n        \"valueField\": \"BillableHours\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 250\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "c9da8bbc-7993-4626-81f9-030e3fd4b58b",
      "Name": "Summary",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 1,
      "Parameters": "[{\"WidgetSubTitle\":\"Time per Department and Typology Group\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"% Burn\",\"metricFieldValue\":\"ActualContractedPercentageGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT\\r\\n    v.Department,\\r\\n    v.UserName,\\r\\n    v.TypologyGroup,\\r\\n    v.ContractedHours,\\r\\n    IIF(n.RoleId is not null, v.ContractedHoursIncome, null) as ContractedHoursIncome,\\r\\n    IIF(n.RoleId is not null, v.ContractedActualIncomeVariation, null) as ContractedActualIncomeVariation,\\r\\n    v.ActualContractedPercentage,\\r\\n    v.PlannedHours,\\r\\n    IIF(n.RoleId is not null, v.PlannedHoursIncome, null) as PlannedHoursIncome,\\r\\n    v.ActualPlannedPercentage,\\r\\n    v.BillableHours,\\r\\n    v.NonBillableHours,\\r\\n    IIF(n.RoleId is not null, v.ActualHoursCost, null) as ActualHoursCost,\\r\\n    IIF(n.RoleId is not null, v.ActualHoursIncome, null) as ActualHoursIncome,\\r\\n    v.ForecastHours,\\r\\n    v.ActualPlusForecast,\\r\\n    v.ActualBurnPercentage,\\r\\n    v.ActualPlusForecastBurnPercentage,\\r\\n    v.BillableHoursGrandTotal,\\r\\n    v.PlannedHoursGrandTotal,\\r\\n    v.ContractedHoursGrandTotal\\r\\nFROM\\r\\n(\\r\\n    SELECT \\r\\n        v.*,\\r\\n        (v.ActualHours + v.ForecastHours) as ActualPlusForecast,\\r\\n        IIF(v.ContractedHours > 0, (v.ActualHours / v.ContractedHours), 0) as ActualBurnPercentage,\\r\\n        IIF(v.ContractedHours > 0, ((v.ActualHours + v.ForecastHours) / v.ContractedHours), 0) as ActualPlusForecastBurnPercentage\\r\\n    FROM (\\r\\n        SELECT\\r\\n            v.[Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n            v.[TypologyGroup],\\r\\n            u.[Name] as UserName,\\r\\n            sum(v.[ActualHours]) as [ActualHours],\\r\\n            sum(v.ActualHoursCost) as ActualHoursCost,\\r\\n            sum(v.ActualHoursIncome) as ActualHoursIncome,\\r\\n            sum(v.[BillableHours]) as BillableHours,\\r\\n            sum(v.NonBillableHours) as NonBillableHours,\\r\\n            sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n            sum(v.ContractedHours) as ContractedHours,\\r\\n            sum(v.ContractedHoursIncome) as ContractedHoursIncome,\\r\\n            sum(v.ForecastHours) as ForecastHours,\\r\\n            sum(v.PlannedHours) as PlannedHours,\\r\\n            sum(v.PlannedHoursIncome) as PlannedHoursIncome,\\r\\n            (sum(v.ContractedHoursIncome) - sum(v.ActualHoursCost)) as ContractedActualIncomeVariation,\\r\\n            IIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n            IIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n            sum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n            sum(sum(v.NonBillableHours)) OVER () as NonBillableHoursGrandTotal,\\r\\n            sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n            sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal,\\r\\n            IIF(sum(sum(v.[ContractedHours])) OVER () > 0, sum(sum(v.[BillableHours])) OVER () / sum(sum(v.[ContractedHours])) OVER (), 0.0) as ActualContractedPercentageGrandTotal\\r\\n        FROM  \\r\\n        (\\r\\n            SELECT\\r\\n                dp.[Name] as [Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                utg.[Name] as [TypologyGroup],\\r\\n                e.CreatedBy as [User],\\r\\n                0 as [ActualHours],\\r\\n                0 as ActualHoursCost,\\r\\n                0 as ActualHoursIncome,\\r\\n                0 as BillableHours,\\r\\n                0 as BillableHoursIncome,\\r\\n                0 as NonBillableHours,\\r\\n                sum(eid.[Hours]) as ContractedHours,\\r\\n                sum(eid.[Hours] * ISNULL(eid.UnitPriceIncome, 0)) as ContractedHoursIncome,\\r\\n                0 as ForecastHours,\\r\\n                0 as PlannedHours,\\r\\n                0 as PlannedHoursIncome\\r\\n            FROM   \\r\\n                dbo.Estimate e,\\r\\n                dbo.EstimateItem ei,\\r\\n                dbo.EstimateItemDetail eid,\\r\\n                dbo.Department dp,\\r\\n                dbo.UserTypologyGroup utg\\r\\n            WHERE\\r\\n                e.[Contract] = (select p.[Contract] from dbo.Project p where Oid = @ProjectId)\\r\\n                AND ei.Estimate = e.Oid\\r\\n                AND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n                AND dp.Oid = eid.Department\\r\\n                AND utg.Oid = eid.UserTypologyGroup\\r\\n            GROUP BY \\r\\n                dp.[Name],\\r\\n                utg.[Name],\\r\\n                e.CreatedBy\\r\\n            UNION ALL\\r\\n            SELECT\\r\\n                t.[Department] as [Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                t.[TypologyGroup],\\r\\n                t.[User],\\r\\n                sum(t.[Hours]) as [ActualHours],\\r\\n                sum(ISNULL(t.TotalUserCost, 0)) as ActualHoursCost,\\r\\n                sum(t.[Hours] * ISNULL(eid.UnitPriceIncome, 0)) as ActualHoursIncome,\\r\\n                sum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n                sum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eid.UnitPriceIncome, 0)) as BillableHoursIncome,\\r\\n                sum(t.NewBusinessHours + t.AdministrativeHours) as NonBillableHours,\\r\\n                0 as ContractedHours,\\r\\n                0 as ContractedHoursIncome,\\r\\n                0 as ForecastHours,\\r\\n                0 as PlannedHours,\\r\\n                0 as PlannedHoursIncome\\r\\n            FROM   \\r\\n                (\\r\\n                    select \\r\\n                        t.UserDepartmentId as DepartmentId,\\r\\n                        t.Department,\\r\\n                        t.CreatedBy as [User],\\r\\n                        utg.Oid as TypologyGroupId,\\r\\n                        p.[Contract] as ProjectContractId,\\r\\n                        utg.[Name] as TypologyGroup,\\r\\n                        iif(t.IsAdministrative = 1, t.[Hours], 0) as AdministrativeHours,\\r\\n                        IIF(\\r\\n                            (\\r\\n                                case \\r\\n                                    when t.IsAdministrative = 0 and \\r\\n                                    (\\r\\n                                        isnull(jc.Billable, 0) = 0 and \\r\\n                                        isnull(pc.Billable, 0) = 0\\r\\n                                    )\\r\\n                                    then 1 \\r\\n                                    else 0 \\r\\n                                end\\r\\n                            ) = 1, t.[Hours], 0\\r\\n                        ) as NewBusinessHours,\\r\\n                        IIF(\\r\\n                        (\\r\\n                            case \\r\\n                                when t.IsAdministrative = 0 and \\r\\n                                (\\r\\n                                    (pc.Billable = 1 and isnull(jc.Billable, 0) = 0)\\r\\n                                ) \\r\\n                                then (t.[Hours] / 60.0) \\r\\n                                else 0 \\r\\n                            end\\r\\n                            ) = 1, t.[Hours], 0\\r\\n                        ) as InternalWorkHours,\\r\\n                        IIF(\\r\\n                        (\\r\\n                            case\\r\\n                                when t.IsAdministrative = 0 and \\r\\n                                (\\r\\n                                    (pc.Billable = 1 or jc.Billable = 1)\\r\\n                                )\\r\\n                                then (t.[Hours] / 60.0) \\r\\n                                else 0 \\r\\n                            end\\r\\n                            ) = 1, t.[Hours], 0\\r\\n                        ) as BillableHours,\\r\\n                        (t.[Hours] / 60.0) as [Hours],\\r\\n                        t.TotalUserCost\\r\\n                    from\\tdbo.SkillTimesheetExpanded t\\r\\n                            inner join dbo.Project p ON (p.Oid = t.ProjectId AND p.Oid = @ProjectId)\\r\\n                            left outer join dbo.ProjectClassification pc on (pc.Oid = p.Classification)\\r\\n                            left outer join dbo.Deliverable d on (d.Oid = t.DeliverableId)\\r\\n                            left outer join dbo.JobClassification jc on (jc.Oid = d.Classification)\\r\\n                            left outer join dbo.UserTypology tp on (tp.Oid = t.UserTypologyId)\\r\\n                            left outer join dbo.UserTypologyGroup utg on (utg.Oid = tp.UserTypologyGroup)\\r\\n                ) t\\r\\n                LEFT OUTER JOIN dbo.Estimate e ON (e.[Contract] = (select [Contract] from dbo.Project where Oid = @ProjectId))\\r\\n                LEFT OUTER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n                LEFT OUTER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2 AND (eid.Department = t.DepartmentId AND eid.UserTypologyGroup = t.TypologyGroupId))\\r\\n            WHERE\\r\\n                t.[Department] IS NOT NULL\\r\\n                AND t.[TypologyGroup] IS NOT NULL\\r\\n                /*[/ProjectFilter]*/ and t.ProjectContractId = (select p.[Contract] from dbo.Project p where p.Oid = @ProjectId) /*[/ProjectFilter]*/\\r\\n            GROUP BY \\r\\n                t.[Department],\\r\\n                t.[TypologyGroup],\\r\\n                t.[User]\\r\\n            UNION ALL\\r\\n            SELECT\\r\\n                ISNULL(utdp.[Name], utgdp.[Name]) as [Department],\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                ISNULL(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n                pht.[User],\\r\\n                0 as [ActualHours],\\r\\n                0 as ActualHoursCost,\\r\\n                0 as ActualHoursIncome,\\r\\n                0 as BillableHours,\\r\\n                0 as BillableHoursIncome,\\r\\n                0 as NonBillableHours,\\r\\n                0 as ContractedHours,\\r\\n                0 as ContractedHoursIncome,\\r\\n                SUM((ISNULL(pha.AdjustmentMinutes, 0) / 60.0)) as ForecastHours,\\r\\n                SUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours,\\r\\n                SUM((ISNULL(pht.PlannedMinutes, 0) / 60.0) * ISNULL(eid.UnitPriceIncome, 0)) as PlannedHoursIncome\\r\\n            FROM   \\r\\n                dbo.PlannedHoursTotal pht\\r\\n                LEFT OUTER JOIN dbo.PlannedHoursAdjustment pha on (pha.[User] = pht.[User])\\r\\n                LEFT OUTER JOIN dbo.[User] u ON (u.Oid = pht.[User])\\r\\n                LEFT OUTER JOIN dbo.[UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n                LEFT OUTER JOIN dbo.[UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n                LEFT OUTER JOIN dbo.[UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup)\\r\\n                LEFT OUTER JOIN dbo.[Department] utdp ON (utdp.Oid = ut.Department)\\r\\n                LEFT OUTER JOIN \\r\\n                (\\r\\n                    SELECT \\r\\n                        utgdp.UserTypologyGroup,\\r\\n                        Max(utgdp.Department) as Department \\r\\n                    FROM \\r\\n                        [UserTypologyGroupDepartment] utgdp \\r\\n                    GROUP BY\\r\\n                        utgdp.UserTypologyGroup\\r\\n                ) utgpdp ON (utgpdp.UserTypologyGroup = utgp.Oid)\\r\\n                LEFT OUTER JOIN dbo.Department utgdp ON (utgdp.Oid = utgpdp.Department)\\r\\n                LEFT OUTER JOIN dbo.Estimate e ON (e.[Contract] = (select p.[Contract] from dbo.Project p where p.Oid = @ProjectId))\\r\\n                LEFT OUTER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n                LEFT OUTER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2 AND ((eid.Department = utdp.Oid OR eid.Department = utgdp.Oid) AND (eid.UserTypologyGroup = utgp.Oid OR eid.UserTypologyGroup = utg.Oid))),\\r\\n                dbo.Project p\\r\\n            WHERE\\r\\n                pht.GCRecord is null\\r\\n                AND p.Oid = pht.Project\\r\\n                /*[/ProjectFilter]*/ and pht.[Project] = @ProjectId /*[/ProjectFilter]*/\\r\\n            GROUP BY \\r\\n                ISNULL(utdp.[Name], utgdp.[Name]),\\r\\n                ISNULL(utgp.[Name], utg.[Name]),\\r\\n                pht.[User]\\r\\n        ) v left outer join [User] u on u.Oid = v.[User]\\r\\n        GROUP BY\\r\\n            v.Department,\\r\\n            v.TypologyGroup,\\r\\n            u.[Name]\\r\\n    ) v\\r\\n) v\\r\\n    left outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = 'RateCardRead')\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Estimate_Service_Deliverable_TypologyGroup/execute",
      "Configuration": "{\r\n    \"height\": \"300\",\r\n    \"stateStoring\": {\r\n        \"enabled\": false\r\n    },\r\n    \"selection\": {\r\n        \"mode\": \"single\"\r\n    },\r\n    \"filterRow\": {\r\n        \"visible\": true\r\n    },\r\n    \"grouping\": {\r\n        \"autoExpandAll\": true\r\n    },\r\n    \"columnsAutoWidth\": true,\r\n    \"allowColumnResizing\": false,\r\n    \"columnResizingMode\": \"nextColumn\",\r\n    \"scrolling\": {\r\n        \"mode\": \"virtual\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Department\",\r\n            \"caption\": \"Department\",\r\n            \"groupIndex\": 0\r\n        },\r\n        {\r\n            \"dataField\": \"UserName\",\r\n            \"caption\": \"Name\",\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"TypologyGroup\",\r\n            \"caption\": \"Typology Group\",\r\n            \"width\": 150\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHours\",\r\n            \"caption\": \"Contracted\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedHoursIncome\",\r\n            \"caption\": \"Contracted Income\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ContractedActualIncomeVariation\",\r\n            \"caption\": \"Contracted - Actual\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualContractedPercentage\",\r\n            \"caption\": \"Actual / Contracted\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedHours\",\r\n            \"caption\": \"Planned\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"PlannedHoursIncome\",\r\n            \"caption\": \"Planned Income\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlannedPercentage\",\r\n            \"caption\": \"Actual / Planned\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"caption\": \"Actual\",\r\n            \"alignment\": \"center\",\r\n            \"columns\": [\r\n                {\r\n                    \"dataField\": \"BillableHours\",\r\n                    \"caption\": \"Billable\",\r\n                    \"alignment\": \"right\",\r\n                    \"dataType\": \"number\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 100\r\n                },\r\n                {\r\n                    \"dataField\": \"NonBillableHours\",\r\n                    \"caption\": \"Non Billable\",\r\n                    \"alignment\": \"right\",\r\n                    \"dataType\": \"number\",\r\n                    \"format\": \"#,##0.00\",\r\n                    \"width\": 100\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHoursCost\",\r\n            \"caption\": \"Actual Cost\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ActualHoursIncome\",\r\n            \"caption\": \"Actual Income\",\r\n            \"dataType\": \"number\",\r\n            \"format\": {\r\n                \"type\": \"currency\",\r\n                \"precision\": 2\r\n            },\r\n            \"displayFormat\": \"{0}\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ForecastHours\",\r\n            \"caption\": \"Forecast\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecast\",\r\n            \"caption\": \"Actual + Forecast\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"#,##0.00\",\r\n            \"allowGrouping\": false,\r\n            \"width\": 125\r\n        },\r\n        {\r\n            \"dataField\": \"ActualBurnPercentage\",\r\n            \"caption\": \"Actual Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"width\": 100\r\n        },\r\n        {\r\n            \"dataField\": \"ActualPlusForecastBurnPercentage\",\r\n            \"caption\": \"Actual + Forecast Burn %\",\r\n            \"dataType\": \"number\",\r\n            \"format\": \"percent\",\r\n            \"allowGrouping\": false,\r\n            \"cellTemplate\": \"function(e, i) { SW.setRAG(e, (i.value * 100.0).toFixed(1) + '%', i.value >= 1.2, i.value < 0.8, (i.value >= 0.8 && i.value < 1.2), true); }\",\r\n            \"width\": 175\r\n        }\r\n    ],\r\n    \"summary\": {\r\n        \"calculateCustomSummary\": \"function(options) {            if (options.name === 'ActualBurn') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]) * 100;                        else                            options.totalValue = 0;                            break;                }            }            if (options.name === 'ActualForecastBurn') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualPlusForecast;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = (options.totalValue[0] / options.totalValue[1]) * 100;                        else                            options.totalValue = 0;                            break;                }            }            if(options.name == 'ActualPlannedPercentageSummary') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0, 0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                        options.totalValue[1] = options.totalValue[1] + options.value.PlannedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = options.totalValue[0] / options.totalValue[1];                        else                            options.totalValue = 0;                            break;                }            }            if(options.name == 'ActualContractedPercentageSummary') {                switch(options.summaryProcess) {                    case 'start':                        options.totalValue = [0,0];                        break;                    case 'calculate':                        options.totalValue[0] = options.totalValue[0] + options.value.ActualHours;                        options.totalValue[1] = options.totalValue[1] + options.value.ContractedHours;                        break;                    case 'finalize':                        if(Number(options.totalValue[1]) > 0)                            options.totalValue = options.totalValue[0] / options.totalValue[1];                        else                            options.totalValue = 0;                            break;                }            }        }\",\r\n        \"totalItems\": [\r\n            {\r\n                \"name\": \"ActualForecastBurn\",\r\n                \"showInColumn\": \"Actual + Forecast Burn %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\"\r\n            },\r\n            {\r\n                \"name\": \"ActualBurn\",\r\n                \"showInColumn\": \"Actual Burn %\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\"\r\n            },\r\n            {\r\n                \"name\": \"ActualPlannedPercentageSummary\",\r\n                \"showInColumn\": \"ActualPlannedPercentage\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\"\r\n            },\r\n            {\r\n                \"name\": \"ActualContractedPercentageSummary\",\r\n                \"showInColumn\": \"ActualContractedPercentage\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"summaryType\": \"custom\"\r\n            },\r\n            {\r\n                \"column\": \"Department\",\r\n                \"summaryType\": \"count\"\r\n            },\r\n            {\r\n                \"column\": \"TypologyGroup\",\r\n                \"summaryType\": \"count\"\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualHoursCost\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ActualHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedHours\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"Forecast\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"PlannedHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedHours\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedHoursIncome\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            },\r\n            {\r\n                \"column\": \"ContractedActualIncomeVariation\",\r\n                \"summaryType\": \"sum\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\"\r\n            }\r\n        ],\r\n        \"groupItems\": [\r\n            {\r\n                \"column\": \"Contracted\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Contracted Income\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Contracted - Actual\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual / Contracted\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual Burn %\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast Burn %\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Planned\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual + Forecast\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Forecast\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Planned Income\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual / Planned\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"percent\",\r\n                    \"precision\": 1\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Billable\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Non Billable\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": \"#,##0.00\",\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual Cost\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            },\r\n            {\r\n                \"column\": \"Actual Income\",\r\n                \"summaryType\": \"max\",\r\n                \"valueFormat\": {\r\n                    \"type\": \"currency\",\r\n                    \"precision\": 2\r\n                },\r\n                \"displayFormat\": \"{0}\",\r\n                \"showInGroupFooter\": false,\r\n                \"alignByColumn\": true\r\n            }\r\n        ]\r\n    }\r\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "acff4977-e7d1-4ff9-b9a3-05aa2e5004af",
      "Name": "Department Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 5,
      "Parameters": "[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"\\r\\nSELECT\\r\\n    v.DepartmentName,\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours]) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.Department d\\r\\n\\tWHERE\\r\\n\\t\\te.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId)\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND d.Oid = e.Department\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eid.UnitPriceIncome, 0)) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tleft outer join Department d on t.DepartmentId = d.Oid\\r\\n\\t\\tLEFT OUTER JOIN dbo.Estimate e ON (e.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId))\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2 AND (eid.Department = t.DepartmentId AND eid.UserTypologyGroup = t.TypologyGroupId))\\r\\n\\tWHERE\\r\\n\\t\\t/*[/ProjectFilter]*/ t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\td.[Name] as DepartmentName,\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tleft outer join Department d on d.Oid = pht.Department,\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ProjectFilter]*/ and p.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\td.[Name]\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.DepartmentName\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n    \"type\": \"doughnut\",\n    \"series\": {\n        \"argumentField\": \"DepartmentName\",\n        \"valueField\": \"BillableHours\",\n        \"label\": {\n            \"visible\": false,\n            \"format\": \"fixedPoint\",\n            \"connector\": {\n                \"visible\": true,\n                \"width\": 1\n            }\n        },\n        \"smallValuesGrouping\": {\n            \"mode\": \"topN\",\n            \"topCount\": 10\n        }\n    },\n    \"size\": {\n        \"height\": 250\n    },\n    \"legend\": {\n        \"visible\": true,\n        \"horizontalAlignment\": \"left\",\n        \"verticalAlignment\": \"middle\",\n        \"itemTextPosition\": \"right\",\n        \"paddingLeftRight\": 0,\n        \"font\": {\n            \"size\": 8,\n            \"family\": \"Varela Round\"\n        }\n    }\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "cbbeb0fc-abb2-4d5e-bf75-68e52c411331",
      "Name": "Monthly Distribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 8,
      "Order": 2,
      "Parameters": "[{\"WidgetSubTitle\":\"Planned Time, Utilization & Income\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":270,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedTimeGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"with met as\\r\\n(\\r\\n    select  est.Oid as EstimateOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by est.Oid) as Months\\r\\n    from    Contract cnt, Estimate est, YearDay yrd\\r\\n    where   est.Contract = cnt.Oid and\\r\\n            yrd.Day between cast(est.Date as date) and cast(est.Expiration as date) and\\r\\n            Day(yrd.Day) = Day(est.Date)\\r\\n            /*[ProjectFilter]*/ and cnt.Oid = (select [Contract] from Project where Oid = @ProjectId) /*[/ProjectFilter]*/\\r\\n),\\r\\nmpj as\\r\\n(\\r\\n    select  prj.Oid as ProjectOid,\\r\\n            datefromparts(Year(yrd.Day), Month(yrd.Day), 1) as [Date],\\r\\n            count(*) over (partition by prj.Oid) as Months\\r\\n    from    Contract cnt, Project prj, YearDay yrd\\r\\n    where   prj.Contract = cnt.Oid and\\r\\n            yrd.Day between cast(prj.BeginDate as date) and cast(prj.EndDate as date) and\\r\\n            Day(yrd.Day) = Day(prj.BeginDate)\\r\\n            /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n)\\r\\nselect  v.[Date], \\r\\n        IIF(n.RoleId is not null, v.ResourcesWithVatIncome, null) as ResourcesWithVatIncome,\\r\\n        IIF(n.RoleId is not null, v.ResourcesWithVatCost, null) as ResourcesWithVatCost,\\r\\n        v.ContractedTime,\\r\\n        v.PlannedTime,\\r\\n        v.ForecastTime,\\r\\n        v.ActualTime,\\r\\n        v.ContractedTimeGrandTotal,\\r\\n        v.PlannedTimeGrandTotal,\\r\\n        v.ForecastTimeGrandTotal,\\r\\n        v.ActualTimeGrandTotal\\r\\nfrom\\r\\n(\\r\\n    select  [Date], \\r\\n            sum(ResourcesWithVatIncome) as ResourcesWithVatIncome,\\r\\n            sum(ResourcesWithVatCost) as ResourcesWithVatCost,\\r\\n            sum(ContractedTime) as ContractedTime,\\r\\n            sum(PlannedTime) as PlannedTime,\\r\\n            sum(ForecastTime) as ForecastTime,\\r\\n            sum(ActualTime) as ActualTime,\\r\\n            sum(sum(ContractedTime)) over() as ContractedTimeGrandTotal,\\r\\n            sum(sum(PlannedTime)) over() as PlannedTimeGrandTotal,\\r\\n            sum(sum(ForecastTime)) over() as ForecastTimeGrandTotal,\\r\\n            sum(sum(ActualTime)) over() as ActualTimeGrandTotal\\r\\n    from    (\\r\\n                select  [Date],\\r\\n                        sum(ResourcesWithVatIncome) / max(Months) as ResourcesWithVatIncome,\\r\\n                        sum(ResourcesWithVatCost) / max(Months) as ResourcesWithVatCost,\\r\\n                        sum(ContractedTime) / max(Months) as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    (\\r\\n                        select  est.Oid as EstimateOid,\\r\\n                                sum(edt.ValueWithVatIncome * eit.Retainer) as ResourcesWithVatIncome,\\r\\n                                sum(edt.ValueWithVatCost * eit.Retainer) as ResourcesWithVatCost,\\r\\n                                sum(edt.Hours * eit.Retainer) as ContractedTime\\r\\n                        from    Estimate est, EstimateItem eit, EstimateItemDetail edt, Contract cnt\\r\\n                        where   est.Contract = cnt.Oid and\\r\\n                                eit.Estimate = est.Oid and\\r\\n                                edt.EstimateItem = eit.Oid and\\r\\n                                edt.Type = 2\\r\\n                                /*[ProjectFilter]*/ and cnt.Oid = (select [Contract] from Project where Oid = @ProjectId) /*[/ProjectFilter]*/\\r\\n                        group by est.Oid\\r\\n                        ) t, met\\r\\n                where   met.EstimateOid = t.EstimateOid\\r\\n                group by t.EstimateOid, [Date]  \\r\\n                union all\\r\\n                select  [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        sum(PlannedTime) / max(Months) as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    (\\r\\n                        select  prj.Oid as ProjectOid,\\r\\n                                sum(pht.PlannedMinutes / 60.0) as PlannedTime\\r\\n                        from    PlannedHoursTotal pht, Project prj, Contract cnt\\r\\n                        where   prj.Oid = pht.Project and\\r\\n                                prj.Contract = cnt.Oid and\\r\\n                                pht.GCRecord is null \\r\\n                                /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                        group by prj.Oid\\r\\n                        ) t, mpj\\r\\n                where   mpj.ProjectOid = t.ProjectOid\\r\\n                group by t.ProjectOid, [Date]  \\r\\n                union all\\r\\n                select  datefromparts(Year(pha.Date), Month(pha.Date), 1) as [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        sum(pha.AdjustmentMinutes / 60.0) as ForecastTime,\\r\\n                        0 as ActualTime\\r\\n                from    PlannedHoursAdjustment pha, Project prj, Contract cnt\\r\\n                where   prj.Oid = pha.Project and\\r\\n                        prj.Contract = cnt.Oid and\\r\\n                        pha.GCRecord is null \\r\\n                        /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                group by Year(pha.Date), Month(pha.Date)\\r\\n                union all\\r\\n                select  datefromparts(Year(tim.[Date]), Month(tim.[Date]), 1) as [Date],\\r\\n                        0 as ResourcesWithVatIncome,\\r\\n                        0 as ResourcesWithVatCost,\\r\\n                        0 as ContractedTime,\\r\\n                        0 as PlannedTime,\\r\\n                        0 as ForecastTime,\\r\\n                        sum(DurationHours + DurationMinutes / 60.0) as ActualTime\\r\\n                from    Timesheet tim, Project prj, Contract cnt\\r\\n                where   prj.Oid = tim.Project and\\r\\n                        prj.Contract = cnt.Oid\\r\\n                        /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                group by Year(tim.[Date]), Month(tim.[Date])\\r\\n            ) t\\r\\n    group by [Date]\\r\\n) v\\r\\n    left outer join Analytics.[Authorization](@CurrentUserId) n ON (n.RoleName = 'RateCardRead')\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_Month/execute",
      "Configuration": "{\n    \"size\": {\n        \"height\": 300\n    },\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"Date\"\n    },\n    \"commonPaneSettings\": {\n        \"border\": {\n            \"visible\": true\n        }\n    },\n    \"argumentAxis\": {\n        \"argumentType\": \"datetime\",\n        \"type\": \"discrete\",\n        \"label\": {\n            \"format\": \"month\",\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"legend\": {\n        \"rowCount\": 1,\n        \"verticalAlignment\": \"bottom\",\n        \"horizontalAlignment\": \"center\"\n    },\n    \"panes\": [\n        {\n            \"name\": \"Value\"\n        },\n        {\n            \"name\": \"Time\"\n        }\n    ],\n    \"valueAxis\": [\n        {\n            \"name\": \"Value\",\n            \"pane\": \"Value\",\n            \"title\": \"Value\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        },\n        {\n            \"name\": \"Time\",\n            \"pane\": \"Time\",\n            \"title\": \"Time\",\n            \"label\": {\n                \"font\": {\n                    \"family\": \"Varela Round\"\n                }\n            }\n        }\n    ],\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatIncome\",\n            \"name\": \"Income\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ResourcesWithVatCost\",\n            \"name\": \"Cost\",\n            \"pane\": \"Value\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ContractedTime\",\n            \"name\": \"Contracted Time\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ForecastTime\",\n            \"name\": \"Forecast\",\n            \"pane\": \"Time\"\n        },\n        {\n            \"type\": \"bar\",\n            \"valueField\": \"ActualTime\",\n            \"name\": \"Actual Time\",\n            \"pane\": \"Time\"\n        }\n    ]\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "ac57a1cd-a817-49c8-a740-910624b4eb8a",
      "Name": "Typology Group Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 12,
      "Order": 7,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Contracted Time\",\"metricFieldValue\":\"TotalContractedTime\"},{\"visible\":true,\"metricName\":\"Planned Time\",\"metricFieldValue\":\"TotalPlannedTime\"},{\"visible\":true,\"metricName\":\"Actual Time\",\"metricFieldValue\":\"TotalActualTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  *,\\r\\n        sum(ContractedTime) over() as TotalContractedTime,\\r\\n        sum(PlannedTime) over() as TotalPlannedTime,\\r\\n        sum(ActualTime) over() as TotalActualTime\\r\\nfrom    (\\r\\n        select  TypologyGroup,\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(PlannedTime) as PlannedTime,\\r\\n                sum(ActualTime) as ActualTime\\r\\n        from    (\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                edt.Hours * eit.Retainer as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                0 as ActualTime\\r\\n                        from    Estimate est, EstimateItem eit, Contract cnt, EstimateItemDetail edt, UserTypologyGroup utg\\r\\n                        where   est.Contract = cnt.Oid and\\r\\n                                eit.Estimate = est.Oid and\\r\\n                                edt.EstimateItem = eit.Oid and\\r\\n                                utg.Oid = edt.UserTypologyGroup and\\r\\n                                edt.Type = 2\\r\\n                                /*[ProjectFilter]*/ and cnt.Oid = (select [Contract] from Project where Oid = @ProjectId) /*[/ProjectFilter]*/\\r\\n                        union all\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                0 as ContractedTime,\\r\\n                                pht.PlannedMinutes / 60.0 as PlannedTime,\\r\\n                                0 as ActualTime\\r\\n                        from    PlannedHoursTotal pht, Project prj, Contract cnt, UserTypologyGroup utg\\r\\n                        where   prj.Oid = pht.Project and\\r\\n                                prj.Contract = cnt.Oid and\\r\\n                                utg.Oid = pht.UserTypologyGroup and\\r\\n                                pht.GCRecord is null \\r\\n                                /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                        union all\\r\\n                        select  utg.Name as TypologyGroup,\\r\\n                                0 as ContractedTime,\\r\\n                                0 as PlannedTime,\\r\\n                                DurationHours + DurationMinutes / 60.0 as ActualTime\\r\\n                        from    Timesheet tim, Project prj, Contract cnt, [User] usr, UserTypology ust, UserTypologyGroup utg\\r\\n                        where   tim.Project = prj.Oid and \\r\\n                                prj.Contract = cnt.Oid and\\r\\n                                usr.Oid = tim.CreatedBy and\\r\\n                                ust.Oid = usr.Typology and\\r\\n                                utg.Oid = ust.UserTypologyGroup\\r\\n                                /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                ) t\\r\\n        group by TypologyGroup\\r\\n        ) t\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Typology Group/execute",
      "Configuration": "{\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"TypologyGroup\"\n  },\n  \"argumentAxis\": {\n    \"label\": {\n      \"font\": {\n        \"size\": 8,\n        \"family\": \"Varela Round\"\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"label\": {\n      \"font\": {\n        \"family\": \"Varela Round\"\n      }\n    }\n  },\n  \"series\": [\n    {\n      \"type\": \"area\",\n      \"valueField\": \"PlannedTime\",\n      \"name\": \"Planned Time\"\n    },\n    {\n      \"type\": \"bar\",\n      \"valueField\": \"ActualTime\",\n      \"name\": \"Actual Time\"\n    },\n    {\n      \"type\": \"line\",\n      \"valueField\": \"ContractedTime\",\n      \"name\": \"Contracted Time\",\n      \"point\": {\n    \"symbol\": \"triangleDown\",\n        \"color\":\"#a5bdd7\"\n      }\n    }\n  ],\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\": true,\n    \"orientation\":\"horizontal\",\n    \"verticalAlignment\":\"bottom\",\n    \"horizontalAlignment\":\"center\",\n    \"font\": {\n      \"family\": \"Varela Round\"\n    }\n  }\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "60e0dc12-dc54-446e-8fb3-93388e0d04fa",
      "Name": "Typology Group Contribution",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 6,
      "Parameters": "[{\"WidgetSubTitle\":\"Utilization\",\"WidgetType\":\"pie\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Actual\",\"metricFieldValue\":\"BillableHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Planned\",\"metricFieldValue\":\"PlannedHoursGrandTotal\"},{\"visible\":true,\"metricName\":\"# Contracted\",\"metricFieldValue\":\"ContractedHoursGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"SELECT\\r\\n    v.[TypologyGroup],\\r\\n\\tsum(v.[ActualHours]) as [ActualHours],\\r\\n    sum(v.[BillableHours]) as BillableHours,\\r\\n    sum(v.BillableHoursIncome) as BillableHoursIncome,\\r\\n\\tsum(v.ContractedHours) as ContractedHours,\\r\\n\\tsum(v.PlannedHours) as PlannedHours,\\r\\n\\tIIF(sum(v.ContractedHours) > 0, sum(v.BillableHours) / sum(v.ContractedHours), 0.0) as ActualContractedPercentage,\\r\\n\\tIIF(sum(v.PlannedHours) > 0, sum(v.BillableHours) / sum(v.PlannedHours), 0.0) as ActualPlannedPercentage,\\r\\n\\tsum(sum(v.[BillableHours])) OVER () as BillableHoursGrandTotal,\\r\\n    sum(sum(v.[PlannedHours])) OVER () as PlannedHoursGrandTotal,\\r\\n    sum(sum(v.[ContractedHours])) OVER () as ContractedHoursGrandTotal\\r\\nFROM  \\r\\n(\\r\\n\\tSELECT\\r\\n\\t\\tutg.[Name] as [TypologyGroup],\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\tsum(eid.[Hours]) as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.Estimate e,\\r\\n\\t\\tdbo.EstimateItem ei,\\r\\n\\t\\tdbo.EstimateItemDetail eid,\\r\\n\\t\\tdbo.UserTypologyGroup utg\\r\\n\\tWHERE\\r\\n\\t\\te.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId)\\r\\n\\t\\tAND ei.Estimate = e.Oid\\r\\n\\t\\tAND eid.EstimateItem = ei.Oid AND eid.[Type] = 2\\r\\n\\t\\tAND utg.Oid = eid.UserTypologyGroup\\r\\n\\tGROUP BY \\r\\n\\t\\tutg.[Name]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tt.[TypologyGroup],\\r\\n\\t\\tsum(t.[Hours]) as [ActualHours],\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours))) as BillableHours,\\r\\n\\t\\tsum((t.[Hours] - (t.NewBusinessHours + t.AdministrativeHours)) * ISNULL(eid.UnitPriceIncome, 0)) as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\t0 as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.SkillAnalyticsTimeUtilization t\\r\\n\\t\\tLEFT OUTER JOIN dbo.Estimate e ON (e.[Contract] = (SELECT [Contract] FROM Project WHERE Oid = @ProjectId))\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItem ei on (ei.Estimate = e.Oid)\\r\\n\\t\\tLEFT OUTER JOIN dbo.EstimateItemDetail eid on (eid.EstimateItem = ei.Oid AND eid.[Type] = 2 AND (eid.Department = t.DepartmentId AND eid.UserTypologyGroup = t.TypologyGroupId))\\r\\n\\tWHERE\\r\\n\\t\\tt.[TypologyGroup] IS NOT NULL\\r\\n\\t\\t/*[/ProjectFilter]*/ and t.ProjectId = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tt.[TypologyGroup]\\r\\n\\tUNION ALL\\r\\n\\tSELECT\\r\\n\\t\\tISNULL(utgp.[Name], utg.[Name]) as [TypologyGroup],\\r\\n\\t\\t0 as [ActualHours],\\r\\n\\t\\t0 as BillableHours,\\r\\n\\t\\t0 as BillableHoursIncome,\\r\\n\\t\\t0 as ContractedHours,\\r\\n\\t\\tSUM((ISNULL(pht.PlannedMinutes, 0) / 60.0)) as PlannedHours\\r\\n\\tFROM   \\r\\n\\t\\tdbo.PlannedHoursTotal pht\\r\\n\\t\\tLEFT OUTER JOIN [User] u ON (u.Oid = pht.[User])\\r\\n\\t\\tLEFT OUTER JOIN [UserTypology] ut ON (ut.Oid = u.Typology)\\r\\n\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utg ON (utg.Oid = ut.UserTypologyGroup)\\r\\n\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utgp ON (utgp.Oid = pht.UserTypologyGroup),\\r\\n\\t\\tdbo.Project p\\r\\n\\tWHERE\\r\\n\\t\\tpht.GCRecord is null\\r\\n\\t\\tAND p.Oid = pht.Project\\r\\n\\t\\t/*[/ProjectFilter]*/ and p.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n\\tGROUP BY \\r\\n\\t\\tISNULL(utgp.[Name], utg.[Name])\\r\\n) v\\r\\nGROUP BY\\r\\n\\tv.TypologyGroup\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Analytics_Contracts_Per_TypologyGroup/execute",
      "Configuration": "{\n  \"type\": \"doughnut\",\n  \"series\": {\n    \"argumentField\": \"TypologyGroup\",\n    \"valueField\": \"BillableHours\",\n    \"label\": {\n      \"visible\": false,\n      \"format\": \"fixedPoint\",\n      \"connector\": {\n        \"visible\": true,\n        \"width\": 1\n      }\n    },\n    \"smallValuesGrouping\": {\n                \"mode\": \"topN\",\n                \"topCount\": 10\n            }\n  },\n  \"size\": {\n    \"height\": 250\n  },\n  \"legend\": {\n    \"visible\":true,\n    \"horizontalAlignment\": \"left\",\n    \"verticalAlignment\": \"middle\",\n    \"itemTextPosition\" : \"right\",\n    \"paddingLeftRight\" : 0,\n    \"font\": {\n      \"size\": 8,\n      \"family\": \"Varela Round\"\n    }\n  }\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    },
    {
      "Id": "39345f16-af32-4657-96bd-bfad7947f299",
      "Name": "User Burn",
      "Active": true,
      "UseQuery": false,
      "Query": null,
      "Size": 4,
      "Order": 3,
      "Parameters": "[{\"WidgetSubTitle\":\"Actual Time\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":200,\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"Billable Time\",\"metricFieldValue\":\"TotalBillableTime\"},{\"visible\":true,\"metricName\":\"Non-billable Time\",\"metricFieldValue\":\"TotalNonBillableTime\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  *,\\r\\n        sum(BillableTime) over() as TotalBillableTime,\\r\\n        sum(NonBillableTime) over() as TotalNonBillableTime\\r\\nfrom    (\\r\\n        select  [User],\\r\\n                sum(ContractedTime) as ContractedTime,\\r\\n                sum(BillableTime) as BillableTime,\\r\\n                sum(NonBillableTime) as NonBillableTime\\r\\n        from    (\\r\\n                select  usr.Name as [User],\\r\\n                        edt.Hours as ContractedTime,\\r\\n                        0 as BillableTime,\\r\\n                        0 as NonBillableTime\\r\\n                from    Estimate est, EstimateItem eit, Contract cnt,\\r\\n                        EstimateItemDetail edt left outer join [User] usr on usr.Oid = edt.[User]\\r\\n                where   est.Contract = cnt.Oid and\\r\\n                        eit.Estimate = est.Oid and\\r\\n                        edt.EstimateItem = eit.Oid and\\r\\n                        edt.Type = 2\\r\\n                        /*[ProjectFilter]*/ and cnt.Oid = (select [Contract] from Project where Oid = @ProjectId) /*[/ProjectFilter]*/\\r\\n                union all\\r\\n                select  usr.Name as [User],\\r\\n                        0 as ContractedTime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, DurationHours + DurationMinutes / 60.0, 0) as Billabletime,\\r\\n                        iif(tim.Billable = 1 or tim.Billable is null, 0, DurationHours + DurationMinutes / 60.0) as NonBillabletime\\r\\n                from    Timesheet tim, Project prj, Contract cnt, [User] usr\\r\\n                where   tim.Project = prj.Oid and \\r\\n                        prj.Contract = cnt.Oid and\\r\\n                        usr.Oid = tim.CreatedBy\\r\\n                        /*[ProjectFilter]*/ and prj.Oid = @ProjectId /*[/ProjectFilter]*/\\r\\n                ) t\\r\\n        group by [User]\\r\\n        ) t\"}},\"Filters\":{},\"QueryConfiguration\":{\"PreviousPeriod\":{\"Show\":false,\"KeyFieldName\":\"\",\"Type\":0},\"RequiredFilters\":[]}}]",
      "DashboardComponentType": {
        "Id": "c666ba5e-8578-4132-86a5-0f96c665000d",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": "globalQuery/Contract - Resources - Users/execute",
      "Configuration": "{\n    \"commonSeriesSettings\": {\n        \"argumentField\": \"User\",\n        \"type\": \"stackedbar\"\n    },\n    \"argumentAxis\": {\n        \"label\": {\n            \"font\": {\n                \"size\": 8,\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"label\": {\n            \"font\": {\n                \"family\": \"Varela Round\"\n            }\n        }\n    },\n    \"series\": [\n        {\n            \"valueField\": \"BillableTime\",\n            \"name\": \"Billable Time\"\n        },\n        {\n            \"valueField\": \"NonBillableTime\",\n            \"name\": \"Non-billable Time\"\n        }\n    ],\n    \"size\": {\n        \"height\": 300\n    },\n    \"rotated\": true\n}",
      "DashboardDefinitionId": "dddd00f6-f9d1-4280-97e9-572445cb1fb0"
    }
  ]
}
