{
    "DashboardDefinitionRoles": [
        {
            "AccessRoleId": "4bed4267-b796-440d-bfe0-1724432e840e",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Prodigious - Perfil Gerente de Opera??es"
        },
        {
            "AccessRoleId": "c299148e-227f-45ce-9896-88e53b0f5346",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Sapient Ag2 - Perfil Opera??es"
        },
        {
            "AccessRoleId": "ca7368b1-12f3-4f76-af86-1804a86de72a",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Sapient Ag2 - Perfil Director Financeiro"
        },
        {
            "AccessRoleId": "916bd330-2226-45e5-9ce3-01d5330ed1ef",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Administrator"
        },
        {
            "AccessRoleId": "1a2c13ce-8a94-4842-85a7-fc1e20643b17",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Sapient AG2 - Perfil Lider do Projeto"
        },
        {
            "AccessRoleId": "4bed4267-b796-440d-bfe0-1724432e840e",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87",
            "AccessRoleName": "Prodigious - Perfil Gerente de Opera??es"
        }
    ],
    "Id": "5d046645-ce15-4442-952a-3f7c88077f87",
    "Name": "Revis?o Or?ament?ria",
    "Active": true,
    "Location": 1,
    "DocumentId": "d1650714-7d21-4368-994e-d9c951981825",
    "DocumentName": "Project",
    "DocumentsConfiguration": null,
    "Templates": [],
    "DashboardDefinitionComponents": [
        {
            "Id": "c43de406-db99-4cb1-94c8-1f6a964e55b6",
            "Name": "Custo Incorrido",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 2,
            "Parameters": "[{\"WidgetSubTitle\":\"Realizado / Revisado (A/B) - Realizado Real / Revisado Real (C/D)\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Revenue\",\"metricFieldValue\":\"ForecastSellGrandTotal\"},{\"visible\":true,\"metricName\":\"# Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH ProjectData AS\\n(\\n\\tSELECT\\n\\t\\tp.Oid as ProjectId,\\n\\t\\tphp.StartDate,\\n\\t\\tphp.EndDate,\\n\\t\\tDATEFROMPARTS(Year(php.[EndDate]), Month(php.[EndDate]), 1) as [Date],\\n\\t\\tISNULL(e.ProjectTotalCost, 0.0) as ProjectTotalCost,\\n\\t\\tISNULL(e.ProjectTotalIncome, 0.0) as ProjectTotalIncome\\n\\tFROM\\n\\t\\tProject p\\n\\t\\tLEFT OUTER JOIN\\n\\t\\t(\\n\\t\\t\\tSELECT\\n\\t\\t\\t\\te.Project,\\n\\t\\t\\t\\tsum(iif(wst.[Status] = 10 or wst.[Status] = 14, e.ValueWithoutVatCost, 0)) as ProjectTotalCost,\\n\\t\\t\\t\\tsum(iif(wst.[Status] = 10 or wst.[Status] = 14, e.ValueWithVatIncome, 0)) as ProjectTotalIncome\\n\\t\\t\\tFROM\\n\\t\\t\\t\\tEstimate e,\\n\\t\\t\\t\\tWorkflowState wfs,\\n\\t\\t\\t\\tWorkflowStateType wst\\n\\t\\t\\tWHERE\\n\\t\\t\\t\\te.GCRecord is null\\n\\t\\t\\t\\tAND e.Project = @ProjectId\\n\\t\\t\\t\\tAND e.WorkflowState = wfs.Oid\\n\\t\\t\\t\\tAND wfs.WorkflowStateType = wst.Oid\\n\\t\\t\\tGROUP BY \\n\\t\\t\\t\\te.Project\\n\\t\\t) e ON (e.Project = p.Oid),\\n\\t\\tPlannedHoursPeriod php\\n\\tWHERE\\n\\t\\tphp.GCRecord IS NULL\\n\\t\\tAND php.Project = p.Oid\\n\\t\\tAND p.Oid = @ProjectId\\n)\\nSELECT\\n\\tv.*,\\n\\tIIF(ISNULL(v.ProjectReviewedForecast, 0.0) \u003e 0, (v.RealizedForecast / v.ProjectReviewedForecast), 0.0) as RealizedPercentage,\\n\\tIIF(ISNULL(v.ProjectReviewedForecast, 0.0) \u003e 0, ((sum(v.RealizedForecast) over (partition by v.ProjectId order by v.[Date] rows unbounded preceding)) / v.ProjectReviewedForecast), 0.0) as RealizedPercentageRunningTotal,\\n\\tIIF(ISNULL(v.ProjectReviewedReal, 0.0) \u003e 0, (v.RealizedReal / v.ProjectReviewedReal), 0.0) as RealizedNoForecastPercentage,\\n\\tIIF(ISNULL(v.ProjectReviewedReal, 0.0) \u003e 0, ((sum(v.RealizedReal) over (partition by v.ProjectId order by v.[Date]  rows unbounded preceding)) / v.ProjectReviewedReal), 0.0) as RealizedNoForecastPercentageRunningTotal\\nFROM\\n(\\n\\tSELECT\\n\\t\\tv.*,\\n\\t\\tSUM(v.ReviewedForecastProject) OVER (PARTITION BY v.ProjectId) as ProjectReviewedForecast,\\n\\t\\tSUM(v.ReviewedRealProject) OVER (PARTITION BY v.ProjectId) as ProjectReviewedReal\\n\\tFROM\\n\\t(\\n\\t\\tSELECT\\n\\t\\t\\tv.ProjectId,\\n\\t\\t\\tv.StartDate,\\n\\t\\t\\tv.EndDate,\\n\\t\\t\\tv.[Date],\\n\\t\\t\\tv.ActualHoursCosts,\\n\\t\\t\\tv.PlannedHoursCosts,\\n\\t\\t\\tv.SuppliersHoursCosts,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as RealizedForecast,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as RealizedReal,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE\\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as ReviewedForecastProject,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE\\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as ReviewedRealProject\\n\\t\\tFROM\\n\\t\\t(\\n\\t\\t\\tSELECT\\n\\t\\t\\t\\tv.ProjectId,\\n\\t\\t\\t\\tv.StartDate,\\n\\t\\t\\t\\tv.EndDate,\\n\\t\\t\\t\\tv.[Date],\\n\\t\\t\\t\\tMAX(v.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\tMAX(v.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\tSUM(ISNULL(v.ActualHoursCosts, 0.0)) as ActualHoursCosts,\\n\\t\\t\\t\\tSUM(ISNULL(v.PlannedHoursCosts, 0.0)) as PlannedHoursCosts,\\n\\t\\t\\t\\tSUM(ISNULL(v.SuppliersCosts, 0.0)) as SuppliersHoursCosts\\n\\t\\t\\tFROM\\n\\t\\t\\t(\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tpj.ProjectTotalCost,\\n\\t\\t\\t\\t\\tpj.ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\tSUM((ISNULL(t.DurationHours * 60.0 + t.DurationMinutes, 0.0) / 60.0) * ISNULL(ISNULL(ISNULL(phru.Rate, phrut.Rate), tur.Rate), 0.0)) as ActualHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tTimesheet t\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN [User] u ON (u.Oid = t.CreatedBy)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypology] ut on (ut.Oid = u.Typology)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User] as UserId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User]\\n\\t\\t\\t\\t\\t) phru ON (phru.UserId = u.Oid AND phru.Project = t.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup\\n\\t\\t\\t\\t\\t) phrut ON (phrut.UserTypologyGroupId = ut.UserTypologyGroup AND phrut.Project = t.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid as ProjectId,\\n\\t\\t\\t\\t\\t\\t\\tusr.Oid as UserId,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(rciv.Cost) as Rate\\n\\t\\t\\t\\t\\t\\tfrom\\t\\n\\t\\t\\t\\t\\t\\t\\tRateCardItemValue rciv, RateCard rc, RateCardColumn rcc, RateCardItem rci, Project p, CommercialClient cc, [User] usr, UserTypology ust\\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid = @ProjectId AND \\n\\t\\t\\t\\t\\t\\t\\tcc.Oid = p.Client AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardColumnSuggestion = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardSuggestion = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trci.RateCard = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tust.Oid = usr.Typology AND\\n\\t\\t\\t\\t\\t\\t\\trci.[UserTypologyGroup] = ust.UserTypologyGroup AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardColumn = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardItem = rci.Oid\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tp.Oid, \\n\\t\\t\\t\\t\\t\\t\\tusr.Oid,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup\\n\\t\\t\\t\\t\\t) tur ON (tur.UserId = u.Oid AND tur.UserTypologyGroupId = ut.UserTypologyGroup)\\n\\t\\t\\t\\tWHERE\\n\\t\\t\\t\\t\\tt.StateMachineTimesheetStatus != 3\\n\\t\\t\\t\\t\\tAND (t.DurationHours \u003e 0 or t.DurationMinutes \u003e 0 OR t.DailyAllowance = 1)\\n\\t\\t\\t\\t\\tAND t.Billable = 1\\n\\t\\t\\t\\t\\tAND t.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(t.[Date] as Date) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCost,\\n\\t\\t\\t\\t\\tSUM(ISNULL(ISNULL(ISNULL(phru.Rate, phrut.Rate), tur.Rate), 0.0) * (ISNULL(pha.AdjustmentMinutes, 0.0) / 60.0)) as PlannedHoursCost, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tPlannedHoursAdjustment pha\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypologyGroup] utg on (utg.Oid = pha.UserTypologyGroup)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User] as UserId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User]\\n\\t\\t\\t\\t\\t) phru ON (phru.UserId = pha.[User] AND phru.Project = pha.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup\\n\\t\\t\\t\\t\\t) phrut ON (phrut.UserTypologyGroupId = utg.Oid AND phrut.Project = pha.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid as ProjectId,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(rciv.Cost) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tRateCardItemValue rciv, RateCard rc, RateCardColumn rcc, RateCardItem rci, Project p, CommercialClient cc, [User] usr, UserTypology ust\\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid = @ProjectId AND \\n\\t\\t\\t\\t\\t\\t\\tcc.Oid = p.Client AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardColumnSuggestion = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardSuggestion = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trci.RateCard = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tust.Oid = usr.Typology AND\\n\\t\\t\\t\\t\\t\\t\\trci.[UserTypologyGroup] = ust.UserTypologyGroup AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardColumn = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardItem = rci.Oid\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tp.Oid, \\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup\\n\\t\\t\\t\\t\\t) tur ON (tur.UserTypologyGroupId = utg.Oid)\\n\\t\\t\\t\\tWHERE\\n\\t\\t\\t\\t\\tpha.GCRecord is null\\n\\t\\t\\t\\t\\tAND pha.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(pha.[Date] as Date) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT  \\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCost,\\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCost, \\n\\t\\t\\t\\t\\tSUM(ISNULL(pca.AdjustmentCosts, 0.0)) as SuppliersCosts\\n\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tPlannedCostsAdjustment pca, \\n\\t\\t\\t\\t\\tPlannedCostsTotal pct\\n\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\tpca.GCRecord is null\\n\\t\\t\\t\\t\\tAND pct.GCRecord is null\\n\\t\\t\\t\\t\\tAND pct.Oid = pca.PlannedCostsTotal\\n\\t\\t\\t\\t\\tAND pct.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(pca.[Date] as DATE) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t) v\\n\\t\\t\\tGROUP BY\\n\\t\\t\\t\\tv.ProjectId,\\n\\t\\t\\t\\tv.StartDate,\\n\\t\\t\\t\\tv.EndDate,\\n\\t\\t\\t\\tv.[Date]\\n\\t\\t) v\\n\\t) v\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]",
            "DashboardComponentType": {
                "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Revenue_By_Project_Per_Year_Month1/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 310\n  },\n  \"argumentAxis\": {\n    \"type\":\"discrete\",\n    \"argumentType\":\"datetime\",\n    \"label\": {\n      \"format\": \"monthAndYear\"\n    }\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"Date\",\n    \"ignoreEmptyPoints\": false\n  },\n  \"tooltip\":{\n    \"format\": {\n      \"type\": \"percent\",\n      \"precision\": 1\n    }\n  },\n  \"legend\":{\n    \"position\":\"inside\",\n    \"horizontalAlignment\":\"left\",\n    \"verticalAlignment\":\"top\",\n    \"margin\":0,\n    \"backgroundColor\":\"#00000000\",\n    \"visible\":false\n  },\n  \"panes\":[\n    {\n      \"name\":\"Realized (A/B)\"\n    },\n    {\n      \"name\": \"Realized (C/D)\"\n    }\n  ],\n  \"series\": [\n    {\n      \"type\": \"line\",\n      \"valueField\": \"RealizedPercentageRunningTotal\",\n       \"point\": {\n        \"size\": 6\n      },\n      \"name\": \"# % Realizado (A/B)\",\n      \"label\": {\n        \"visible\": true,\n        \"showForZeroValues\": false,\n        \"format\": {\n          \"type\": \"percent\",\n          \"precision\": 2\n        }\n      },\n      \"pane\":\"Realized (A/B)\"\n    },\n    {\n      \"type\": \"area\",\n      \"valueField\": \"RealizedPercentage\",\n      \"name\": \"% Realizado (A/B)\",\n      \"label\": {\n        \"visible\": true,\n        \"verticalOffset\": 30, \n        \"showForZeroValues\": false,\n        \"format\": {\n          \"type\": \"percent\",\n          \"precision\": 2\n        }\n      },\n      \"pane\": \"Realized (A/B)\"\n    },\n    {\n      \"type\": \"line\",\n      \"valueField\": \"RealizedNoForecastPercentageRunningTotal\",\n       \"point\": {\n        \"size\": 6\n      },\n      \"name\": \"# % Realizado (C/D)\",\n      \"label\": {\n            \"visible\": true,\n            \"showForZeroValues\": false,\n            \"format\": {\n              \"type\": \"percent\",\n              \"precision\": 2\n            }\n          },\n      \"pane\":\"Realized (C/D)\",\n      \"visible\": true\n    },\n    {\n      \"type\": \"area\",\n      \"valueField\": \"RealizedNoForecastPercentage\",\n      \"name\": \"% Realizado (C/D)\",\n      \"label\":{\n        \"visible\":true,\n        \"verticalOffset\": 30,\n        \"showForZeroValues\":false,\n        \"format\": {\n            \"type\":\"percent\",\n            \"precision\":2\n        }\n      },\n      \"pane\":\"Realized (C/D)\",\n      \"visible\": true\n    }\n  ],\n  \"valueAxis\": [\n    {\n      \"showZero\": true,\n      \"label\": {\n        \"format\":\"percent\"\n      }\n    }\n  ]\n}",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87"
        },
        {
            "Id": "ffcb22c8-b6dd-49c0-9e88-29702903f2a2",
            "Name": "Resumo",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 3,
            "Order": 1,
            "Parameters": "[{\"WidgetSubTitle\":\"Situa??o Geral\",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":false,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ForecastTimeGrandTotal\"},{\"visible\":false,\"metricName\":\"# Actual\",\"metricFieldValue\":\"ActualTimeGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"WITH ProjectData AS\\n(\\n\\tSELECT\\n\\t\\tp.Oid as ProjectId,\\n\\t\\tphp.StartDate,\\n\\t\\tphp.EndDate,\\n\\t\\tDATEFROMPARTS(Year(php.[EndDate]), Month(php.[EndDate]), 1) as [Date],\\n\\t\\tISNULL(e.ProjectTotalCost, 0.0) as ProjectTotalCost,\\n\\t\\tISNULL(e.ProjectTotalIncome, 0.0) as ProjectTotalIncome\\n\\tFROM\\n\\t\\tProject p\\n\\t\\tLEFT OUTER JOIN\\n\\t\\t(\\n\\t\\t\\tSELECT\\n\\t\\t\\t\\te.Project,\\n\\t\\t\\t\\tsum(iif(wst.[Status] = 10 or wst.[Status] = 24, e.ValueWithoutVatCost, 0)) as ProjectTotalCost,\\n\\t\\t\\t\\tsum(iif(wst.[Status] = 10 or wst.[Status] = 24, e.ValueWithVatIncome, 0)) as ProjectTotalIncome\\n\\t\\t\\tFROM\\n\\t\\t\\t\\tEstimate e,\\n\\t\\t\\t\\tWorkflowState wfs,\\n\\t\\t\\t\\tWorkflowStateType wst\\n\\t\\t\\tWHERE\\n\\t\\t\\t\\te.GCRecord is null\\n\\t\\t\\t\\tAND e.Project = @ProjectId\\n\\t\\t\\t\\tAND e.WorkflowState = wfs.Oid\\n\\t\\t\\t\\tAND wfs.WorkflowStateType = wst.Oid\\n\\t\\t\\tGROUP BY \\n\\t\\t\\t\\te.Project\\n\\t\\t) e ON (e.Project = p.Oid),\\n\\t\\tPlannedHoursPeriod php\\n\\tWHERE\\n\\t\\tphp.GCRecord IS NULL\\n\\t\\tAND php.Project = p.Oid\\n\\t\\tAND p.Oid = @ProjectId\\n)\\nSELECT\\n\\tv.ProjectId,\\n\\tv.ProjectTotalCost as ProjectTotalCost,\\n\\tv.ProjectTotalIncome as ProjectTotalIncome,\\n\\tv.ProjectRealized as RealizedTotal,\\n\\tv.ProjectReviewed as ReviewedTotal,\\n\\tv.ProjectRealizedNoForecast as RealizedNoForecastTotal,\\n\\tv.ProjectReviewedNoForecast as ReviewedNoForecastTotal,\\n\\tv.ProjectRealizedCurrentPeriodNoForecast as RealizedCurrentPeriodNoForecastTotal,\\n\\tIIF(v.ProjectReviewed \u003e 0.0, (v.ProjectRealized / v.ProjectReviewed), 0.0) as RealizedPercentageTotal,\\n\\tIIF(v.ProjectReviewedNoForecast \u003e 0.0, (v.ProjectRealizedNoForecast / v.ProjectReviewedNoForecast), 0.0) as RealizedNoForecastPercentageTotal,\\n\\tIIF(v.ProjectReviewed \u003e 0.0, (v.ProjectRealizedNoForecast / v.ProjectReviewed), 0.0) as RealizedForecastPercentageTotal,\\n\\tIIF(v.ProjectTotalIncome \u003e 0.0, (v.ProjectRealizedNoForecast / v.ProjectTotalIncome), 0.0) as IncurredPercentageTotal,\\n\\tIIF(v.ProjectReviewedNoForecast \u003e 0.0, (v.ProjectRealizedCurrentPeriodNoForecast / v.ProjectReviewedNoForecast), 0.0) as RealizedCurrentPeriodNoForecastPercentageTotal,\\n\\tIIF(v.ProjectTotalIncome \u003e 0.0, (v.ProjectRealizedCurrentPeriodNoForecast / v.ProjectTotalIncome), 0.0) as IncurredCurrentPeriodPercentageTotal\\nFROM\\n(\\n\\tSELECT\\n\\t\\tv.ProjectId,\\n\\t\\tv.ProjectTotalCost,\\n\\t\\tv.ProjectTotalIncome,\\n\\t\\tSUM(v.Realized) as ProjectRealized,\\n\\t\\tSUM(v.Reviewed) as ProjectReviewed,\\n\\t\\tSUM(v.RealizedNoForecast) as ProjectRealizedNoForecast,\\n\\t\\tSUM(v.ReviewedNoForecast) as ProjectReviewedNoForecast,\\n\\t\\tSUM(v.RealizedCurrentPeriodNoForecast) as ProjectRealizedCurrentPeriodNoForecast\\n\\tFROM\\n\\t(\\n\\t\\tSELECT\\n\\t\\t\\tv.ProjectId,\\n\\t\\t\\tv.StartDate,\\n\\t\\t\\tv.EndDate,\\n\\t\\t\\tv.[Date],\\n\\t\\t\\tv.ProjectTotalCost,\\n\\t\\t\\tv.ProjectTotalIncome,\\n\\t\\t\\tv.ActualHoursCosts,\\n\\t\\t\\tv.PlannedHoursCosts,\\n\\t\\t\\tv.SuppliersHoursCosts,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE \\n\\t\\t\\t\\t\\t0\\n\\t\\t\\tEND as Realized,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\t0\\n\\t\\t\\t\\tELSE \\n\\t\\t\\t\\t\\t0\\n\\t\\t\\tEND as RealizedNoForecast,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE \\n\\t\\t\\t\\t\\t0\\n\\t\\t\\tEND as RealizedCurrentPeriodNoForecast,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE\\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as Reviewed,\\n\\t\\t\\tCASE\\n\\t\\t\\t\\tWHEN (CAST(GETDATE() as DATE) \u003e v.EndDate) THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tWHEN CAST(GETDATE() as DATE) BETWEEN v.StartDate AND v.EndDate THEN \\n\\t\\t\\t\\t\\tv.ActualHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\t\\tELSE\\n\\t\\t\\t\\t\\tv.PlannedHoursCosts + v.SuppliersHoursCosts\\n\\t\\t\\tEND as ReviewedNoForecast\\n\\t\\tFROM\\n\\t\\t(\\n\\t\\t\\tSELECT\\n\\t\\t\\t\\tv.ProjectId,\\n\\t\\t\\t\\tv.StartDate,\\n\\t\\t\\t\\tv.EndDate,\\n\\t\\t\\t\\tv.[Date],\\n\\t\\t\\t\\tMAX(v.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\tMAX(v.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\tSUM(ISNULL(v.ActualHoursCosts, 0.0)) as ActualHoursCosts,\\n\\t\\t\\t\\tSUM(ISNULL(v.PlannedHoursCosts, 0.0)) as PlannedHoursCosts,\\n\\t\\t\\t\\tSUM(ISNULL(v.SuppliersCosts, 0.0)) as SuppliersHoursCosts\\n\\t\\t\\tFROM\\n\\t\\t\\t(\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tpj.ProjectTotalCost,\\n\\t\\t\\t\\t\\tpj.ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\tSUM((ISNULL(t.DurationHours * 60.0 + t.DurationMinutes, 0.0) / 60.0) * ISNULL(ISNULL(ISNULL(phru.Rate, phrut.Rate), tur.Rate), 0.0)) as ActualHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCosts, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tTimesheet t\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN [User] u ON (u.Oid = t.CreatedBy)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN [UserTypology] ut on (ut.Oid = u.Typology)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User] as UserId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User]\\n\\t\\t\\t\\t\\t) phru ON (phru.UserId = u.Oid AND phru.Project = t.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup\\n\\t\\t\\t\\t\\t) phrut ON (phrut.UserTypologyGroupId = ut.UserTypologyGroup AND phrut.Project = t.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid as ProjectId,\\n\\t\\t\\t\\t\\t\\t\\tusr.Oid as UserId,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(rciv.Cost) as Rate\\n\\t\\t\\t\\t\\t\\tfrom\\t\\n\\t\\t\\t\\t\\t\\t\\tRateCardItemValue rciv, RateCard rc, RateCardColumn rcc, RateCardItem rci, Project p, CommercialClient cc, [User] usr, UserTypology ust\\n\\t\\t\\t\\t\\t\\twhere\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid = @ProjectId AND \\n\\t\\t\\t\\t\\t\\t\\tcc.Oid = p.Client AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardColumnSuggestion = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardSuggestion = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trci.RateCard = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tust.Oid = usr.Typology AND\\n\\t\\t\\t\\t\\t\\t\\trci.[UserTypologyGroup] = ust.UserTypologyGroup AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardColumn = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardItem = rci.Oid\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tp.Oid, \\n\\t\\t\\t\\t\\t\\t\\tusr.Oid,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup\\n\\t\\t\\t\\t\\t) tur ON (tur.ProjectId = t.Project AND tur.UserId = u.Oid AND tur.UserTypologyGroupId = ut.UserTypologyGroup)\\n\\t\\t\\t\\tWHERE\\n\\t\\t\\t\\t\\tt.StateMachineTimesheetStatus != 3\\n\\t\\t\\t\\t\\tAND (t.DurationHours \u003e 0 OR t.DurationMinutes \u003e 0 OR t.DailyAllowance = 1)\\n\\t\\t\\t\\t\\tAND t.Billable = 1\\n\\t\\t\\t\\t\\tAND t.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(t.[Date] as Date) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCost,\\n\\t\\t\\t\\t\\tSUM(ISNULL(ISNULL(ISNULL(phru.Rate, phrut.Rate), tur.Rate), 0.0) * (ISNULL(pha.AdjustmentMinutes, 0.0) / 60.0)) as PlannedHoursCost, \\n\\t\\t\\t\\t\\t0.0 as SuppliersCosts\\n\\t\\t\\t\\tFROM\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tPlannedHoursAdjustment pha\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User] as UserId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.[User]\\n\\t\\t\\t\\t\\t) phru ON (phru.UserId = pha.[User] AND phru.Project = pha.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(plr.SellRate) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tPlannedHoursTotal plr \\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tplr.GCRecord is null\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tplr.Project,\\n\\t\\t\\t\\t\\t\\t\\tplr.UserTypologyGroup\\n\\t\\t\\t\\t\\t) phrut ON (phrut.UserTypologyGroupId = pha.UserTypologyGroup AND phrut.Project = pha.Project)\\n\\t\\t\\t\\t\\tLEFT OUTER JOIN\\n\\t\\t\\t\\t\\t(\\n\\t\\t\\t\\t\\t\\tSELECT\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid as ProjectId,\\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup as UserTypologyGroupId,\\n\\t\\t\\t\\t\\t\\t\\tMax(rciv.Cost) as Rate\\n\\t\\t\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\t\\t\\tRateCardItemValue rciv, RateCard rc, RateCardColumn rcc, RateCardItem rci, Project p, CommercialClient cc, [User] usr, UserTypology ust\\n\\t\\t\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\t\\t\\tp.Oid = @ProjectId AND \\n\\t\\t\\t\\t\\t\\t\\tcc.Oid = p.Client AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardColumnSuggestion = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tcc.RateCardSuggestion = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trci.RateCard = rc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\tust.Oid = usr.Typology AND\\n\\t\\t\\t\\t\\t\\t\\trci.[UserTypologyGroup] = ust.UserTypologyGroup AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardColumn = rcc.Oid AND\\n\\t\\t\\t\\t\\t\\t\\trciv.RateCardItem = rci.Oid\\n\\t\\t\\t\\t\\t\\tGROUP BY \\n\\t\\t\\t\\t\\t\\t\\tp.Oid, \\n\\t\\t\\t\\t\\t\\t\\tust.UserTypologyGroup\\n\\t\\t\\t\\t\\t) tur ON (tur.ProjectId = pha.Project AND tur.UserTypologyGroupId = pha.UserTypologyGroup)\\n\\t\\t\\t\\tWHERE\\n\\t\\t\\t\\t\\tpha.GCRecord is null\\n\\t\\t\\t\\t\\tAND pha.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(pha.[Date] as Date) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t\\tUNION ALL\\n\\t\\t\\t\\tSELECT  \\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date],\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalCost) as ProjectTotalCost,\\n\\t\\t\\t\\t\\tMAX(pj.ProjectTotalIncome) as ProjectTotalIncome,\\n\\t\\t\\t\\t\\t0.0 as ActualHoursCost,\\n\\t\\t\\t\\t\\t0.0 as PlannedHoursCost, \\n\\t\\t\\t\\t\\tSUM(ISNULL(pca.AdjustmentCosts, 0.0)) as SuppliersCosts\\n\\t\\t\\t\\tFROM\\t\\n\\t\\t\\t\\t\\tProjectData pj,\\n\\t\\t\\t\\t\\tPlannedCostsAdjustment pca, \\n\\t\\t\\t\\t\\tPlannedCostsTotal pct\\n\\t\\t\\t\\tWHERE\\t\\n\\t\\t\\t\\t\\tpca.GCRecord is null\\n\\t\\t\\t\\t\\tAND pct.GCRecord is null\\n\\t\\t\\t\\t\\tAND pct.Oid = pca.PlannedCostsTotal\\n\\t\\t\\t\\t\\tAND pct.Project = pj.ProjectId\\n\\t\\t\\t\\t\\tAND CAST(pca.[Date] as DATE) BETWEEN pj.StartDate AND pj.EndDate\\n\\t\\t\\t\\tGROUP BY\\n\\t\\t\\t\\t\\tpj.ProjectId,\\n\\t\\t\\t\\t\\tpj.StartDate,\\n\\t\\t\\t\\t\\tpj.EndDate,\\n\\t\\t\\t\\t\\tpj.[Date]\\n\\t\\t\\t) v\\n\\t\\t\\tGROUP BY\\n\\t\\t\\t\\tv.ProjectId,\\n\\t\\t\\t\\tv.StartDate,\\n\\t\\t\\t\\tv.EndDate,\\n\\t\\t\\t\\tv.[Date]\\n\\t\\t) v\\n\\t) v\\n\\tGROUP BY\\n\\t\\tv.ProjectId,\\n\\t\\tv.ProjectTotalCost,\\n\\t\\tv.ProjectTotalIncome\\n) v\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":null}]",
            "DashboardComponentType": {
                "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Revenue_By_Project_Per_Year_Month1/execute",
            "Configuration": "{\n  \"height\": 310,\n  \"columnsAutoWidth\": true,\n  \"showColumnHeaders\": true,\n  \"columnChooser\": {\n    \"enabled\": false\n  },\n  \"searchPanel\": {\n    \"visible\": false\n  },\n  \"groupPanel\": {\n    \"visible\": false\n  },\n  \"onToolbarPreparing\": {},\n  \"export\": {\n    \"enabled\": false\n  },\n  \"selection\": {\n    \"mode\": \"none\"\n  },\n  \"onContentReady\": \"function(e){\n  var dataSource = e.component.getDataSource(); \n  if(typeof dataSource === \u0027undefined\u0027)\n    return;\n  if(this.r)\n         return;\n    var q = dataSource.store().createQuery();\n    var f = [\n    {field:\u0027ProjectTotalIncome\u0027,caption:\u0027Total Venda\u0027\n    },\n    {field:\u0027ProjectTotalCost\u0027, caption:\u0027Total Compra\u0027\n    },\n    {field:\u0027RealizedNoForecastTotal\u0027, caption:\u0027A) Realizado\u0027\n    },\n    {field:\u0027ReviewedTotal\u0027, caption:\u0027B) Revisado\u0027\n    },\n    {field:\u0027RealizedForecastPercentageTotal\u0027, caption:\u0027% Custo Incorrido (A/B)\u0027\n    },\n    {field:\u0027IncurredPercentageTotal\u0027, caption:\u0027% Incorrido (A/Venda)\u0027\n    },\n    {field:\u0027RealizedCurrentPeriodNoForecastTotal\u0027, caption:\u0027C) Realizado Real\u0027\n    },\n    {field:\u0027ReviewedNoForecastTotal\u0027, caption:\u0027D) Revisado Real\u0027\n    },\n    {field:\u0027RealizedCurrentPeriodNoForecastPercentageTotal\u0027, caption:\u0027% Custo Incorrido Real (C/D)\u0027\n    },\n    {field:\u0027IncurredCurrentPeriodPercentageTotal\u0027, caption:\u0027% Incorrido Real (C/Venda)\u0027\n    }\n  ];\n     var data = [];\n     f.map(\n         function(a){\n              q.max(a.field).done(\n                  function(result){\n                      data.push({MetricName:a.caption, MetricValue:result\n      });\n    });\n  });\n      console.log(data);\n      e.component.option(\u0027dataSource\u0027, data);\n      this.r = true;\n}\",\n  \"columns\": [\n  {\n    \"dataField\": \"MetricName\",\n    \"caption\": \"R?brica\",\n    \"cellTemplate\": \"function(e, i) \n      {\n          if(i.rowIndex == 4 || i.rowIndex == 5 || i.rowIndex == 8 || i.rowIndex == 9)\n          {\n            var d = document.createElement(\u0027DIV\u0027);\n            d.innerHTML = i.text;\n            d.style.fontWeight = \u0027bold\u0027; \n            e.appendChild(d);\n      }\n         else \n          {\n            var d = document.createElement(\u0027DIV\u0027);\n            d.innerHTML = i.text;\n            d.className = \u0027dashboard-subtitle\u0027; \n            e.appendChild(d);\n      }\n    }\"\n  },\n  {\n    \"dataField\": \"MetricValue\",\n    \"caption\": \"Valor\",\n    \"calculateDisplayValue\": \"function(r) { \n           if(r.MetricName==\u0027% Custo Incorrido (A/B)\u0027 || r.MetricName==\u0027% Incorrido (A/Venda)\u0027 || r.MetricName==\u0027% Custo Incorrido Real (C/D)\u0027 || r.MetricName==\u0027% Incorrido Real (C/Venda)\u0027) \nreturn r.MetricValue * 100; \n            else \n                 return r.MetricValue;\n  }\",\n  \"cellTemplate\": \"function(e, i) {\n            if(i.rowIndex == 4 || i.rowIndex == 5 || i.rowIndex == 8 || i.rowIndex == 9) \n            {\n              var d = document.createElement(\u0027DIV\u0027);\n              d.innerHTML = i.text;\n              d.style.fontWeight = \u0027bold\u0027; \n              e.appendChild(d);\n            }\n            else \n            {\n              var d = document.createElement(\u0027DIV\u0027);\n              d.innerHTML = i.text;\n              e.appendChild(d);\n            }\n    }\",\n    \"format\": \"#,##0.00\"\n  }\n  ]\n}",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87"
        },
        {
            "Id": "c890fe9d-9b21-4c28-be2c-5feddfa7eec6",
            "Name": "% Reconhecimento",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 3,
            "Order": 3,
            "Parameters": "[{\"WidgetSubTitle\":\"Compara??o entre a Proposta, o Revisado e o Realizado\",\"WidgetType\":\"funnel\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Revenue\",\"metricFieldValue\":\"ForecastSellGrandTotal\"},{\"visible\":true,\"metricName\":\"# Cost\",\"metricFieldValue\":\"ActualCostGrandTotal\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"query\",\"value\":\"globalQuery/Analytics_RO_Resumo/execute\",\"mapping\":\"\"}},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]",
            "DashboardComponentType": {
                "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Revenue_By_Project_Per_Year_Month1/execute",
            "Configuration": "{\n \"size\": {\n    \"height\": 310\n  },\n \"sortData\": false,\n  \"tooltip\": {\n    \"enabled\": true,\n    \"format\": \"currency\"\n  },\n  \"onDrawn\": \"function(e){if(this.r)return;var q = e.component.getDataSource().store().createQuery();var f = [{field:\u0027ProjectTotalCost\u0027,caption:\u0027Total Compra\u0027}, {field:\u0027ReviewedTotal\u0027, caption:\u0027B) Revisado\u0027}, {field:\u0027RealizedNoForecastTotal\u0027, caption:\u0027A) Realizado\u0027}];var data = [];f.map(function(a){q.max(a.field).done(function(result){data.push({MetricName:a.caption, MetricValue:result});});});e.component.option(\u0027dataSource\u0027, data);this.r = true;}\",\n  \"argumentField\": \"MetricName\",\n  \"valueField\": \"MetricValue\",\n  \"item\": {\n    \"border\": {\n      \"visible\": true\n    }\n  },\n  \"label\": {\n    \"visible\": true,\n    \"position\": \"inside\",\n    \"format\": {\n          \"type\":\"currency\",\n          \"precision\":2\n    },\n    \"backgroundColor\": \"none\",\n    \"customizeText\": \"function(e) {return \u0027\u003cspan\u003e\u0027+e.valueText+\u0027\u003c/span\u003e\u003cbr/\u003e\u0027+e.item.argument;}\"\n  }\n}",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87"
        },
        {
            "Id": "145612a6-7753-4333-b8b0-cc9e2fd19a93",
            "Name": "Evolu??o de Horas",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 4,
            "Parameters": "[\r\n    {\r\n        \"WidgetSubTitle\": \"Forecast vs Horas Realizadas\",\r\n        \"WidgetType\": \"chart\",\r\n        \"WidgetFilterField\": \"\",\r\n        \"WidgetColor\": \"#efefef\",\r\n        \"WidgetHeight\": \"\",\r\n        \"WidgetHeader\": {\r\n            \"showContextInfo\": false,\r\n            \"WidgetPeriodChooser\": {\r\n                \"type\": \"year\",\r\n                \"visible\": false\r\n            },\r\n            \"WidgetMetrics\": {\r\n                \"visible\": true,\r\n                \"Metrics\": [\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Forecast\",\r\n                        \"metricFieldValue\": \"ForecastTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# Factur?vel\",\r\n                        \"metricFieldValue\": \"ActualBillableTimeGrandTotal\"\r\n                    },\r\n                    {\r\n                        \"visible\": true,\r\n                        \"metricName\": \"# N?o Factur?vel\",\r\n                        \"metricFieldValue\": \"ActualNonBillableTimeGrandTotal\"\r\n                    }\r\n                ]\r\n            },\r\n            \"showSubTitle\": true,\r\n            \"showTitle\": true\r\n        },\r\n        \"WidgetDataSources\": {\r\n            \"main\": {\r\n                \"type\": \"query\",\r\n                \"value\": \"globalQuery/Analytics_RO_EvolucaoHoras/execute\",\r\n                \"mapping\": \"\"\r\n            }\r\n        },\r\n        \"QueryConfiguration\": {\r\n            \"RequiredFilters\": [\r\n                \"projectId\"\r\n            ]\r\n        }\r\n    }\r\n]",
            "DashboardComponentType": {
                "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_By_Project_Per_Year_Month/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 300\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"MonthYear\",\n    \"ignoreEmptyPoints\": false\n  },\n  \"panes\": [\n    {\n      \"name\": \"accumulated\"\n    },\n    {\n      \"name\": \"monthly\"\n    }\n  ],\n  \"series\": [\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"bar\",\n      \"valueField\": \"ForecastTime\",\n      \"name\": \"Forecast\"\n    },\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualBillableTime\",\n      \"name\": \"Factur?vel\",\n      \"point\": {\n        \"size\": 6\n      }\n    },\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualNonBillableTime\",\n      \"name\": \"N?o Factur?vel\",\n      \"point\": {\n        \"size\": 6\n      }\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"bar\",\n      \"valueField\": \"ForecastTimeRunningTotal\",\n      \"name\": \"# Forecast\"\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualBillableTimeRunningTotal\",\n      \"name\": \"# Factur?vel\",\n      \"point\": {\n        \"size\": 6\n      }\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"line\",\n      \"valueField\": \"ActualNonBillableTimeRunningTotal\",\n      \"name\": \"# N?o Factur?vel\",\n      \"point\": {\n        \"size\": 6\n      }\n    }\n  ],\n  \"valueAxis\": [\n    {\n      \"name\": \"monthly\",\n      \"position\": \"left\"\n    },\n    {\n      \"name\": \"accumulated\",\n      \"position\": \"left\"\n    }\n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  }\n}",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87"
        },
        {
            "Id": "62a01e83-1fca-4e89-afde-df42be35cce1",
            "Name": "Evolu??o de Servi?os e Despesas",
            "Active": true,
            "UseQuery": false,
            "Query": null,
            "Size": 6,
            "Order": 5,
            "Parameters": "[{\"WidgetSubTitle\":\"Forecast vs Custo Realizado\",\"WidgetType\":\"chart\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"#efefef\",\"WidgetHeight\":\"\",\"WidgetHeader\":{\"showContextInfo\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":true,\"Metrics\":[{\"visible\":true,\"metricName\":\"# Forecast\",\"metricFieldValue\":\"ProjectForecastCosts\"},{\"visible\":true,\"metricName\":\"# Realizado\",\"metricFieldValue\":\"ProjectRealizedCosts\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"query\",\"value\":\"globalQuery/Analytics_RO_EvolucaoServicosDespesas/execute\",\"mapping\":\"\"}},\"QueryConfiguration\":{\"RequiredFilters\":[\"projectId\"]}}]",
            "DashboardComponentType": {
                "Id": "7831bc23-b74a-48b2-95a7-130d290fd43b",
                "Name": "Generic Dashboard",
                "ComponentTypeNumber": 42
            },
            "AnalyticsApiUrl": "globalQuery/Analytics_Burn_Rate_Services_By_Project_Per_Year_Month/execute",
            "Configuration": "{\n  \"size\": {\n    \"height\": 300\n  },\n  \"commonSeriesSettings\": {\n    \"argumentField\": \"MonthYear\",\n    \"ignoreEmptyPoints\": false,\n    \"type\":\"stackedBar\"\n  },\n  \"panes\": [\n    {\n      \"name\": \"accumulated\"\n    },\n    {\n      \"name\": \"monthly\"\n    }\n  ],\n  \"series\": [\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"valueField\": \"SuppliersCosts\",\n      \"name\": \"Servi?os\"\n    },\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"valueField\": \"ExpensesCosts\",\n      \"name\": \"Despesas\"\n    },\n    {\n      \"pane\": \"monthly\",\n      \"axis\": \"monthly\",\n      \"type\": \"line\",\n      \"valueField\": \"RealizedSuppliersExpensesCosts\",\n      \"name\": \"Realizado\",\n      \"point\": {\n        \"size\": 6\n      }\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"stackedBar\",\n      \"valueField\": \"SuppliersCostsRunningTotal\",\n      \"name\": \"# Servi?os\"\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"stackedBar\",\n      \"valueField\": \"ExpensesCostsRunningTotal\",\n      \"name\": \"# Despesas\"\n    },\n    {\n      \"pane\": \"accumulated\",\n      \"axis\": \"accumulated\",\n      \"type\": \"line\",\n      \"valueField\": \"RealizedSuppliersExpensesCostsRunningTotal\",\n      \"name\": \"# Realizado\",\n      \"point\": {\n        \"size\": 6\n      }\n    }\n  ],\n  \"valueAxis\": [\n    {\n      \"name\": \"monthly\",\n      \"position\": \"left\"\n    },\n    {\n      \"name\": \"accumulated\",\n      \"position\": \"left\"\n    }\n  ],\n  \"legend\": {\n    \"rowCount\": 1,\n    \"verticalAlignment\": \"bottom\",\n    \"horizontalAlignment\": \"center\"\n  },\n  \"tooltip\": {\n    \"format\":\"currency\"\n  }\n}",
            "DashboardDefinitionId": "5d046645-ce15-4442-952a-3f7c88077f87"
        }
    ],
    "Version": 2,
    "Default": false
}