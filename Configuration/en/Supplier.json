{
  "DashboardDefinitionRoles": [],
  "Id": "7707a980-f600-4186-9c0e-f35f4db771d9",
  "Name": "Suppliers",
  "Active": true,
  "Location": 2,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentsConfiguration": "{\r\n    \"entity\": \"suppliers\",\r\n    \"operations\": {\r\n        \"read\": {\r\n            \"endpoint\": \"suppliers\"\r\n        },\r\n        \"update\": {\r\n            \"endpoint\": \"suppliers\",\r\n            \"model\": {\r\n                \"Name\": \"Name\",\r\n                \"CompanyId\": \"CompanyId\",\r\n                \"DivisionId\": \"DivisionId\",\r\n                \"DepartmentId\": \"DepartmentId\",\r\n                \"ExternalId\": \"ExternalId\",\r\n                \"Active\": \"Active\",\r\n                \"Currency\": \"Currency\",\r\n                \"VatId\": \"VatId\",\r\n                \"Category\": \"Category\",\r\n                \"Remarks\": \"Remarks\",\r\n                \"Street\": \"Street\",\r\n                \"Street2\": \"Street2\",\r\n                \"City\": \"City\",\r\n                \"ZipPostal\": \"ZipPostal\",\r\n                \"StateProvince\": \"StateProvince\",\r\n                \"TaxpayerNumber\": \"TaxpayerNumber\",\r\n                \"PaymentConditionId\": \"PaymentConditionId\",\r\n                \"Language\": \"Language\",\r\n                \"RelatedDepartmentId\": \"RelatedDepartmentId\",\r\n                \"Mail\": \"Mail\",\r\n                \"OtherCreditor\": \"OtherCreditor\"\r\n            }\r\n        },\r\n        \"create\": {\r\n            \"endpoint\": \"suppliers\",\r\n            \"model\": {\r\n                \"Name\": \"Name\",\r\n                \"CompanyId\": \"CompanyId\",\r\n                \"DivisionId\": \"DivisionId\",\r\n                \"DepartmentId\": \"DepartmentId\",\r\n                \"ExternalId\": \"ExternalId\",\r\n                \"Active\": \"Active\",\r\n                \"CurrencyId\": \"CurrencyId\",\r\n                \"VatId\": \"VatId\",\r\n                \"Category\": \"Category\",\r\n                \"Remarks\": \"Remarks\",\r\n                \"Street\": \"Street\",\r\n                \"Street2\": \"Street2\",\r\n                \"City\": \"City\",\r\n                \"ZipPostal\": \"ZipPostal\",\r\n                \"StateProvince\": \"StateProvince\",\r\n                \"TaxpayerNumber\": \"TaxpayerNumber\",\r\n                \"PaymentConditionId\": \"PaymentConditionId\",\r\n                \"Language\": \"Language\",\r\n                \"RelatedDepartmentId\": \"RelatedDepartmentId\",\r\n                \"Mail\": \"Mail\"\r\n            }\r\n        },\r\n        \"remove\": {\r\n            \"endpoint\": \"suppliers\"\r\n        }\r\n    },\r\n    \"layout\": {\r\n        \"create\": {\r\n            \"colCount\": 2,\r\n            \"items\": [\r\n                {\r\n                    \"colSpan\": 2,\r\n                    \"itemType\": \"group\",\r\n                    \"colCount\": 2,\r\n                    \"items\": [\r\n                        {\r\n                            \"colSpan\": 1,\r\n                            \"dataField\": \"Name\",\r\n                            \"label\": {\r\n                                \"text\": \"Name\"\r\n                            },\r\n                            \"editorType\": \"dxTextBox\",\r\n                            \"editorOptions\": {\r\n                                \"mode\": \"text\"\r\n                            },\r\n                            \"validationRules\": [\r\n                                {\r\n                                    \"type\": \"required\",\r\n                                    \"message\": \"Name is a required field\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            \"colSpan\": 1,\r\n                            \"dataField\": \"CompanyId\",\r\n                            \"label\": {\r\n                                \"text\": \"Company\"\r\n                            },\r\n                            \"editorType\": \"dxSelectBox\",\r\n                            \"editorOptions\": {\r\n                                \"disabled\": false,\r\n                                \"searchEnabled\": true,\r\n                                \"dataSource\": {\r\n                                    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                             return SkillsWorkflow.executeAPI('GET','companies/lookup',\r\n                                    null,\r\n                                    {}).then( result =>  { return Promise.resolve(result);\r\n                                    })\r\n                                }\",\r\n                            \"byKey\": \"function(key) { \r\n                                return SkillsWorkflow.executeAPI('GET','companies/'+key+'/lookup',\r\n                                null,\r\n                                {}).then( \r\n                                                result =>  { \r\n                                                    return Promise.resolve(result);\r\n                                }\r\n                                )\r\n                            }\"\r\n                        },\r\n                        \"displayExpr\": \"Name\",\r\n                        \"valueExpr\": \"Id\",\r\n                        \"onValueChanged\": \"function(e){ \r\n                                SkillsWorkflow.setComponentByValue(e.previousValue,e.value,\r\n                                'DivisionId');\r\n                                SkillsWorkflow.setComponentByValue(e.previousValue, e.value,\r\n                                'VatId');\r\n                                SkillsWorkflow.setComponentByValue(e.previousValue, e.value,\r\n                                'PaymentConditionId');\r\n                    }\",\r\n                                    \"onInitialized\": \"function(e){\r\n                                        SkillsWorkflow.saveComponent(e.component, 'CompanyId');\r\n                }\"\r\n            },\r\n            \"validationRules\": [\r\n                {\r\n                    \"type\": \"required\",\r\n                    \"message\": \"Company field is required\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"dataField\": \"DivisionId\",\r\n            \"label\": {\r\n                \"text\": \"Division\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                         var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n                    };\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n                        ] = companyId;\r\n                    }\r\n                          return SkillsWorkflow.executeAPI('GET','divisions/lookup',\r\n            param,\r\n                    {}).then( result =>  { return Promise.resolve(result);\r\n                    })\r\n                }\",\r\n                        \"byKey\": \"function(key) { \r\n                                        return SkillsWorkflow.executeAPI('GET','divisions/'+key+'/lookup',\r\n                null,\r\n                {}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n                }\r\n                                        )\r\n            }\"\r\n        },\r\n        \"onValueChanged\": \"function(e){ \r\n                            SkillsWorkflow.setComponentByValue(e.previousValue,e.value,\r\n                        'DepartmentId');\r\n    }\",\r\n        \"onInitialized\": \"function(e) {\r\n                            SkillsWorkflow.saveComponent(e.component, 'DivisionId');\r\n}\",\r\n        \"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n},\r\n\"validationRules\": [\r\n{\r\n    \"type\": \"required\",\r\n    \"message\": \"Division field is required\"\r\n}\r\n]\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\n                                    var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                                    var skip = loadOptions.skip || 0;\r\n                                    var take = loadOptions.take || 20;\r\n                                    var param = { name:searchValue, skip: skip, take: take\r\n    };\r\n                                    var divisionId = SkillsWorkflow.getValueFromComponent('DivisionId');\r\n                                    if(divisionId != null){\r\n                                                                param['divisionId'\r\n        ] = divisionId;\r\n    }\r\n                                    return SkillsWorkflow.executeAPI('GET','departments/lookup',param,\r\n    {}).then( result =>  { return Promise.resolve(result);\r\n    })\r\n}\",\r\n                                    \"byKey\": \"function(key) { \r\n                                    return SkillsWorkflow.executeAPI('GET','departments/'+key,\r\nnull,\r\n{}).then( \r\n                                                    result =>  { \r\n                                                        return Promise.resolve(result);\r\n}\r\n                                    )\r\n}\"\r\n},\r\n\"onInitialized\": \"function(e) {\r\n                            SkillsWorkflow.saveComponent(e.component, 'DepartmentId');\r\n}\",\r\n                            \"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n},\r\n\"validationRules\": [\r\n{\r\n\"type\": \"required\",\r\n\"message\": \"Department field is required\"\r\n}\r\n]\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"RelatedDepartmentId\",\r\n\"label\": {\r\n\"text\": \"Related Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"disabled\": false,\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                             return SkillsWorkflow.executeAPI('GET','departments/lookup',\r\nnull,\r\n{}).then( result =>  { return Promise.resolve(result);\r\n})\r\n}\",\r\n                            \"byKey\": \"function(key) { \r\n                                return SkillsWorkflow.executeAPI('GET','departments/'+key+'/lookup',\r\nnull,\r\n{}).then( \r\n                                                result =>  { \r\n                                                    return Promise.resolve(result);\r\n}\r\n                                )\r\n}\"\r\n},\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\"\r\n}\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"VatId\",\r\n\"label\": {\r\n\"text\": \"Vat\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                         var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n};\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n] = companyId;\r\n}\r\n                          return SkillsWorkflow.executeAPI('GET','companies/'+companyId+'/vats',\r\n{}).then( result =>  { return Promise.resolve(result);\r\n})\r\n}\",\r\n                        \"byKey\": \"function(key) { \r\n                                        return SkillsWorkflow.executeAPI('GET','vats/'+key,\r\nnull,\r\n{}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n}\r\n                                        )\r\n}\"\r\n},\r\n\"onInitialized\": \"function(e) {\r\n                                SkillsWorkflow.saveComponent(e.component, 'VatId');\r\n}\",\r\n                        \"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"Category\",\r\n\"label\": {\r\n\"text\": \"Category\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"ExternalId\",\r\n\"label\": {\r\n\"text\": \"External Id\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"Language\",\r\n\"label\": {\r\n    \"text\": \"Language\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n    \"dataSource\": [\r\n        {\r\n            \"Name\": \"en\"\r\n        },\r\n        {\r\n            \"Name\": \"pt\"\r\n        },\r\n        {\r\n            \"Name\": \"pt-pt\"\r\n        },\r\n        {\r\n            \"Name\": \"pt-br\"\r\n        },\r\n        {\r\n            \"Name\": \"es\"\r\n        },\r\n        {\r\n            \"Name\": \"pl\"\r\n        },\r\n        {\r\n            \"Name\": \"de\"\r\n        }\r\n    ],\r\n    \"displayExpr\": \"Name\",\r\n    \"valueExpr\": \"Name\"\r\n}\r\n},\r\n{\r\n    \"colSpan\": 1,\r\n    \"dataField\": \"Mail\",\r\n    \"label\": {\r\n        \"text\": \"Mail\"\r\n    }\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"Remarks\",\r\n\"label\": {\r\n\"text\": \"Remarks\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n}\r\n]\r\n},\r\n{\r\n\"itemType\": \"group\",\r\n\"caption\": \"Address\",\r\n\"items\": [\r\n{\r\n\"dataField\": \"Street\",\r\n\"label\": {\r\n\"text\": \"Street\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"Street2\",\r\n\"label\": {\r\n\"text\": \"Street2\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"City\",\r\n\"label\": {\r\n\"text\": \"City\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"ZipPostal\",\r\n\"label\": {\r\n\"text\": \"Zip Postal\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"StateProvince\",\r\n\"label\": {\r\n\"text\": \"State Province\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n}\r\n]\r\n},\r\n{\r\n\"itemType\": \"group\",\r\n\"caption\": \"Payment\",\r\n\"items\": [\r\n{\r\n\"dataField\": \"TaxpayerNumber\",\r\n\"label\": {\r\n    \"text\": \"Taxpayer Number\"\r\n    },\r\n\"editorType\": \"dxNumberBox\"\r\n},\r\n{\r\n\"dataField\": \"PaymentConditionId\",\r\n\"label\": {\r\n\"text\": \"Payment Condition\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                         var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n};\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n] = companyId;\r\n}\r\n                          return SkillsWorkflow.executeAPI('GET','paymentconditions/'+companyId+'/lookup',\r\n{}).then( result =>  { return Promise.resolve(result);\r\n})\r\n}\",\r\n                        \"byKey\": \"function(key) { \r\n                                        return SkillsWorkflow.executeAPI('GET','paymentconditions/'+key,\r\nnull,\r\n{}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n}\r\n                                        )\r\n}\"\r\n},\r\n\"onInitialized\": \"function(e) {\r\n                    SkillsWorkflow.saveComponent(e.component, 'PaymentConditionId');\r\n}\",\r\n                    \"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"dataField\": \"CurrencyId\",\r\n\"label\": {\r\n\"text\": \"Currency\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); return SkillsWorkflow.executeAPI('GET','currencies',null,{}).then( result =>  { return Promise.resolve(result); })}\",\r\n\"byKey\": \"function(key) { \r\n                            if(key !== '00000000-0000-0000-0000-000000000000') {\r\n                                    return SkillsWorkflow.executeAPI('GET','currencies/'+key+'/lookup',\r\nnull,\r\n{}).then( \r\n                                                    result =>  { \r\n                                                        return Promise.resolve(result);\r\n}\r\n                                    )};\r\n}\"\r\n},\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\"\r\n}\r\n},\r\n{\r\n\"dataField\": \"Active\",\r\n\"label\": {\r\n\"text\": \"Active\"\r\n},\r\n\"editorType\": \"dxCheckBox\",\r\n\"editorOptions\": {\r\n    \"value\": false\r\n}\r\n}\r\n]\r\n}\r\n]\r\n},\r\n\"read\": {\r\n\"colCount\": 2,\r\n\"items\": [\r\n{\r\n    \"colSpan\": 2,\r\n    \"itemType\": \"group\",\r\n    \"colCount\": 2,\r\n    \"items\": [\r\n        {\r\n            \"colSpan\": 1,\r\n            \"dataField\": \"Name\",\r\n            \"label\": {\r\n                \"text\": \"Name\"\r\n            },\r\n            \"editorType\": \"dxTextBox\",\r\n            \"editorOptions\": {\r\n                \"mode\": \"text\"\r\n            },\r\n            \"validationRules\": [\r\n                {\r\n                    \"type\": \"required\",\r\n                    \"message\": \"Name is a required field\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"colSpan\": 1,\r\n            \"dataField\": \"CompanyId\",\r\n            \"label\": {\r\n                \"text\": \"Company\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"disabled\": true,\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                             return SkillsWorkflow.executeAPI('GET','companies/lookup',\r\n                    null,\r\n                    {}).then( result =>  { return Promise.resolve(result);\r\n                    })\r\n                }\",\r\n                            \"byKey\": \"function(key) { \r\n                                return SkillsWorkflow.executeAPI('GET','companies/'+key+'/lookup',\r\n                null,\r\n                {}).then( \r\n                                                result =>  { \r\n                                                    return Promise.resolve(result);\r\n                }\r\n                                )\r\n            }\"\r\n        },\r\n        \"displayExpr\": \"Name\",\r\n        \"valueExpr\": \"Id\",\r\n        \"onValueChanged\": \"function(e){ \r\n                         SkillsWorkflow.setComponentByValue(e.previousValue,e.value,\r\n                        'DivisionId');\r\n                        SkillsWorkflow.setComponentByValue(e.previousValue, e.value,\r\n                        'VatId');\r\n                        SkillsWorkflow.setComponentByValue(e.previousValue, e.value,\r\n                        'PaymentConditionId');\r\n    }\",\r\n                    \"onInitialized\": \"function(e){\r\n                        SkillsWorkflow.saveComponent(e.component, 'CompanyId');\r\n}\"\r\n}\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"DivisionId\",\r\n\"label\": {\r\n\"text\": \"Division\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n    };\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n        ] = companyId;\r\n    }\r\n                          return SkillsWorkflow.executeAPI('GET','divisions/lookup',\r\n            param,\r\n    {}).then( result =>  { return Promise.resolve(result);\r\n    })\r\n}\",\r\n                        \"byKey\": \"function(key) { \r\n                                        return SkillsWorkflow.executeAPI('GET','divisions/'+key+'/lookup',\r\nnull,\r\n{}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n}\r\n                                        )\r\n}\"\r\n},\r\n\"onValueChanged\": \"function(e){ \r\n                         SkillsWorkflow.setComponentByValue(e.previousValue,e.value,\r\n                        'DepartmentId');\r\n}\",\r\n\"onInitialized\": \"function(e) {\r\n                    SkillsWorkflow.saveComponent(e.component, 'DivisionId');\r\n}\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"DepartmentId\",\r\n\"label\": {\r\n\"text\": \"Department\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \r\nvar searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\nvar skip = loadOptions.skip || 0;\r\nvar take = loadOptions.take || 20;\r\nvar param = { name:searchValue, skip: skip, take: take\r\n};\r\nvar divisionId = SkillsWorkflow.getValueFromComponent('DivisionId');\r\nif(divisionId != null){\r\n                            param['divisionId'\r\n] = divisionId;\r\n}\r\nreturn SkillsWorkflow.executeAPI('GET','departments/lookup',param,\r\n{}).then( result =>  { return Promise.resolve(result);\r\n})\r\n}\",\r\n\"byKey\": \"function(key) { \r\n                                    return SkillsWorkflow.executeAPI('GET','departments/'+key,\r\nnull,\r\n{}).then( \r\n                                                    result =>  { \r\n                                                        return Promise.resolve(result);\r\n}\r\n                                    )\r\n}\"\r\n},\r\n\"onInitialized\": \"function(e) {\r\n                    SkillsWorkflow.saveComponent(e.component, 'DepartmentId');\r\n}\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\",\r\n\"disabled\": true\r\n}\r\n},\r\n{\r\n    \"dataField\": \"RelatedDepartmentId\",\r\n    \"label\": {\r\n        \"text\": \"Related Department\"\r\n    },\r\n    \"editorType\": \"dxSelectBox\",\r\n    \"editorOptions\": {\r\n        \"disabled\": false,\r\n        \"searchEnabled\": true,\r\n        \"dataSource\": {\r\n            \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                             var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \r\n                             return SkillsWorkflow.executeAPI('GET','departments/lookup',\r\n            null,\r\n            {}).then( result =>  { return Promise.resolve(result);\r\n            })\r\n        }\",\r\n                            \"byKey\": \"function(key) { \r\n                            if(key !== '00000000-0000-0000-0000-000000000000') {\r\n                                return SkillsWorkflow.executeAPI('GET','departments/'+key,\r\n            null,\r\n            {}).then( \r\n                                                result =>  { \r\n                                                    return Promise.resolve(result);\r\n            }\r\n                                )\r\n        };\r\n    }\"\r\n},\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\"\r\n}\r\n},\r\n{\r\n\"dataField\": \"VatId\",\r\n\"label\": {\r\n\"text\": \"Vat\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n\"searchEnabled\": true,\r\n\"dataSource\": {\r\n\"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n};\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n] = companyId;\r\n}\r\n                          return SkillsWorkflow.executeAPI('GET','companies/'+companyId+'/vats',\r\n{}).then( result =>  { return Promise.resolve(result);\r\n})\r\n}\",\r\n                        \"byKey\": \"function(key) { \r\n                            if(key !== '00000000-0000-0000-0000-000000000000') { \r\n                                        return SkillsWorkflow.executeAPI('GET','vats/'+key,\r\nnull,\r\n{}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n})\r\n};\r\n}\"\r\n},\r\n\"onInitialized\": \"function(e) {\r\n                    SkillsWorkflow.saveComponent(e.component, 'VatId');\r\n}\",\r\n\"displayExpr\": \"Name\",\r\n\"valueExpr\": \"Id\"\r\n}\r\n},\r\n{\r\n\"dataField\": \"Category\",\r\n\"label\": {\r\n\"text\": \"Category\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"ExternalId\",\r\n\"label\": {\r\n\"text\": \"External Id\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"colSpan\": 1,\r\n\"dataField\": \"Language\",\r\n\"label\": {\r\n    \"text\": \"Language\"\r\n},\r\n\"editorType\": \"dxSelectBox\",\r\n\"editorOptions\": {\r\n    \"dataSource\": [\r\n            {\r\n                \"Name\": \"en\"\r\n            },\r\n            {\r\n                \"Name\": \"pt\"\r\n            },\r\n            {\r\n                \"Name\": \"pt-pt\"\r\n            },\r\n            {\r\n                \"Name\": \"pt-br\"\r\n            },\r\n            {\r\n                \"Name\": \"es\"\r\n            },\r\n            {\r\n                \"Name\": \"pl\"\r\n            },\r\n            {\r\n                \"Name\": \"de\"\r\n            }\r\n        ],\r\n        \"displayExpr\": \"Name\",\r\n        \"valueExpr\": \"Name\"\r\n    }\r\n},\r\n{\r\n    \"dataField\": \"Mail\",\r\n    \"label\": {\r\n        \"text\": \"Mail\"\r\n    },\r\n    \"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n\"dataField\": \"Remarks\",\r\n\"label\": {\r\n\"text\": \"Remarks\"\r\n},\r\n\"editorType\": \"dxTextBox\"\r\n},\r\n{\r\n    \"dataField\": \"OtherCreditor\",\r\n    \"label\": {\r\n        \"text\": \"Other Creditor\"\r\n    },\r\n    \"editorType\": \"dxCheckBox\"\r\n}\r\n    ]\r\n},\r\n{\r\n    \"itemType\": \"group\",\r\n    \"caption\": \"Address\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"Street\",\r\n            \"label\": {\r\n                \"text\": \"Street\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        },\r\n        {\r\n            \"dataField\": \"Street2\",\r\n            \"label\": {\r\n                \"text\": \"Street2\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        },\r\n        {\r\n            \"dataField\": \"City\",\r\n            \"label\": {\r\n                \"text\": \"City\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        },\r\n        {\r\n            \"dataField\": \"ZipPostal\",\r\n            \"label\": {\r\n                \"text\": \"Zip Postal\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        },\r\n        {\r\n            \"dataField\": \"StateProvince\",\r\n            \"label\": {\r\n                \"text\": \"State Province\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        }\r\n    ]\r\n},\r\n{\r\n    \"itemType\": \"group\",\r\n    \"caption\": \"Payment\",\r\n    \"items\": [\r\n        {\r\n            \"dataField\": \"TaxpayerNumber\",\r\n            \"label\": {\r\n                \"text\": \"Taxpayer Number\"\r\n            },\r\n            \"editorType\": \"dxTextBox\"\r\n        },\r\n        {\r\n            \"dataField\": \"PaymentConditionId\",\r\n            \"label\": {\r\n                \"text\": \"Payment Condition\"\r\n            },\r\n            \"editorType\": \"dxSelectBox\",\r\n            \"editorOptions\": {\r\n                \"searchEnabled\": true,\r\n                \"dataSource\": {\r\n                    \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : '');\r\n                     var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100);\r\n                         var skip = loadOptions.skip || 0;\r\n                         var take = loadOptions.take || 20;\r\n                         var param = { name:searchValue, skip: skip, take: take\r\n                    };\r\n                         var companyId = SkillsWorkflow.getValueFromComponent('CompanyId');\r\n                         if(companyId != null){\r\n                            param['companyId'\r\n                        ] = companyId;\r\n                    }\r\n                          return SkillsWorkflow.executeAPI('GET','paymentconditions/'+companyId+'/lookup',\r\n                    {}).then( result =>  { return Promise.resolve(result);\r\n                    })\r\n                    }\",\r\n                        \"byKey\": \"function(key) { \r\n                            if(key !== '00000000-0000-0000-0000-000000000000') {\r\n                                        return SkillsWorkflow.executeAPI('GET','paymentconditions/'+key,\r\n                    null,\r\n                    {}).then( \r\n                                                        result =>  { \r\n                                                            return Promise.resolve(result);\r\n                    }\r\n                                        )\r\n                    };\r\n                }\"\r\n                },\r\n                \"onInitialized\": \"function(e) {\r\n                       SkillsWorkflow.saveComponent(e.component, 'RelatedDepartmentId');\r\n                }\",\r\n            \"displayExpr\": \"Name\",\r\n                \"valueExpr\": \"Id\"\r\n            }\r\n        },\r\n        {\r\n        \"dataField\": \"CurrencyId\",\r\n        \"label\": {\r\n            \"text\": \"Currency\"\r\n        },\r\n        \"editorType\": \"dxSelectBox\",\r\n        \"editorOptions\": {\r\n            \"searchEnabled\": true,\r\n            \"dataSource\": {\r\n                \"load\": \"function(loadOptions){ var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); return SkillsWorkflow.executeAPI('GET','currencies',null,{}).then( result =>  { return Promise.resolve(result); })}\",\r\n                \"byKey\": \"function(key) { \r\n                            if(key !== '00000000-0000-0000-0000-000000000000') {\r\n                                    return SkillsWorkflow.executeAPI('GET','currencies/'+key+'/lookup',\r\n                null,\r\n                {}).then( \r\n                                                    result =>  { \r\n                                                        return Promise.resolve(result);\r\n                }\r\n                                    )};\r\n            }\"\r\n        },\r\n        \"displayExpr\": \"Name\",\r\n        \"valueExpr\": \"Id\"\r\n            }\r\n        \r\n        },\r\n        {\r\n            \"dataField\": \"Active\",\r\n            \"label\": {\r\n                \"text\": \"Active\"\r\n            },\r\n            \"editorType\": \"dxCheckBox\"\r\n        }\r\n    ]\r\n}\r\n]\r\n}\r\n},\r\n\"customDocument\": {\r\n\"useCustomStyle\": false,\r\n\"mainColor\": \"\",\r\n\"secondaryColor\": \"\",\r\n\"imageClass\": \"\",\r\n\"namePlural\": \"\",\r\n\"name\": \"\",\r\n\"systemName\": \"\"\r\n},\r\n\"availableOptions\": {\r\n\"feed\": false,\r\n\"info\": false,\r\n\"files\": false,\r\n\"userfields\": false,\r\n\"dashboard\": false\r\n}\r\n}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "d266c03a-8542-410d-a996-628e1f6ae7aa",
      "Name": "Suppliers",
      "Active": true,
      "UseQuery": true,
      "Query": null,
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Departments by company \",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetHeight\":\"500\",\"WidgetHeader\":{\"showContextInfo\":false,\"ShowTitle\":false,\"ShowSubTitle\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Integration Errors\",\"metricFieldValue\":\"Integration Errors\"}]},\"showSubTitle\":true,\"showTitle\":true},\"WidgetDataSources\":{\"main\":{\"type\":\"querytext\",\"value\":\"select  s.Oid,\\r\\n\\t\\ts.[Name],\\r\\n\\t\\tc.[Name] as Company,\\r\\n\\t\\td.[Name] as Division,\\r\\n\\t\\ts.[Name] as Department,\\r\\n\\t\\ts.Category,\\r\\n\\t\\tcr.[Name] as Currency,\\r\\n\\t\\tv.[Name] as Vat,\\r\\n\\t\\ts.ExternalId,\\r\\n\\t\\ts.Active\\r\\nfrom\\tSupplier s \\r\\nInner Join Company c on s.Company=c.Oid\\r\\nInner Join Division d on s.Division=d.Oid\\r\\nInner Join Department dp on s.Department=dp.Oid\\r\\nLeft Outer join Currency cr on (cr.Oid=s.Currency)\\r\\nLeft Outer Join Vat v on (v.Oid=s.Vat)\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": null,
      "Configuration": "{\r\n    \"onRowClick\": \"function(e){if(e.rowType=='data') SkillsWorkflow.genericPreview(e.key.Oid, 'Name', 'suppliers',700,900);}\",\r\n    \"selection\": {\r\n        \"mode\": \"multiple\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Name\"\r\n        },\r\n        {\r\n            \"dataField\": \"Company\"\r\n        },\r\n        {\r\n            \"dataField\": \"Division\"\r\n        },\r\n        {\r\n            \"dataField\": \"Department\"\r\n        },\r\n        {\r\n            \"dataField\": \"Currency\"\r\n        },\r\n        {\r\n            \"dataField\": \"ExternalId\"\r\n        },\r\n        {\r\n            \"dataField\": \"Vat\"\r\n        },\r\n        {\r\n            \"dataField\": \"Active\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"function(e) { \r\n        var dataGrid = e.component;  \r\n        e.toolbarOptions.items.unshift({ \r\n            location: 'after', \r\n            template: 'toggleHeaderFilterButtonTemplate'\r\n    });\r\n        e.toolbarOptions.items.unshift({ \r\n            location: 'after', \r\n            widget: 'dxButton', \r\n            options: { icon: 'plus', onClick: function() {\r\n                SkillsWorkflow.genericNew('suppliers',\r\n                650,\r\n                900);\r\n            }\r\n        }\r\n    });\r\n     var dataGrid = e.component;\r\n        \r\n        e.toolbarOptions.items.unshift({ \r\n            location: 'after', \r\n            widget: 'dxButton', \r\n            options: { icon: 'fal fa-times', onClick: function() {\r\n                SW.genericDelete('suppliers', dataGrid);\r\n            }\r\n        }\r\n    });\r\n}\"\r\n}",
      "DashboardDefinitionId": "7707a980-f600-4186-9c0e-f35f4db771d9"
    }
  ]
}