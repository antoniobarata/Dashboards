{
  "DashboardDefinitionRoles": [
    {
      "AccessRoleId": "9302d41e-ba15-4bc6-8925-d535104024fe",
      "DashboardDefinitionId": "8ac0045e-0215-4a31-bc28-ef0293b410ed",
      "AccessRoleName": "AdministrationCreate"
    },
    {
      "AccessRoleId": "60efc496-5a20-43b4-9a76-006b5670b24f",
      "DashboardDefinitionId": "8ac0045e-0215-4a31-bc28-ef0293b410ed",
      "AccessRoleName": "Responsable"
    }
  ],
  "Id": "8ac0045e-0215-4a31-bc28-ef0293b410ed",
  "Name": "hdhdh",
  "Active": true,
  "Location": 2,
  "DocumentId": "00000000-0000-0000-0000-000000000000",
  "DocumentName": "",
  "DocumentTypeName": "commercialclientproduct",
  "DocumentsConfiguration": "{\n    \"entity\": \"commercialclientproduct\",\n    \"operations\": {\n        \"read\": {\n            \"endpoint\": \"commercialproducts\"\n        },\n        \"update\": {\n            \"endpoint\": \"commercialproducts\",\n            \"model\": {\n                \"CommercialClientId\": \"CommercialClientId\",\n                \"NameAndExternalId\": \"NameAndExternalId\",\n                \"Name\": \"Name\",\n                \"Code\": \"Code\",\n                \"ExternalId\": \"ExternalId\",\n                \"Active\": \"Active\",\n                \"AllowsTimesheet\": \"AllowsTimesheet\"\n            }\n        },\n        \"create\": {\n            \"endpoint\": \"commercialproducts\",\n            \"model\": {\n                \"CommercialClientId\": \"CommercialClientId\",\n                \"NameAndExternalId\": \"NameAndExternalId\",\n                \"Name\": \"Name\",\n                \"Code\": \"Code\",\n                \"ExternalId\": \"ExternalId\",\n                \"Active\": \"Active\",\n                \"AllowsTimesheet\": \"AllowsTimesheet\"\n            }\n        },\n        \"remove\": {\n            \"endpoint\": \"commercialproducts\"\n        }\n    },\n    \"layout\": {\n        \"create\": {\n            \"colCount\": 2,\n            \"items\": [\n                {\n                    \"colSpan\": 2,\n                    \"dataField\": \"Name\",\n                    \"label\": {\n                        \"text\": \"Name\"\n                    },\n                    \"editorType\": \"dxTextBox\",\n                    \"editorOptions\": {\n                        \"mode\": \"text\",\n                        \"placeholder\": \"Please add the product name...\"\n                    },\n                    \"validationRules\": [\n                        {\n                            \"type\": \"required\",\n                            \"message\": \"Name is required\"\n                        }\n                    ]\n                },\n                {\n                    \"dataField\": \"CommercialClientId\",\n                    \"colSpan\": 2,\n                    \"label\": {\n                        \"text\": \"Client\"\n                    },\n                    \"validationRules\": [\n                        {\n                            \"type\": \"required\",\n                            \"message\": \"Client is required\"\n                        }\n                    ],\n                    \"editorType\": \"dxSelectBox\",\n                    \"editorOptions\": {\n                        \"searchEnabled\": true,\n                        \"dataSource\": {\n                            \"load\": \"function load(loadOptions){\n                                            debugger; \n                                            var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); \n                                            var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); \n                                            return SkillsWorkflow.executeAPI('GET','commercialclients',\n                            null,\n                            {}).then( result =>  { debugger; return  Promise.resolve(result);\n                            })\n                        }\",\n                            \"byKey\": \"function bykey(key) { return SkillsWorkflow.executeAPI('GET','commercialclients/'+key+'/lookup',null,{}).then( \n                                                result =>  {debugger; return Promise.resolve(result);\n                        }\n                                )\n                    }\"\n                },\n                \"displayExpr\": \"NameAndExternalId\",\n                \"valueExpr\": \"Id\"\n            }\n        },\n        {\n            \"dataField\": \"Code\",\n            \"label\": {\n                \"text\": \"Code\"\n            }\n        },\n        {\n            \"dataField\": \"ExternalId\",\n            \"label\": {\n                \"text\": \"External Id\"\n            }\n        },\n        {\n            \"dataField\": \"Active\",\n            \"editorType\": \"dxCheckBox\",\n            \"editorOptions\": {\n                \"value\": false\n            }\n        },\n        {\n            \"dataField\": \"AllowsTimesheet\",\n            \"label\": {\n                \"text\": \"Allows Timesheet\"\n            },\n            \"editorType\": \"dxCheckBox\"\n        }\n    ]\n},\n\"read\": {\n    \"colCount\": 2,\n    \"items\": [\n        {\n            \"dataField\": \"Name\"\n        },\n        {\n            \"dataField\": \"CommercialClientId\",\n            \"label\": {\n                \"text\": \"Client\"\n            },\n            \"disabled\": true,\n            \"editorType\": \"dxSelectBox\",\n            \"editorOptions\": {\n                \"searchEnabled\": true,\n                \"dataSource\": {\n                    \"load\": \"function(loadOptions){var searchValue = (loadOptions.searchValue != null ? loadOptions.searchValue : ''); var searchTake = (loadOptions.searchValue != null && loadOptions.searchValue != '' ? 10 : 100); return SkillsWorkflow.executeAPI('GET','commercialclients',null,{}).toPromise().then( result =>  { return Promise.resolve(result); })}\",\n                    \"byKey\": \"function(key) { return SkillsWorkflow.executeAPI('GET','commercialclients/'+key+'/lookup',null,{}).then( \n                                                result =>  { \n                                                    return Promise.resolve(result);\n                    }\n                                )\n                }\"\n            },\n            \"displayExpr\": \"Name\",\n            \"valueExpr\": \"Id\",\n            \"onValueChanged\": \"function(e){ debugger;}\"\n        },\n        \"noDataText\": \"Please wait...\"\n    },\n    {\n        \"dataField\": \"Code\",\n        \"label\": {\n            \"text\": \"Code\"\n        }\n    },\n    {\n        \"dataField\": \"ExternalId\",\n        \"label\": {\n            \"text\": \"External Id\"\n        }\n    },\n    {\n        \"dataField\": \"Active\",\n        \"editorType\": \"dxCheckBox\"\n    },\n    {\n        \"dataField\": \"AllowsTimesheet\",\n        \"label\": {\n            \"text\": \"Allows Timesheet\"\n        },\n        \"editorType\": \"dxCheckBox\"\n    }\n]\n}\n},\n\n\"availableOptions\": {\n\"feed\": false,\n\"info\": true,\n\"files\": false,\n\"userfields\": false,\n\"dashboard\": true\n}\n}",
  "Templates": [],
  "DashboardDefinitionComponents": [
    {
      "Id": "f3983aa9-841a-443f-95ca-87be4a01eeb3",
      "Name": "Divisions",
      "Active": true,
      "UseQuery": true,
      "Query": null,
      "Size": 12,
      "Order": 0,
      "Parameters": "[{\"WidgetSubTitle\":\"Departments by company \",\"WidgetType\":\"grid\",\"WidgetFilterField\":\"\",\"WidgetColor\":\"\",\"WidgetXPosition\":0,\"WidgetYPosition\":0,\"WidgetRows\":24,\"WidgetColumns\":48,\"WidgetHeader\":{\"showContextInfo\":false,\"ShowTitle\":false,\"ShowSubTitle\":false,\"WidgetPeriodChooser\":{\"type\":\"year\",\"visible\":false},\"WidgetMetrics\":{\"visible\":false,\"Metrics\":[{\"visible\":true,\"metricName\":\"? Integration Errors\",\"metricFieldValue\":\"Integration Errors\"}]},\"showSubTitle\":false,\"showTitle\":false},\"WidgetDataSources\":{\"main\":{\"type\":\"queryText\",\"value\":\"select  cc.Oid as ClientId,\\r\\n        cc.Name as ClientName,\\r\\n        cc.HasImage as ClientHasImage,\\r\\n        ccp.*\\r\\nfrom CommercialClientProduct ccp, CommercialClient cc, WorkflowState ws\\r\\nwhere cc.Oid = ccp.CommercialClient\\r\\n      and ws.Oid=cc.WorkflowState\\r\\n      AND WS.NAME != 'Canceled'\\r\\n\",\"mapping\":\"\"}},\"Filters\":{},\"QueryConfiguration\":{}}]",
      "DashboardComponentType": {
        "Id": "3c1da83b-efe9-4b70-87d0-c3813a512774",
        "Name": "Generic Dashboard",
        "ComponentTypeNumber": 42
      },
      "AnalyticsApiUrl": null,
      "Configuration": "{\r\n    \"onRowClick\": \"function(e){if(e.rowType=='data') SkillsWorkflow.genericPreview(e.key.Oid, 'Name', 'commercialclientproduct');}\",\r\n    \"selection\": {\r\n        \"mode\": \"multiple\"\r\n    },\r\n    \"columns\": [\r\n        {\r\n            \"dataField\": \"Oid\",\r\n            \"visible\": false\r\n        },\r\n        {\r\n            \"dataField\": \"ClientName\",\r\n            \"groupIndex\": 0,\r\n            \"groupCellTemplate\": \"function groupCell(e, i) {                  var h1=document.createElement('span');                  var h=document.createElement('span');                    e.append(h1);                       var data='';                    if(i.data.items != null){ data = i.data.items[                    0                ]            }                     else { data= i.data.collapsedItems[                    0                ]            }                                        SW.showImage(h1, 'client', 'small', data.ClientHasImage, data.ClientName, data.ClientId);                      e.append(h);                                              var ht= ' ' + i.text + ' ';                                          h.innerHTML = ht;        }\",\r\n            \"cellTemplate\": \"function cellTemplate(e, i) {                  var h1=document.createElement('span');                  var h=document.createElement('span');                    e.append(h1);                        debugger;                    SW.showImage(h1, 'client', 'small', i.data.ClientHasImage, i.data.ClientName, i.data.ClientId);                      e.append(h);                                              var ht= ' ' + i.text + ' ';                                          h.innerHTML = ht;    }\"\r\n        },\r\n        {\r\n            \"dataField\": \"Name\"\r\n        },\r\n        {\r\n            \"dataField\": \"Code\"\r\n        },\r\n        {\r\n            \"dataField\": \"ExternalId\"\r\n        },\r\n        {\r\n            \"dataField\": \"Active\"\r\n        },\r\n        {\r\n            \"dataField\": \"AllowsTimesheet\"\r\n        }\r\n    ],\r\n    \"onToolbarPreparing\": \"function(e) {         var dataGrid = e.component;          e.toolbarOptions.items.unshift({             location: 'after',             template: 'toggleHeaderFilterButtonTemplate'});        e.toolbarOptions.items.unshift({             location: 'after',             widget: 'dxButton',             options: { icon: 'plus', onClick: function() {                SkillsWorkflow.genericNew('commercialclientproduct',        455,        720);    }}});}\",\r\n    \"entity\": \"commercialclientproduct\"\r\n}",
      "DashboardDefinitionId": "8ac0045e-0215-4a31-bc28-ef0293b410ed"
    }
  ]
}